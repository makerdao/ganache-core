{"map":"{\"version\":3,\"sources\":[\"webpack/universalModuleDefinition\",\"webpack/bootstrap\",\"/Users/Tyler/ganache-fork/ganache-core/lib/utils/to.js\",\"external \\\"util\\\"\",\"external \\\"async\\\"\",\"external \\\"ethereumjs-util\\\"\",\"external \\\"web3-provider-engine/subproviders/subprovider.js\\\"\",\"external \\\"bn.js\\\"\",\"external \\\"lodash\\\"\",\"external \\\"source-map-support/register\\\"\",\"external \\\"ethereumjs-account\\\"\",\"/Users/Tyler/ganache-fork/ganache-core/lib/utils/runtimeerror.js\",\"/Users/Tyler/ganache-fork/ganache-core/lib/utils/transaction.js\",\"external \\\"ethereumjs-block\\\"\",\"/Users/Tyler/ganache-fork/ganache-core/lib/utils/log.js\",\"/Users/Tyler/ganache-fork/ganache-core/lib/utils/receipt.js\",\"/Users/Tyler/ganache-fork/ganache-core/lib/utils/errorhelper.js\",\"external \\\"events\\\"\",\"/Users/Tyler/ganache-fork/ganache-core/node_modules/web3/src/index.js\",\"/Users/Tyler/ganache-fork/ganache-core/lib/provider.js\",\"/Users/Tyler/ganache-fork/ganache-core/node_modules/ethereumjs-wallet/index.js\",\"/Users/Tyler/ganache-fork/ganache-core/lib/blockchain_double.js\",\"external \\\"merkle-patricia-tree\\\"\",\"external \\\"level-sublevel\\\"\",\"/Users/Tyler/ganache-fork/ganache-core/lib/database/txserializer.js\",\"/Users/Tyler/ganache-fork/ganache-core/lib/utils/txrejectederror.js\",\"/Users/Tyler/ganache-fork/ganache-core/lib/utils/block_helper.js\",\"/Users/Tyler/ganache-fork/ganache-core/public-exports.js\",\"external \\\"web3-provider-engine\\\"\",\"external \\\"web3-provider-engine/subproviders/subscriptions\\\"\",\"/Users/Tyler/ganache-fork/ganache-core/lib/subproviders/requestfunnel.js\",\"/Users/Tyler/ganache-fork/ganache-core/lib/subproviders/delayedblockfilter.js\",\"/Users/Tyler/ganache-fork/ganache-core/lib/subproviders/gethdefaults.js\",\"/Users/Tyler/ganache-fork/ganache-core/lib/subproviders/geth_api_double.js\",\"/Users/Tyler/ganache-fork/ganache-core/lib/statemanager.js\",\"external \\\"ethereumjs-abi\\\"\",\"external \\\"ethereumjs-tx\\\"\",\"external \\\"ethereumjs-tx/fake\\\"\",\"external \\\"assert\\\"\",\"external \\\"rlp\\\"\",\"external \\\"seedrandom\\\"\",\"external \\\"bip39\\\"\",\"external \\\"safe-buffer\\\"\",\"external \\\"crypto\\\"\",\"external \\\"scrypt.js\\\"\",\"external \\\"uuid/v4\\\"\",\"external \\\"bs58check\\\"\",\"/Users/Tyler/ganache-fork/ganache-core/node_modules/ethereumjs-wallet/hdkey.js\",\"external \\\"hdkey\\\"\",\"external \\\"ethereumjs-vm\\\"\",\"external \\\"heap\\\"\",\"/Users/Tyler/ganache-fork/ganache-core/lib/database.js\",\"/Users/Tyler/ganache-fork/ganache-core/lib/database/leveluparrayadapter.js\",\"/Users/Tyler/ganache-fork/ganache-core/lib/database/levelupobjectadapter.js\",\"external \\\"levelup\\\"\",\"external \\\"encoding-down\\\"\",\"/Users/Tyler/ganache-fork/ganache-core/lib/database/filedown.js\",\"external \\\"abstract-leveldown\\\"\",\"external \\\"fs\\\"\",\"external \\\"path\\\"\",\"external \\\"cachedown\\\"\",\"/Users/Tyler/ganache-fork/ganache-core/lib/database/blockserializer.js\",\"/Users/Tyler/ganache-fork/ganache-core/lib/database/bufferserializer.js\",\"/Users/Tyler/ganache-fork/ganache-core/lib/database/blocklogsserializer.js\",\"/Users/Tyler/ganache-fork/ganache-core/lib/database/receiptserializer.js\",\"external \\\"tmp\\\"\",\"/Users/Tyler/ganache-fork/ganache-core/lib/utils/gasEstimation.js\",\"/Users/Tyler/ganache-fork/ganache-core/lib/utils/forkedblockchain.js\",\"/Users/Tyler/ganache-fork/ganache-core/lib/utils/forkedstoragetrie.js\",\"external \\\"merkle-patricia-tree/baseTrie\\\"\",\"external \\\"merkle-patricia-tree/checkpoint-interface\\\"\",\"external \\\"web3-core\\\"\",\"external \\\"web3-eth\\\"\",\"external \\\"web3-net\\\"\",\"external \\\"web3-eth-personal\\\"\",\"external \\\"web3-shh\\\"\",\"external \\\"web3-bzz\\\"\",\"external \\\"web3-utils\\\"\",\"external \\\"eth-sig-util\\\"\",\"/Users/Tyler/ganache-fork/ganache-core/lib/utils/random.js\",\"/Users/Tyler/ganache-fork/ganache-core/lib/block_tracker.js\",\"/Users/Tyler/ganache-fork/ganache-core/lib/server.js\",\"/Users/Tyler/ganache-fork/ganache-core/lib/webSocketServer.js\",\"external \\\"websocket\\\"\",\"/Users/Tyler/ganache-fork/ganache-core/lib/httpServer.js\",\"external \\\"http\\\"\"],\"names\":[\"root\",\"factory\",\"exports\",\"module\",\"define\",\"amd\",\"global\",\"installedModules\",\"__webpack_require__\",\"moduleId\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"utils\",\"buffer\",\"val\",\"data\",\"indexOf\",\"slice\",\"length\",\"Buffer\",\"from\",\"isBuffer\",\"hex\",\"trim\",\"BN\",\"intToHex\",\"toString\",\"addHexPrefix\",\"_rpcQuantityHexString\",\"this\",\"replace\",\"rpcQuantityHexString\",\"rpcDataHexString\",\"Array\",\"fill\",\"join\",\"nullableRpcDataHexString\",\"rpcDataHex\",\"nullableRpcQuantityHexString\",\"rpcQuantityHex\",\"hexWithZeroPadding\",\"digits\",\"number\",\"parseInt\",\"bufVal\",\"toBuffer\",\"bufferToInt\",\"rpcError\",\"id\",\"code\",\"msg\",\"JSON\",\"stringify\",\"jsonrpc\",\"error\",\"message\",\"require\",\"inherits\",\"to\",\"abi\",\"RuntimeError\",\"transactions\",\"vmOutput\",\"Error\",\"captureStackTrace\",\"constructor\",\"results\",\"hashes\",\"combine\",\"err\",\"keys\",\"push\",\"apply\",\"tx\",\"result\",\"vm\",\"exception\",\"reason\",\"hash\",\"returnData\",\"return\",\"rawDecode\",\"exceptionError\",\"program_counter\",\"runState\",\"programCounter\",\"exceptionResult\",\"count\",\"fromResults\",\"EthereumJsTransaction\",\"EthereumJsFakeTransaction\",\"ethUtil\",\"assert\",\"rlp\",\"sign\",\"fakeHash\",\"_hash\",\"arguments\",\"BUFFER_ZERO\",\"fixProps\",\"_originals\",\"forEach\",\"fieldName\",\"fieldLength\",\"index\",\"_fields\",\"descriptor\",\"getOwnPropertyDescriptor\",\"set\",\"v\",\"configZeroableField\",\"vDescriptors\",\"sigV\",\"chainId\",\"Math\",\"floor\",\"_chainId\",\"isFake\",\"configurable\",\"getSenderAddress\",\"_from\",\"Transaction\",\"[object Object]\",\"type\",\"types\",\"none\",\"super\",\"decode\",\"self\",\"isArray\",\"field\",\"raw\",\"initData\",\"signed\",\"fake\",\"json\",\"toAccount\",\"buf\",\"equals\",\"setLengthLeft\",\"input\",\"options\",\"nonce\",\"gasLimit\",\"gas\",\"gasPrice\",\"_type\",\"expectedNonce\",\"isSigned\",\"block\",\"transactionIndex\",\"txns\",\"blockHash\",\"blockNumber\",\"header\",\"includeSignature\",\"items\",\"cacheRaw\",\"rlphash\",\"Log\",\"toJSON\",\"logIndex\",\"transactionHash\",\"address\",\"topics\",\"Receipt\",\"logs\",\"gasUsed\",\"cumulativeGasUsed\",\"contractAddress\",\"status\",\"logsBloom\",\"txHash\",\"map\",\"log\",\"LevelUpOutOfRangeError\",\"len\",\"BlockOutOfRangeError\",\"version\",\"core\",\"Eth\",\"Net\",\"Personal\",\"Shh\",\"Bzz\",\"Web3\",\"_this\",\"packageInit\",\"eth\",\"shh\",\"bzz\",\"setProvider\",\"provider\",\"net\",\"addProviders\",\"ProviderEngine\",\"SubscriptionSubprovider\",\"RequestFunnel\",\"DelayedBlockFilter\",\"GethDefaults\",\"GethApiDouble\",\"BlockTracker\",\"EventEmitter\",\"_\",\"Provider\",\"_applyDefaultOptions\",\"gethApiDouble\",\"engine\",\"blockTracker\",\"blockchain\",\"state\",\"subscriptionSubprovider\",\"manager\",\"addProvider\",\"setMaxListeners\",\"start\",\"sendAsync\",\"send\",\"close\",\"_queueRequest\",\"_processRequestQueue\",\"on\",\"notification\",\"emit\",\"defaultOptions\",\"vmErrorsOnRPCResponse\",\"verbose\",\"asyncRequestProcessing\",\"logger\",\"merge\",\"payload\",\"callback\",\"externalize\",\"cloneDeep\",\"intermediary\",\"response\",\"reportErrorInResponse\",\"split\",\"process\",\"nextTick\",\"stopMining\",\"stop\",\"_requestQueue\",\"setImmediate\",\"_requestInProgress\",\"args\",\"shift\",\"cleanUpErrorObject\",\"errorObject\",\"stack\",\"transactionMethods\",\"_isTransactionRequest\",\"request\",\"method\",\"_typeof\",\"iterator\",\"obj\",\"crypto\",\"scryptsy\",\"uuidv4\",\"bs58check\",\"decipherBuffer\",\"decipher\",\"concat\",\"update\",\"final\",\"Wallet\",\"priv\",\"pub\",\"isValidPrivate\",\"isValidPublic\",\"_privKey\",\"_pubKey\",\"privateToPublic\",\"privKey\",\"generate\",\"icapDirect\",\"randomBytes\",\"max\",\"privateToAddress\",\"lte\",\"generateVanityAddress\",\"pattern\",\"RegExp\",\"test\",\"getPrivateKey\",\"getPrivateKeyString\",\"bufferToHex\",\"getPublicKey\",\"pubKey\",\"getPublicKeyString\",\"getAddress\",\"publicToAddress\",\"getAddressString\",\"getChecksumAddressString\",\"toChecksumAddress\",\"toV3\",\"password\",\"opts\",\"derivedKey\",\"salt\",\"iv\",\"kdf\",\"kdfparams\",\"dklen\",\"prf\",\"pbkdf2Sync\",\"cipher\",\"createCipheriv\",\"ciphertext\",\"mac\",\"sha3\",\"random\",\"uuid\",\"cipherparams\",\"getV3Filename\",\"timestamp\",\"Date\",\"toV3String\",\"fromPublicKey\",\"nonStrict\",\"importPublic\",\"fromExtendedPublicKey\",\"fromPrivateKey\",\"fromExtendedPrivateKey\",\"tmp\",\"fromV1\",\"parse\",\"Version\",\"Crypto\",\"KeyHeader\",\"Kdf\",\"KdfParams\",\"Salt\",\"N\",\"R\",\"P\",\"DkLen\",\"CipherText\",\"MAC\",\"seed\",\"createDecipheriv\",\"IV\",\"fromV3\",\"toLowerCase\",\"fromEthSale\",\"encseed\",\"wallet\",\"ethaddr\",\"Account\",\"Block\",\"VM\",\"Trie\",\"async\",\"Heap\",\"Database\",\"estimateGas\",\"promisify\",\"BlockchainDouble\",\"console\",\"trie\",\"db_path\",\"pending_transactions\",\"blockGasLimit\",\"defaultTransactionGasLimit\",\"timeAdjustment\",\"time\",\"debug\",\"hardfork\",\"allowUnlimitedContractSize\",\"assign\",\"initialize\",\"accounts\",\"latestBlock\",\"stateRoot\",\"stateTrie\",\"createStateTrie\",\"trie_db\",\"createVMFromStateTrie\",\"setTime\",\"createGenesisBlock\",\"stateManager\",\"checkpoint\",\"eachSeries\",\"accountData\",\"finished\",\"putAccount\",\"account\",\"commit\",\"putBlock\",\"activatePrecompiles\",\"getBlock\",\"done\",\"e\",\"info\",\"opcode\",\"argsNum\",\"in\",\"arg\",\"db\",\"createBlock\",\"blocks\",\"last\",\"getEffectiveBlockNumber\",\"getHeight\",\"blockHashes\",\"blockIndex\",\"first\",\"receipts\",\"requests\",\"blockLogs\",\"transactionReceipts\",\"parallel\",\"popBlock\",\"del\",\"pop\",\"series\",\"newLastBlock\",\"setStateRoot\",\"_storageTries\",\"clearPendingTransactions\",\"parent\",\"getParent\",\"parentNumber\",\"currentTime\",\"parentHash\",\"getQueuedNonce\",\"addressBuffer\",\"pendingNonce\",\"gt\",\"iaddn\",\"toArrayLike\",\"queueTransaction\",\"sortByPriceAndNonce\",\"sortedByNonce\",\"arr\",\"nonceSort\",\"a\",\"b\",\"sort\",\"heap\",\"sortedTransactions\",\"size\",\"best\",\"processCall\",\"runCall\",\"parentBlock\",\"newBlock\",\"runArgs\",\"skipBalance\",\"skipNonce\",\"runTx\",\"vmerr\",\"processBlock\",\"runBlock\",\"skipBlockValidation\",\"totalBlockGasUsage\",\"txTrie\",\"rcptTrie\",\"promises\",\"putInTrie\",\"put\",\"receipt\",\"txLogs\",\"receiptLog\",\"j\",\"rcpt\",\"createdAddress\",\"bitvector\",\"rawReceipt\",\"rcptBuffer\",\"encode\",\"serialize\",\"Promise\",\"all\",\"transactionsTrie\",\"receiptTrie\",\"processNextBlock\",\"undefined\",\"currentTransactions\",\"totalGasLimit\",\"maxGasLimit\",\"processTransactionTrace\",\"params\",\"targetHash\",\"txHashCurrentlyProcessing\",\"txCurrentlyProcessing\",\"storageStack\",\"currentDepth\",\"returnVal\",\"returnValue\",\"structLogs\",\"stepListener\",\"event\",\"next\",\"gasLeft\",\"gasUsedThisStep\",\"memory\",\"disableMemory\",\"match\",\"lastItem\",\"disableStack\",\"item\",\"structLog\",\"depth\",\"gasCost\",\"op\",\"pc\",\"storage\",\"disableStorage\",\"processStorageTrace\",\"getTransactionReceipt\",\"targetBlock\",\"beforeTxListener\",\"afterTxListener\",\"removeListeners\",\"removeListener\",\"getContractStorage\",\"getAccount\",\"currentStateRoot\",\"getNonce\",\"getBalance\",\"balance\",\"getStorage\",\"position\",\"getCode\",\"getTransaction\",\"notFound\",\"pendingTxs\",\"getBlockLogs\",\"effective\",\"getTime\",\"increaseTime\",\"seconds\",\"date\",\"now\",\"fromJSON\",\"TXRejectedError\",\"includeFullTransactions\",\"mixHash\",\"sha3Uncles\",\"uncleHash\",\"bloom\",\"transactionsRoot\",\"receiptsRoot\",\"miner\",\"coinbase\",\"difficulty\",\"totalDifficulty\",\"extraData\",\"toJsonRpc\",\"uncles\",\"Server\",\"server\",\"_webpacked\",\"Subprovider\",\"methods\",\"eth_call\",\"eth_getStorageAt\",\"eth_sendTransaction\",\"eth_sendRawTransaction\",\"eth_newBlockFilter\",\"eth_getFilterChanges\",\"eth_getFilterLogs\",\"queue\",\"isWorking\",\"handleRequest\",\"end\",\"external\",\"processNext\",\"cb\",\"watching\",\"handleNewBlockFilter\",\"handleGetFilterChanges\",\"filterId\",\"currentBlockHash\",\"previousBlockHash\",\"emitPayload\",\"res\",\"StateManager\",\"blockHelper\",\"pkg\",\"initialized\",\"initialization_error\",\"post_initialization_callbacks\",\"callbacks\",\"waitForInitialization\",\"addedBlockParam\",\"requiresDefaultBlockParameter\",\"minLength\",\"errorMessage\",\"getDelayedHandler\",\"eth_getBalance\",\"eth_getCode\",\"eth_getTransactionCount\",\"eth_estimateGas\",\"eth_accounts\",\"eth_blockNumber\",\"eth_coinbase\",\"eth_mining\",\"is_mining\",\"eth_hashrate\",\"eth_gasPrice\",\"eth_getBlockByNumber\",\"eth_getBlockByHash\",\"eth_getBlockTransactionCountByNumber\",\"eth_getBlockTransactionCountByHash\",\"eth_getTransactionReceipt\",\"eth_getTransactionByHash\",\"eth_getTransactionByBlockHashAndIndex\",\"hashOrNumber\",\"eth_getTransactionByBlockNumberAndIndex\",\"getTransactionCount\",\"eth_sign\",\"dataToSign\",\"eth_signTypedData\",\"typedDataToSign\",\"signTypedData\",\"txData\",\"rawTx\",\"queueRawTransaction\",\"queueStorage\",\"latestFilterId\",\"mine\",\"eth_getLogs\",\"filter\",\"getLogs\",\"eth_uninstallFilter\",\"eth_protocolVersion\",\"bzz_hive\",\"bzz_info\",\"shh_version\",\"eth_getCompilers\",\"eth_syncing\",\"net_listening\",\"net_peerCount\",\"web3_clientVersion\",\"web3_sha3\",\"string\",\"net_version\",\"miner_start\",\"threads\",\"startMining\",\"miner_stop\",\"rpc_modules\",\"rpc\",\"web3\",\"evm\",\"personal\",\"personal_listAccounts\",\"personal_accounts\",\"personal_newAccount\",\"createAccount\",\"account_passwords\",\"personal_importRawKey\",\"rawKey\",\"secretKey\",\"personal_lockAccount\",\"unlocked_accounts\",\"personal_unlockAccount\",\"duration\",\"storedPassword\",\"personal_sendTransaction\",\"ret\",\"evm_snapshot\",\"snapshot\",\"evm_revert\",\"snapshotId\",\"revert\",\"evm_increaseTime\",\"evm_setTime\",\"evm_mine\",\"debug_traceTransaction\",\"queueTransactionTrace\",\"eth_getUncleCountByBlockHash\",\"eth_getUncleCountByBlockNumber\",\"eth_getUncleByBlockHashAndIndex\",\"eth_getUncleByBlockNumberAndIndex\",\"uncleIndex\",\"eth_getWork\",\"eth_submitWork\",\"powHash\",\"digest\",\"eth_submitHashrate\",\"hashRate\",\"clientID\",\"db_putString\",\"dbName\",\"db_getString\",\"db_putHex\",\"db_getHex\",\"shh_post\",\"priority\",\"ttl\",\"shh_newIdentity\",\"shh_hasIdentity\",\"shh_newGroup\",\"shh_addToGroup\",\"shh_newFilter\",\"shh_uninstallFilter\",\"shh_getFilterChanges\",\"shh_getMessages\",\"seedrandom\",\"bip39\",\"hdkey\",\"ForkedBlockchain\",\"sigUtil\",\"ZERO_BUFFER\",\"fork\",\"secure\",\"total_accounts\",\"latest_filter_id\",\"action_queue\",\"action_processing\",\"snapshots\",\"network_id\",\"mnemonic\",\"fromMasterSeed\",\"mnemonicToSeed\",\"wallet_hdpath\",\"hdPath\",\"gasPriceVal\",\"blockTime\",\"is_mining_on_interval\",\"mining_interval_timeout\",\"_provider\",\"default_balance_ether\",\"randomAlphaNumericString\",\"entropyToMnemonic\",\"defaultBalanceWei\",\"toWei\",\"reduce\",\"idx\",\"forkVersion\",\"mineOnInterval\",\"_minerCancellationToken\",\"clearTimeout\",\"cancelled\",\"cancellationToken\",\"timeout\",\"setTimeout\",\"unref\",\"derivePath\",\"getWallet\",\"publicKey\",\"_queueTransaction\",\"processNextAction\",\"txJsonRpc\",\"isKnownAccount\",\"_setTransactionDefaults\",\"allocUnsafe\",\"override\",\"queued\",\"processTransaction\",\"processGasEstimate\",\"msgHash\",\"hashPersonalMessage\",\"sgn\",\"ecsign\",\"toRpcSig\",\"EIP712Domain\",\"domain\",\"primaryType\",\"printTransactionReceipt\",\"runtimeError\",\"finishedPrinting\",\"processBlocks\",\"totalBlocks\",\"amountProcessed\",\"whilst\",\"createTransactionWithCorrectNonce\",\"gasRefund\",\"gasEstimate\",\"add\",\"expectedAddress\",\"expectedTopics\",\"fromBlock\",\"toBlock\",\"current\",\"filtered\",\"keep\",\"expectedTopic\",\"logTopic\",\"isMatch\",\"includes\",\"nextSnapshot\",\"during\",\"doneWithTest\",\"nextBlock\",\"hasContractCode\",\"getContractCode\",\"isUnlocked\",\"validateNonce\",\"resolve\",\"expected\",\"actual\",\"reject\",\"then\",\"catch\",\"HDKey\",\"EthereumHDKey\",\"fromHDKey\",\"_hdkey\",\"seedBuffer\",\"fromExtendedKey\",\"base58key\",\"privateExtendedKey\",\"publicExtendedKey\",\"path\",\"derive\",\"deriveChild\",\"_privateKey\",\"_publicKey\",\"LevelUpArrayAdapter\",\"LevelUpObjectAdapter\",\"levelup\",\"filedown\",\"cachedown\",\"txserializer\",\"blockserializer\",\"bufferserializer\",\"BlockLogsSerializer\",\"ReceiptSerializer\",\"directory\",\"finishInitializing\",\"dir\",\"getDir\",\"levelupOptions\",\"valueEncoding\",\"store\",\"maxSize\",\"Sublevel\",\"serializer\",\"sublevel\",\"_get\",\"_put\",\"encoded\",\"RangeError\",\"newLength\",\"valueserializer\",\"keyserializer\",\"encodedKey\",\"decodedValue\",\"batch\",\"array\",\"each\",\"isOpen\",\"util\",\"AbstractLevelDOWN\",\"fs\",\"FileDown\",\"location\",\"_open\",\"writeFile\",\"readFile\",\"_del\",\"unlink\",\"_batch\",\"txJson\",\"database\",\"steps\",\"stepTracker\",\"collect\",\"opsLength\",\"ops\",\"success\",\"lowestGasIndex\",\"costOfData\",\"acc\",\"curr\",\"total\",\"getTotal\",\"sysOpIndex\",\"estimate\",\"lastSVT\",\"tailCost\",\"sub\",\"stipend\",\"lt\",\"sumRange\",\"top\",\"needed\",\"tail\",\"findParentScope\",\"opIndex\",\"findIndex\",\"begin\",\"systemOps\",\"parentBegin\",\"parentEnd\",\"isStipend\",\"lowestIndex\",\"lowestGas\",\"Infinity\",\"findLowestIndex\",\"rootBegin\",\"rootEnd\",\"findRootScope\",\"systemOpSum\",\"callingSysOp\",\"callingFee\",\"fee\",\"sumOfCurrentSysOp\",\"neededBefore6364\",\"oneSixtyFloorth\",\"prevParentBegin\",\"prevParentEnd\",\"costOfParentReturn\",\"remaining\",\"sysOps\",\"allOps\",\"svt\",\"isCall\",\"opname\",\"isTerminator\",\"indexMap\",\"lowestSysOpIndex\",\"lowestGasLeft\",\"simpleCallCheck\",\"simpleCallDepth\",\"toNumber\",\"isCreate\",\"simpleValueTransfers\",\"ForkedStorageTrie\",\"forkBlockNumber\",\"fork_block_number\",\"providers\",\"HttpProvider\",\"storageTrieCache\",\"patchVM\",\"getId\",\"_trie\",\"lookupAccount\",\"getLookupAccount\",\"_cache\",\"_lookupAccount\",\"_lookupStorageTrie\",\"getLookupStorageTrie\",\"storageTrie\",\"copy\",\"isFallbackBlock\",\"isBlockHash\",\"byteLength\",\"isFallbackBlockHash\",\"getFallbackBlock\",\"numberOrHash\",\"real\",\"checkFn\",\"isFallback\",\"getRelativeBlockNumber\",\"keyExists\",\"exists\",\"fetchCodeFromFallback\",\"fetchAccountFromFallback\",\"receiptJson\",\"fetchBalanceFromFallback\",\"fetchNonceFromFallback\",\"setCode\",\"getSafeFallbackBlockNumber\",\"safeBlockNumber\",\"toBN\",\"relative\",\"currentProvider\",\"MerklePatriciaTree\",\"BaseTrie\",\"checkpointInterface\",\"ForkedStorageBaseTrie\",\"getStorageAt\",\"findPath\",\"node\",\"remainder\",\"prove\",\"verifyProof\",\"rng\",\"alphabet\",\"text\",\"charAt\",\"GanacheBlockTracker\",\"_blockchain\",\"getTrackingBlock\",\"awaitCurrentBlock\",\"_setCurrentBlock\",\"_currentBlock\",\"getCurrentBlock\",\"once\",\"_isRunning\",\"oldBlock\",\"webSocketServer\",\"httpServer\",\"keepAliveTimeout\",\"connectionCounter\",\"connections\",\"conn\",\"oldListen\",\"listen\",\"ws\",\"oldClose\",\"destroy\",\"websocket\",\"WebSocketServer\",\"ConnectionManager\",\"connectionsBySubscriptionId\",\"_updateSubscriptions\",\"manageConnection\",\"_logPayload\",\"_handleRequest\",\"connectionManager\",\"wsServer\",\"autoAcceptConnections\",\"connection\",\"subscriptions\",\"utf8Data\",\"binaryData\",\"CLOSE_REASON_UNPROCESSABLE_INPUT\",\"subscriptionId\",\"subscription\",\"http\",\"sendResponse\",\"statusCode\",\"headers\",\"writeHead\",\"createServer\",\"body\",\"chunk\",\"requestHeaders\",\"origin\",\"createCORSResponseHeaders\",\"ganacheProvider\"],\"mappings\":\"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\",\"sourcesContent\":[\"(function webpackUniversalModuleDefinition(root, factory) {\\n\\tif(typeof exports === 'object' && typeof module === 'object')\\n\\t\\tmodule.exports = factory();\\n\\telse if(typeof define === 'function' && define.amd)\\n\\t\\tdefine(\\\"Ganache\\\", [], factory);\\n\\telse if(typeof exports === 'object')\\n\\t\\texports[\\\"Ganache\\\"] = factory();\\n\\telse\\n\\t\\troot[\\\"Ganache\\\"] = factory();\\n})(global, function() {\\nreturn \",\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 25);\\n\",\"let utils = require(\\\"ethereumjs-util\\\");\\n\\nmodule.exports = {\\n  buffer: function(val) {\\n    let data;\\n    if (typeof val === \\\"string\\\") {\\n      // strings need to be treated as hex, so we have to prep them:\\n      data = val.indexOf(\\\"0x\\\") === 0 ? val.slice(2) : val;\\n      data = data.length % 2 === 1 ? `0${data}` : data;\\n      data = Buffer.from(data, \\\"hex\\\");\\n    } else if (Buffer.isBuffer(val)) {\\n      // no need to copy the Buffer to a new Buffer, so we just use the Buffer\\n      // exactly as it was given to us:\\n      data = val;\\n    } else {\\n      // all other types get the Buffer treatment and built-in type checking:\\n      data = Buffer.from(val);\\n    }\\n    return data;\\n  },\\n  // Note: Do not use to.hex() when you really mean utils.addHexPrefix().\\n  hex: function(val) {\\n    if (typeof val === \\\"string\\\") {\\n      if (val.indexOf(\\\"0x\\\") === 0) {\\n        return val.trim();\\n      } else {\\n        val = new utils.BN(val);\\n      }\\n    }\\n\\n    if (typeof val === \\\"boolean\\\") {\\n      val = val ? 1 : 0;\\n    }\\n\\n    if (typeof val === \\\"number\\\") {\\n      val = utils.intToHex(val);\\n    } else if (val == null) {\\n      return \\\"0x\\\";\\n    } else if (typeof val === \\\"object\\\") {\\n      // Support Buffer, BigInteger and BN library\\n      // Hint: BN is used in ethereumjs\\n      val = val.toString(\\\"hex\\\");\\n    }\\n\\n    return utils.addHexPrefix(val);\\n  },\\n\\n  _rpcQuantityHexString: function(val) {\\n    val = this.hex(val);\\n    // remove all zeroes leading zeros, `0+`, from the hex-encoded value\\n    // This doesn't remove the last 0 which would be captured by `(.+?)`\\n    val = val.replace(/^(?:0x)(?:0+(.+?))?$/, \\\"0x$1\\\");\\n    return val;\\n  },\\n\\n  rpcQuantityHexString: function(val) {\\n    val = this._rpcQuantityHexString(val);\\n\\n    // RPC Quantities must represent `0` as `0x0`\\n    if (val === \\\"0x\\\") {\\n      val = \\\"0x0\\\";\\n    }\\n\\n    return val;\\n  },\\n\\n  rpcDataHexString: function(val, length) {\\n    if (typeof length === \\\"number\\\") {\\n      val = this.hex(val).replace(\\\"0x\\\", \\\"\\\");\\n\\n      val = new Array(length - val.length).fill(\\\"0\\\").join(\\\"\\\") + val;\\n    } else {\\n      if (val.length === 0) {\\n        return \\\"0x\\\";\\n      }\\n      val = this.hex(val).replace(\\\"0x\\\", \\\"\\\");\\n\\n      if (val.length % 2 !== 0) {\\n        val = \\\"0\\\" + val;\\n      }\\n    }\\n    return \\\"0x\\\" + val;\\n  },\\n\\n  nullableRpcDataHexString: function(val, length) {\\n    if (val === null) {\\n      return null;\\n    } else {\\n      const rpcDataHex = this.rpcDataHexString(val, length);\\n      return rpcDataHex === \\\"0x\\\" ? null : rpcDataHex;\\n    }\\n  },\\n\\n  nullableRpcQuantityHexString: function(val, length) {\\n    if (val === null) {\\n      return null;\\n    } else {\\n      const rpcQuantityHex = this._rpcQuantityHexString(val, length);\\n      return rpcQuantityHex === \\\"0x\\\" ? null : rpcQuantityHex;\\n    }\\n  },\\n\\n  hexWithZeroPadding: function(val) {\\n    val = this.hex(val);\\n    const digits = val.replace(\\\"0x\\\", \\\"\\\");\\n    if (digits.length & 0x1) {\\n      return \\\"0x0\\\" + digits;\\n    }\\n    return val;\\n  },\\n\\n  number: function(val) {\\n    if (typeof val === \\\"number\\\") {\\n      return val;\\n    }\\n    if (typeof val === \\\"string\\\") {\\n      if (val.indexOf(\\\"0x\\\") !== 0) {\\n        return parseInt(val, 10);\\n      }\\n    }\\n    var bufVal = utils.toBuffer(val);\\n    return utils.bufferToInt(bufVal);\\n  },\\n\\n  rpcError: function(id, code, msg) {\\n    return JSON.stringify({\\n      jsonrpc: \\\"2.0\\\",\\n      id: id,\\n      error: {\\n        code: code,\\n        message: msg\\n      }\\n    });\\n  }\\n};\\n\",\"module.exports = require(\\\"util\\\");\",\"module.exports = require(\\\"async\\\");\",\"module.exports = require(\\\"ethereumjs-util\\\");\",\"module.exports = require(\\\"web3-provider-engine/subproviders/subprovider.js\\\");\",\"module.exports = require(\\\"bn.js\\\");\",\"module.exports = require(\\\"lodash\\\");\",\"module.exports = require(\\\"source-map-support/register\\\");\",\"module.exports = require(\\\"ethereumjs-account\\\");\",\"var inherits = require(\\\"util\\\").inherits;\\nvar to = require(\\\"./to\\\");\\nvar abi = require(\\\"ethereumjs-abi\\\");\\n\\ninherits(RuntimeError, Error);\\n\\n// Note: ethereumjs-vm will return an object that has a \\\"results\\\" and \\\"receipts\\\" keys.\\n// You should pass in the whole object.\\nfunction RuntimeError(transactions, vmOutput) {\\n  // Why not just Error.apply(this, [message])? See\\n  // https://gist.github.com/justmoon/15511f92e5216fa2624b#anti-patterns\\n  Error.captureStackTrace(this, this.constructor);\\n  this.name = this.constructor.name;\\n\\n  this.results = {};\\n  this.hashes = [];\\n\\n  // handles creating this.message\\n  this.combine(transactions, vmOutput);\\n}\\n\\nRuntimeError.prototype.combine = function(transactions, vmOutput) {\\n  // Can be combined with vmOutput or another RuntimeError.\\n  if (transactions instanceof RuntimeError) {\\n    var err = transactions;\\n    var keys = Object.keys(err.results);\\n\\n    for (var i = 0; i < keys.length; i++) {\\n      var key = keys[i];\\n      this.results[key] = err.results[key];\\n      Array.prototype.push.apply(this.hashes, err.hashes);\\n    }\\n  } else {\\n    var results = vmOutput.results;\\n\\n    for (i = 0; i < transactions.length; i++) {\\n      var tx = transactions[i];\\n      var result = results[i];\\n\\n      // 1 means no error, oddly.\\n      if (result.vm.exception !== 1) {\\n        var hash = to.hex(tx.hash());\\n        this.hashes.push(hash);\\n        var reason;\\n        var returnData = result.vm.return;\\n        if (returnData && returnData.slice(0, 4).toString(\\\"hex\\\") === \\\"08c379a0\\\") {\\n          reason = abi.rawDecode([\\\"string\\\"], returnData.slice(4))[0];\\n        }\\n\\n        this.results[hash] = {\\n          error: result.vm.exceptionError.error || result.vm.exceptionError,\\n          program_counter: result.vm.runState.programCounter,\\n          return: to.hex(result.vm.return),\\n          reason: reason\\n        };\\n      }\\n    }\\n  }\\n\\n  // Once combined, set the message\\n  if (this.hashes.length === 1) {\\n    var exceptionResult = this.results[this.hashes[0]];\\n    var message = \\\"VM Exception while processing transaction: \\\" + exceptionResult.error;\\n    if (exceptionResult.reason) {\\n      message += \\\" \\\" + exceptionResult.reason;\\n    }\\n    this.message = message;\\n  } else {\\n    message = \\\"Multiple VM Exceptions while processing transactions: \\\\n\\\\n\\\";\\n\\n    for (i = 0; i < this.hashes.length; i++) {\\n      hash = this.hashes[i];\\n      exceptionResult = this.results[hash];\\n      message += hash + \\\": \\\" + exceptionResult.error;\\n      if (exceptionResult.reason) {\\n        message += \\\" \\\" + exceptionResult.reason;\\n      }\\n      message += \\\"\\\\n\\\";\\n    }\\n    this.message = message;\\n  }\\n};\\n\\nRuntimeError.prototype.count = function() {\\n  return Object.keys(this.results).length;\\n};\\n\\nRuntimeError.fromResults = function(transactions, vmOutput) {\\n  var err = new RuntimeError(transactions, vmOutput);\\n\\n  if (err.count() === 0) {\\n    return null;\\n  }\\n\\n  return err;\\n};\\n\\nmodule.exports = RuntimeError;\\n\",\"const EthereumJsTransaction = require(\\\"ethereumjs-tx\\\");\\nconst EthereumJsFakeTransaction = require(\\\"ethereumjs-tx/fake\\\");\\nconst ethUtil = require(\\\"ethereumjs-util\\\");\\nconst assert = require(\\\"assert\\\");\\nconst rlp = require(\\\"rlp\\\");\\nconst to = require(\\\"./to\\\");\\n\\nconst sign = EthereumJsTransaction.prototype.sign;\\nconst fakeHash = function() {\\n  // this isn't memoization of the hash. previous versions of ganache-core\\n  // created hashes in a different/incorrect way and are recorded this way\\n  // in snapshot dbs. We are preserving the chain's immutability by using the\\n  // stored hash instead of calculating it.\\n  if (this._hash != null) {\\n    return this._hash;\\n  }\\n  return EthereumJsFakeTransaction.prototype.hash.apply(this, arguments);\\n};\\nconst BUFFER_ZERO = Buffer.from([0]);\\n\\nfunction configZeroableField(tx, fieldName, fieldLength = 32) {\\n  const index = tx._fields.indexOf(fieldName);\\n  const descriptor = Object.getOwnPropertyDescriptor(tx, fieldName);\\n  // eslint-disable-next-line accessor-pairs\\n  Object.defineProperty(tx, fieldName, {\\n    set: (v) => {\\n      descriptor.set.call(tx, v);\\n      v = ethUtil.toBuffer(v);\\n      assert(fieldLength >= v.length, `The field ${fieldName} must not have more ${fieldLength} bytes`);\\n      tx._originals[index] = v;\\n    },\\n    get: () => {\\n      return tx._originals[index];\\n    }\\n  });\\n}\\n\\n/**\\n * etheruemjs-tx's Transactions don't behave quite like we need them to, so\\n * we're monkey-patching them to do what we want here.\\n * @param {Transaction} tx The Transaction to fix\\n * @param {Object} [data] The data object\\n */\\nfunction fixProps(tx, data) {\\n  // ethereumjs-tx doesn't allow for a `0` value in fields, but we want it to\\n  // in order to differentiate between a value that isn't set and a value\\n  // that is set to 0 in a fake transaction.\\n  // Once https://github.com/ethereumjs/ethereumjs-tx/issues/112 is figured\\n  // out we can probably remove this fix/hack.\\n  // We keep track of the original value and return that value when\\n  // referenced by its property name. This lets us properly encode a `0` as\\n  // an empty buffer while still being able to differentiate between a `0`\\n  // and `null`/`undefined`.\\n  tx._originals = [];\\n  const fieldNames = [\\\"nonce\\\", \\\"gasPrice\\\", \\\"gasLimit\\\", \\\"value\\\"];\\n  fieldNames.forEach((fieldName) => configZeroableField(tx, fieldName, 32));\\n\\n  // Ethereumjs-tx doesn't set the _chainId value whenever the v value is set,\\n  // which causes transaction signing to fail on transactions that include a\\n  // chain id in the v value (like ethers.js does).\\n  // Whenever the v value changes we need to make sure the chainId is also set.\\n  const vDescriptors = Object.getOwnPropertyDescriptor(tx, \\\"v\\\");\\n  // eslint-disable-next-line accessor-pairs\\n  Object.defineProperty(tx, \\\"v\\\", {\\n    set: (v) => {\\n      vDescriptors.set.call(tx, v);\\n      // calculate chainId from signature\\n      const sigV = ethUtil.bufferToInt(tx.v);\\n      let chainId = Math.floor((sigV - 35) / 2);\\n      if (chainId < 0) {\\n        chainId = 0;\\n      }\\n      tx._chainId = chainId || 0;\\n    }\\n  });\\n\\n  if (tx.isFake()) {\\n    /**\\n     * @prop {Buffer} from (read/write) Set from address to bypass transaction\\n     * signing on fake transactions.\\n     */\\n    Object.defineProperty(tx, \\\"from\\\", {\\n      enumerable: true,\\n      configurable: true,\\n      get: tx.getSenderAddress.bind(tx),\\n      set: (val) => {\\n        if (val) {\\n          tx._from = ethUtil.toBuffer(val);\\n        } else {\\n          tx._from = null;\\n        }\\n      }\\n    });\\n\\n    if (data && data.from) {\\n      tx.from = data.from;\\n    }\\n\\n    tx.hash = fakeHash;\\n  }\\n}\\n\\n/**\\n * Parses the given data object and adds its properties to the given tx.\\n * @param {Transaction} tx\\n * @param {Object} [data]\\n */\\nfunction initData(tx, data) {\\n  if (data) {\\n    if (typeof data === \\\"string\\\") {\\n      data = to.buffer(data);\\n    }\\n    if (Buffer.isBuffer(data)) {\\n      data = rlp.decode(data);\\n    }\\n    const self = tx;\\n    if (Array.isArray(data)) {\\n      if (data.length > tx._fields.length) {\\n        throw new Error(\\\"wrong number of fields in data\\\");\\n      }\\n\\n      // make sure all the items are buffers\\n      data.forEach((d, i) => {\\n        self[self._fields[i]] = ethUtil.toBuffer(d);\\n      });\\n    } else if ((typeof data === \\\"undefined\\\" ? \\\"undefined\\\" : typeof data) === \\\"object\\\") {\\n      const keys = Object.keys(data);\\n      tx._fields.forEach(function(field) {\\n        if (keys.indexOf(field) !== -1) {\\n          self[field] = data[field];\\n        }\\n        if (field === \\\"gasLimit\\\") {\\n          if (keys.indexOf(\\\"gas\\\") !== -1) {\\n            self[\\\"gas\\\"] = data[\\\"gas\\\"];\\n          }\\n        } else if (field === \\\"data\\\") {\\n          if (keys.indexOf(\\\"input\\\") !== -1) {\\n            self[\\\"input\\\"] = data[\\\"input\\\"];\\n          }\\n        }\\n      });\\n\\n      // Set chainId value from the data, if it's there and the data didn't\\n      // contain a `v` value with chainId in it already. If we do have a\\n      // data.chainId value let's set the interval v value to it.\\n      if (!tx._chainId && data && data.chainId != null) {\\n        tx.raw[self._fields.indexOf(\\\"v\\\")] = tx._chainId = data.chainId || 0;\\n      }\\n    } else {\\n      throw new Error(\\\"invalid data\\\");\\n    }\\n  }\\n}\\n\\nmodule.exports = class Transaction extends EthereumJsTransaction {\\n  /**\\n   * @param {Object} [data] The data for this Transaction.\\n   * @param {Number} type The `Transaction.types` bit flag for this transaction\\n   *  Can be a combination of `Transaction.types.none`, `Transaction.types.signed`, and `Transaction.types.fake`.\\n   */\\n  constructor(data, type = Transaction.types.none) {\\n    super();\\n\\n    this.type = type;\\n\\n    fixProps(this, data);\\n    initData(this, data);\\n  }\\n\\n  static get types() {\\n    // values must be powers of 2\\n    return {\\n      none: 0,\\n      signed: 1,\\n      fake: 2\\n    };\\n  }\\n\\n  /**\\n   * Prepares arbitrary JSON data for use in a Transaction.\\n   * @param {Object} json JSON object representing the Transaction\\n   * @param {Number} type The `Transaction.types` bit flag for this transaction\\n   *  Can be a combination of `Transaction.types.none`, `Transaction.types.signed`, and `Transaction.types.fake`.\\n   */\\n  static fromJSON(json, type) {\\n    let toAccount;\\n    if (json.to) {\\n      // Remove all padding and make it easily comparible.\\n      const buf = to.buffer(json.to);\\n      if (buf.equals(Buffer.from([0]))) {\\n        // if the address is 0x0 make it 0x0{20}\\n        toAccount = ethUtil.setLengthLeft(buf, 20);\\n      } else {\\n        toAccount = buf;\\n      }\\n    }\\n    const data = json.data || json.input;\\n    const options = {\\n      nonce: ethUtil.toBuffer(to.hex(json.nonce)),\\n      from: ethUtil.toBuffer(to.hex(json.from)),\\n      value: ethUtil.toBuffer(to.hex(json.value)),\\n      gasLimit: ethUtil.toBuffer(to.hex(json.gas || json.gasLimit)),\\n      gasPrice: ethUtil.toBuffer(to.hex(json.gasPrice)),\\n      data: data ? to.buffer(data) : null,\\n      to: toAccount,\\n      v: ethUtil.toBuffer(json.v),\\n      r: ethUtil.toBuffer(json.r),\\n      s: ethUtil.toBuffer(json.s)\\n    };\\n\\n    const tx = new Transaction(options, type);\\n    tx._hash = json.hash ? to.buffer(json.hash) : null;\\n    return tx;\\n  }\\n\\n  /**\\n   * Encodes the Transaction in order to be used in a database. Can be decoded\\n   * into an identical Transaction via `Transaction.decode(encodedTx)`.\\n   */\\n  encode() {\\n    const resultJSON = {\\n      hash: to.nullableRpcDataHexString(this.hash()),\\n      nonce: to.nullableRpcQuantityHexString(this.nonce) || \\\"0x\\\",\\n      from: to.rpcDataHexString(this.from),\\n      to: to.nullableRpcDataHexString(this.to),\\n      value: to.nullableRpcQuantityHexString(this.value),\\n      gas: to.nullableRpcQuantityHexString(this.gasLimit),\\n      gasPrice: to.nullableRpcQuantityHexString(this.gasPrice),\\n      data: this.data ? this.data.toString(\\\"hex\\\") : null,\\n      v: to.nullableRpcQuantityHexString(this.v),\\n      r: to.nullableRpcDataHexString(this.r),\\n      s: to.nullableRpcDataHexString(this.s),\\n      _type: this.type\\n    };\\n    return resultJSON;\\n  }\\n\\n  isFake() {\\n    return (this.type & Transaction.types.fake) === Transaction.types.fake;\\n  }\\n\\n  isSigned() {\\n    return (this.type & Transaction.types.signed) === Transaction.types.signed;\\n  }\\n\\n  /**\\n   * Compares the transaction's nonce value to the given expectedNonce taking in\\n   * to account the type of transaction and comparison rules for each type.\\n   *\\n   * In a signed transaction a nonce of Buffer([]) is the same as Buffer([0]),\\n   * but in a fake transaction Buffer([]) is null and Buffer([0]) is 0.\\n   *\\n   * @param {Buffer} expectedNonce The value of the from account's next nonce.\\n   */\\n  validateNonce(expectedNonce) {\\n    let nonce;\\n    if (this.isSigned() && this.nonce.length === 0) {\\n      nonce = BUFFER_ZERO;\\n    } else {\\n      nonce = this.nonce;\\n    }\\n    return nonce.equals(expectedNonce);\\n  }\\n\\n  /**\\n   * Signs the transaction and sets the `type` bit for `signed` to 1,\\n   * i.e., `isSigned() === true`\\n   */\\n  sign() {\\n    sign.apply(this, arguments);\\n    this.type |= Transaction.types.signed;\\n  }\\n\\n  /**\\n   * Returns a JSON-RPC spec compliant representation of this Transaction.\\n   *\\n   * @param {Object} block The block this Transaction appears in.\\n   */\\n  toJsonRpc(block) {\\n    const hash = this.hash();\\n\\n    let transactionIndex = null;\\n    for (let i = 0, txns = block.transactions, l = txns.length; i < l; i++) {\\n      if (txns[i].hash().equals(hash)) {\\n        transactionIndex = i;\\n        break;\\n      }\\n    }\\n\\n    const resultJSON = {\\n      hash: to.nullableRpcDataHexString(hash),\\n      nonce: to.rpcQuantityHexString(this.nonce),\\n      blockHash: to.nullableRpcDataHexString(block.hash()),\\n      blockNumber: to.nullableRpcQuantityHexString(block.header.number),\\n      transactionIndex: to.nullableRpcQuantityHexString(transactionIndex),\\n      from: to.rpcDataHexString(this.from),\\n      to: to.nullableRpcDataHexString(this.to),\\n      value: to.rpcQuantityHexString(this.value),\\n      gas: to.rpcQuantityHexString(this.gasLimit),\\n      gasPrice: to.rpcQuantityHexString(this.gasPrice),\\n      input: to.rpcDataHexString(this.data),\\n      v: to.nullableRpcQuantityHexString(this.v),\\n      r: to.nullableRpcDataHexString(this.r),\\n      s: to.nullableRpcDataHexString(this.s)\\n    };\\n\\n    return resultJSON;\\n  }\\n\\n  /**\\n   * Computes a sha3-256 hash of the serialized tx\\n   *\\n   * This method is nearly identical to ethereumjs-tx hash with the exception of\\n   * the v,r,s value setting when _chainId > 0. Because the `_chainId` in our\\n   * implementation is calculated whenever the v is updated we have to make sure\\n   * we don't recalc the chainId when we set the v to soemthing else.\\n   *\\n   * Note: If the transaction is a fake transaction this hash method gets\\n   * overridden in the constructor.\\n   *\\n   * @param {Boolean} [includeSignature=true] whether or not to inculde the signature\\n   * @return {Buffer}\\n   */\\n  hash(includeSignature = true) {\\n    // EIP155 spec:\\n    // when computing the hash of a transaction for purposes of signing or recovering,\\n    // instead of hashing only the first six elements (ie. nonce, gasprice, startgas, to, value, data),\\n    // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0\\n\\n    let items;\\n    if (includeSignature) {\\n      items = this.raw;\\n    } else {\\n      // cache the chainId here\\n      const chainId = this._chainId;\\n      if (chainId > 0) {\\n        const cacheRaw = this.raw.slice();\\n        // Setting `this.v` changes the value of `this._chainId`\\n        this.v = chainId;\\n        this.r = 0;\\n        this.s = 0;\\n\\n        items = this.raw;\\n        this.raw = cacheRaw;\\n        // set the chainId back to its original value here.\\n        this._chainId = chainId;\\n      } else {\\n        items = this.raw.slice(0, 6);\\n      }\\n    }\\n\\n    // create hash\\n    return ethUtil.rlphash(items);\\n  }\\n};\\n\",\"module.exports = require(\\\"ethereumjs-block\\\");\",\"var to = require(\\\"./to.js\\\");\\n\\n// Expects:\\n//\\n// logIndex: ...\\n// transactionIndex: ...\\n// transactionHash: ...\\n// block: ...\\n// address: ...\\n// data: ...\\n// topics: ...\\n// type: ...\\n\\nfunction Log(data) {\\n  var self = this;\\n  Object.keys(data).forEach(function(key) {\\n    self[key] = data[key];\\n  });\\n}\\n\\nLog.prototype.toJSON = function() {\\n  // RPC quantity values like this.transactionIndex can be set to \\\"0x00\\\",\\n  // use the explicit rpcQuantityHexString to properly format the JSON, removing leading zeroes.\\n  // See RPC log format spec: https://github.com/ethereum/wiki/wiki/JSON-RPC\\n  return {\\n    logIndex: to.rpcQuantityHexString(this.logIndex),\\n    transactionIndex: to.rpcQuantityHexString(this.transactionIndex),\\n    transactionHash: to.rpcDataHexString(this.transactionHash),\\n    blockHash: to.rpcDataHexString(this.block.hash()),\\n    blockNumber: to.rpcQuantityHexString(this.block.header.number),\\n    address: to.rpcDataHexString(this.address),\\n    data: to.rpcDataHexString(this.data),\\n    topics: this.topics,\\n    type: \\\"mined\\\"\\n  };\\n};\\n\\nmodule.exports = Log;\\n\",\"var to = require(\\\"./to\\\");\\n\\nfunction Receipt(tx, block, logs, gasUsed, cumulativeGasUsed, contractAddress, status, logsBloom) {\\n  this.tx = tx;\\n  this.block = block;\\n  this.logs = logs;\\n  this.gasUsed = gasUsed;\\n  this.cumulativeGasUsed = cumulativeGasUsed;\\n  this.contractAddress = contractAddress;\\n  this.status = status;\\n  this.logsBloom = logsBloom;\\n\\n  this.transactionIndex = 0;\\n\\n  this.txHash = tx.hash();\\n\\n  for (var i = 0; i < block.transactions.length; i++) {\\n    var current = block.transactions[i];\\n    if (current.hash().equals(this.txHash)) {\\n      this.transactionIndex = i;\\n      break;\\n    }\\n  }\\n}\\n\\nReceipt.prototype.toJSON = function() {\\n  // Enforce Hex formatting as defined in the RPC spec.\\n  return {\\n    transactionHash: to.rpcDataHexString(this.txHash),\\n    transactionIndex: to.rpcQuantityHexString(this.transactionIndex),\\n    blockHash: to.rpcDataHexString(this.block.hash()),\\n    blockNumber: to.rpcQuantityHexString(this.block.header.number),\\n    from: to.rpcDataHexString(this.tx.from),\\n    to: to.nullableRpcDataHexString(this.tx.to),\\n    gasUsed: to.rpcQuantityHexString(this.gasUsed),\\n    cumulativeGasUsed: to.rpcQuantityHexString(this.cumulativeGasUsed),\\n    contractAddress: this.contractAddress != null ? to.rpcDataHexString(this.contractAddress) : null,\\n    logs: this.logs.map(function(log) {\\n      return log.toJSON();\\n    }),\\n    status: to.rpcQuantityHexString(this.status),\\n    logsBloom: to.rpcDataHexString(this.logsBloom),\\n    v: to.rpcDataHexString(this.tx.v),\\n    r: to.rpcDataHexString(this.tx.r),\\n    s: to.rpcDataHexString(this.tx.s)\\n  };\\n};\\n\\nmodule.exports = Receipt;\\n\",\"class LevelUpOutOfRangeError extends Error {\\n  constructor(type, index, len) {\\n    const message = \\\"LevelUpArrayAdapter named '\\\" + type + \\\"' index out of range: index \\\" + index + \\\"; length: \\\" + len;\\n    super(message);\\n    this.name = `${this.constructor.name}:${type}`;\\n    this.type = type;\\n  }\\n}\\n\\nclass BlockOutOfRangeError extends LevelUpOutOfRangeError {\\n  constructor(index, len) {\\n    super(\\\"blocks\\\", index, len);\\n  }\\n}\\n\\nmodule.exports = {\\n  LevelUpOutOfRangeError,\\n  BlockOutOfRangeError\\n};\\n\",\"module.exports = require(\\\"events\\\");\",\"/*\\n    This file is part of web3.js.\\n\\n    web3.js is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU Lesser General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    web3.js is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU Lesser General Public License for more details.\\n\\n    You should have received a copy of the GNU Lesser General Public License\\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n/**\\n * @file index.js\\n * @authors:\\n *   Fabian Vogelsteller <fabian@ethereum.org>\\n *   Gav Wood <gav@parity.io>\\n *   Jeffrey Wilcke <jeffrey.wilcke@ethereum.org>\\n *   Marek Kotewicz <marek@parity.io>\\n *   Marian Oancea <marian@ethereum.org>\\n * @date 2017\\n */\\n\\n\\\"use strict\\\";\\n\\n\\nvar version = require('../package.json').version;\\nvar core = require('web3-core');\\nvar Eth = require('web3-eth');\\nvar Net = require('web3-net');\\nvar Personal = require('web3-eth-personal');\\nvar Shh = require('web3-shh');\\nvar Bzz = require('web3-bzz');\\nvar utils = require('web3-utils');\\n\\nvar Web3 = function Web3() {\\n    var _this = this;\\n\\n    // sets _requestmanager etc\\n    core.packageInit(this, arguments);\\n\\n    this.version = version;\\n    this.utils = utils;\\n\\n    this.eth = new Eth(this);\\n    this.shh = new Shh(this);\\n    this.bzz = new Bzz(this);\\n\\n    // overwrite package setProvider\\n    var setProvider = this.setProvider;\\n    this.setProvider = function (provider, net) {\\n        setProvider.apply(_this, arguments);\\n\\n        this.eth.setProvider(provider, net);\\n        this.shh.setProvider(provider, net);\\n        this.bzz.setProvider(provider);\\n\\n        return true;\\n    };\\n};\\n\\nWeb3.version = version;\\nWeb3.utils = utils;\\nWeb3.modules = {\\n    Eth: Eth,\\n    Net: Net,\\n    Personal: Personal,\\n    Shh: Shh,\\n    Bzz: Bzz\\n};\\n\\ncore.addProviders(Web3);\\n\\nmodule.exports = Web3;\\n\\n\",\"// make sourcemaps work!\\nrequire(\\\"source-map-support/register\\\");\\n\\nlet ProviderEngine = require(\\\"web3-provider-engine\\\");\\nlet SubscriptionSubprovider = require(\\\"web3-provider-engine/subproviders/subscriptions\\\");\\n\\nlet RequestFunnel = require(\\\"./subproviders/requestfunnel\\\");\\nlet DelayedBlockFilter = require(\\\"./subproviders/delayedblockfilter\\\");\\nlet GethDefaults = require(\\\"./subproviders/gethdefaults\\\");\\nlet GethApiDouble = require(\\\"./subproviders/geth_api_double\\\");\\n\\nlet BlockTracker = require(\\\"./block_tracker\\\");\\n\\nlet RuntimeError = require(\\\"./utils/runtimeerror\\\");\\nlet EventEmitter = require(\\\"events\\\");\\n\\nlet _ = require(\\\"lodash\\\");\\n\\nfunction Provider(options) {\\n  const self = this;\\n  EventEmitter.call(this);\\n\\n  this.options = options = self._applyDefaultOptions(options || {});\\n\\n  let gethApiDouble = new GethApiDouble(options, this);\\n\\n  this.engine = new ProviderEngine({\\n    blockTracker: new BlockTracker({ blockchain: gethApiDouble.state.blockchain })\\n  });\\n\\n  let subscriptionSubprovider = new SubscriptionSubprovider();\\n\\n  this.engine.manager = gethApiDouble;\\n  this.engine.addProvider(new RequestFunnel());\\n  this.engine.addProvider(new DelayedBlockFilter());\\n  this.engine.addProvider(subscriptionSubprovider);\\n  this.engine.addProvider(new GethDefaults());\\n  this.engine.addProvider(gethApiDouble);\\n\\n  this.engine.setMaxListeners(100);\\n  this.engine.start();\\n\\n  this.manager = gethApiDouble;\\n  this.sendAsync = this.send.bind(this);\\n  this.send = this.send.bind(this);\\n  this.close = this.close.bind(this);\\n  this._queueRequest = this._queueRequest.bind(this);\\n  this._processRequestQueue = this._processRequestQueue.bind(this);\\n\\n  subscriptionSubprovider.on(\\\"data\\\", function(err, notification) {\\n    self.emit(\\\"data\\\", err, notification);\\n  });\\n}\\n\\nconst defaultOptions = {\\n  vmErrorsOnRPCResponse: true,\\n  verbose: false,\\n  asyncRequestProcessing: false,\\n  logger: {\\n    log: function() {}\\n  }\\n};\\n\\nProvider.prototype = Object.create(EventEmitter.prototype);\\nProvider.prototype.constructor = Provider;\\n\\nProvider.prototype._applyDefaultOptions = function(options) {\\n  return _.merge({}, defaultOptions, options);\\n};\\n\\nProvider.prototype.send = function(payload, callback) {\\n  if (typeof callback !== \\\"function\\\") {\\n    throw new Error(\\n      \\\"No callback provided to provider's send function. As of web3 1.0, provider.send \\\" +\\n        \\\"is no longer synchronous and must be passed a callback as its final argument.\\\"\\n    );\\n  }\\n\\n  let self = this;\\n\\n  let externalize = function(payload) {\\n    return _.cloneDeep(payload);\\n  };\\n\\n  if (Array.isArray(payload)) {\\n    payload = payload.map(externalize);\\n  } else {\\n    payload = externalize(payload);\\n  }\\n\\n  let intermediary = function(err, result) {\\n    // clone result so that we can mutate the response without worrying about\\n    // that messing up assumptions the calling logic might have about us\\n    // mutating things\\n    result = _.cloneDeep(result);\\n    let response;\\n    if (Array.isArray(result)) {\\n      response = [];\\n      for (let i = 0; i < result.length; i++) {\\n        response.push(self.reportErrorInResponse(payload[i], err, result[i]));\\n      }\\n    } else {\\n      response = self.reportErrorInResponse(payload, err, result);\\n    }\\n\\n    if (self.options.verbose) {\\n      self.options.logger.log(\\n        \\\" <   \\\" +\\n          JSON.stringify(response, null, 2)\\n            .split(\\\"\\\\n\\\")\\n            .join(\\\"\\\\n <   \\\")\\n      );\\n    }\\n    process.nextTick(() => callback(response.error ? err : null, response));\\n  };\\n\\n  if (self.options.verbose) {\\n    self.options.logger.log(\\n      \\\"   > \\\" +\\n        JSON.stringify(payload, null, 2)\\n          .split(\\\"\\\\n\\\")\\n          .join(\\\"\\\\n   > \\\")\\n    );\\n  }\\n\\n  if (self.options.asyncRequestProcessing) {\\n    self.engine.sendAsync(payload, intermediary);\\n  } else {\\n    self._queueRequest(payload, intermediary);\\n  }\\n};\\n\\nProvider.prototype.close = function(callback) {\\n  // This is a little gross reaching, but...\\n  this.manager.state.stopMining();\\n  this.manager.state.blockchain.close(callback);\\n  this.engine.stop();\\n};\\n\\nProvider.prototype._queueRequest = function(payload, intermediary) {\\n  if (!this._requestQueue) {\\n    this._requestQueue = [];\\n  }\\n\\n  this._requestQueue.push({\\n    payload: payload,\\n    callback: intermediary\\n  });\\n\\n  setImmediate(this._processRequestQueue);\\n};\\n\\nProvider.prototype._processRequestQueue = function() {\\n  const self = this;\\n\\n  if (self._requestInProgress) {\\n    return;\\n  }\\n\\n  self._requestInProgress = true;\\n\\n  let args = self._requestQueue.shift();\\n\\n  if (args) {\\n    self.engine.sendAsync(args.payload, (err, result) => {\\n      if (self._requestQueue.length > 0) {\\n        setImmediate(self._processRequestQueue);\\n      }\\n      args.callback(err, result);\\n      self._requestInProgress = false;\\n    });\\n  } else {\\n    // still need to free the lock\\n    self._requestInProgress = false;\\n\\n    if (self._requestQueue.length > 0) {\\n      setImmediate(self._processRequestQueue);\\n    }\\n  }\\n};\\n\\nProvider.prototype.cleanUpErrorObject = function(err, response) {\\n  // Our response should already have an error field at this point, if it\\n  // doesn't, this was likely intentional. If not, this is the wrong place to\\n  // fix that problem.\\n  if (!err || !response.error) {\\n    return response;\\n  }\\n\\n  let errorObject = {\\n    error: {\\n      data: {}\\n    }\\n  };\\n\\n  if (err.message) {\\n    // clean up the error reporting done by the provider engine so the error message isn't lost in the stack trace noise\\n    errorObject.error.message = err.message;\\n    errorObject.error.data.stack = err.stack;\\n    errorObject.error.data.name = err.name;\\n  } else if (!response.error) {\\n    errorObject.error = {\\n      message: err.toString()\\n    };\\n  }\\n\\n  return _.merge(response, errorObject);\\n};\\n\\n// helper list of RPC methods which execute code and respond with a transaction hash as their result\\nlet transactionMethods = [\\\"eth_sendTransaction\\\", \\\"eth_sendRawTransaction\\\", \\\"personal_sendTransaction\\\"];\\n\\nProvider.prototype._isTransactionRequest = function(request) {\\n  return transactionMethods.indexOf(request.method) !== -1;\\n};\\n\\nProvider.prototype.reportErrorInResponse = function(request, err, response) {\\n  const self = this;\\n\\n  if (!err) {\\n    return response;\\n  }\\n\\n  // TODO: for next major release: move reporting of tx hash on error to error\\n  // field to prevent poorly-written clients which assume that the existence of\\n  // the \\\"result\\\" field implies no errors from breaking.\\n  if (self._isTransactionRequest(request)) {\\n    if (err instanceof RuntimeError) {\\n      // Make sure we always return the transaction hash on failed transactions so\\n      // the caller can get their tx receipt. This breaks JSONRPC 2.0, but it's how\\n      // we've always done it.\\n      response.result = err.hashes[0];\\n\\n      if (self.options.vmErrorsOnRPCResponse) {\\n        if (!response.error.data) {\\n          response.error.data = {};\\n        }\\n        response.error.data[err.hashes[0]] = err.results[err.hashes[0]];\\n      } else {\\n        delete response.error;\\n      }\\n    }\\n  }\\n\\n  if (request.method === \\\"eth_call\\\") {\\n    if (err instanceof RuntimeError) {\\n      if (self.options.vmErrorsOnRPCResponse) {\\n        if (!response.error.data) {\\n          response.error.data = {};\\n        }\\n        response.error.data[err.hashes[0]] = err.results[err.hashes[0]];\\n      } else {\\n        response.result = err.results[err.hashes[0]].return || \\\"0x\\\";\\n        delete response.error;\\n      }\\n    }\\n  }\\n\\n  return self.cleanUpErrorObject(err, response);\\n};\\n\\nmodule.exports = Provider;\\n\",\"'use strict';\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nvar Buffer = require('safe-buffer').Buffer;\\nvar ethUtil = require('ethereumjs-util');\\nvar crypto = require('crypto');\\nvar scryptsy = require('scrypt.js');\\nvar uuidv4 = require('uuid/v4');\\nvar bs58check = require('bs58check');\\n\\nfunction assert(val, msg) {\\n  if (!val) {\\n    throw new Error(msg || 'Assertion failed');\\n  }\\n}\\n\\nfunction decipherBuffer(decipher, data) {\\n  return Buffer.concat([decipher.update(data), decipher.final()]);\\n}\\n\\nvar Wallet = function Wallet(priv, pub) {\\n  if (priv && pub) {\\n    throw new Error('Cannot supply both a private and a public key to the constructor');\\n  }\\n\\n  if (priv && !ethUtil.isValidPrivate(priv)) {\\n    throw new Error('Private key does not satisfy the curve requirements (ie. it is invalid)');\\n  }\\n\\n  if (pub && !ethUtil.isValidPublic(pub)) {\\n    throw new Error('Invalid public key');\\n  }\\n\\n  this._privKey = priv;\\n  this._pubKey = pub;\\n};\\n\\nObject.defineProperty(Wallet.prototype, 'privKey', {\\n  get: function get() {\\n    assert(this._privKey, 'This is a public key only wallet');\\n    return this._privKey;\\n  }\\n});\\n\\nObject.defineProperty(Wallet.prototype, 'pubKey', {\\n  get: function get() {\\n    if (!this._pubKey) {\\n      this._pubKey = ethUtil.privateToPublic(this.privKey);\\n    }\\n    return this._pubKey;\\n  }\\n});\\n\\nWallet.generate = function (icapDirect) {\\n  if (icapDirect) {\\n    var max = new ethUtil.BN('088f924eeceeda7fe92e1f5b0fffffffffffffff', 16);\\n    while (true) {\\n      var privKey = crypto.randomBytes(32);\\n      if (new ethUtil.BN(ethUtil.privateToAddress(privKey)).lte(max)) {\\n        return new Wallet(privKey);\\n      }\\n    }\\n  } else {\\n    return new Wallet(crypto.randomBytes(32));\\n  }\\n};\\n\\nWallet.generateVanityAddress = function (pattern) {\\n  if ((typeof pattern === 'undefined' ? 'undefined' : _typeof(pattern)) !== 'object') {\\n    pattern = new RegExp(pattern);\\n  }\\n\\n  while (true) {\\n    var privKey = crypto.randomBytes(32);\\n    var address = ethUtil.privateToAddress(privKey);\\n\\n    if (pattern.test(address.toString('hex'))) {\\n      return new Wallet(privKey);\\n    }\\n  }\\n};\\n\\nWallet.prototype.getPrivateKey = function () {\\n  return this.privKey;\\n};\\n\\nWallet.prototype.getPrivateKeyString = function () {\\n  return ethUtil.bufferToHex(this.getPrivateKey());\\n};\\n\\nWallet.prototype.getPublicKey = function () {\\n  return this.pubKey;\\n};\\n\\nWallet.prototype.getPublicKeyString = function () {\\n  return ethUtil.bufferToHex(this.getPublicKey());\\n};\\n\\nWallet.prototype.getAddress = function () {\\n  return ethUtil.publicToAddress(this.pubKey);\\n};\\n\\nWallet.prototype.getAddressString = function () {\\n  return ethUtil.bufferToHex(this.getAddress());\\n};\\n\\nWallet.prototype.getChecksumAddressString = function () {\\n  return ethUtil.toChecksumAddress(this.getAddressString());\\n};\\n\\n// https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\\nWallet.prototype.toV3 = function (password, opts) {\\n  assert(this._privKey, 'This is a public key only wallet');\\n\\n  opts = opts || {};\\n  var salt = opts.salt || crypto.randomBytes(32);\\n  var iv = opts.iv || crypto.randomBytes(16);\\n\\n  var derivedKey;\\n  var kdf = opts.kdf || 'scrypt';\\n  var kdfparams = {\\n    dklen: opts.dklen || 32,\\n    salt: salt.toString('hex')\\n  };\\n\\n  if (kdf === 'pbkdf2') {\\n    kdfparams.c = opts.c || 262144;\\n    kdfparams.prf = 'hmac-sha256';\\n    derivedKey = crypto.pbkdf2Sync(Buffer.from(password), salt, kdfparams.c, kdfparams.dklen, 'sha256');\\n  } else if (kdf === 'scrypt') {\\n    // FIXME: support progress reporting callback\\n    kdfparams.n = opts.n || 262144;\\n    kdfparams.r = opts.r || 8;\\n    kdfparams.p = opts.p || 1;\\n    derivedKey = scryptsy(Buffer.from(password), salt, kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\\n  } else {\\n    throw new Error('Unsupported kdf');\\n  }\\n\\n  var cipher = crypto.createCipheriv(opts.cipher || 'aes-128-ctr', derivedKey.slice(0, 16), iv);\\n  if (!cipher) {\\n    throw new Error('Unsupported cipher');\\n  }\\n\\n  var ciphertext = Buffer.concat([cipher.update(this.privKey), cipher.final()]);\\n\\n  var mac = ethUtil.sha3(Buffer.concat([derivedKey.slice(16, 32), Buffer.from(ciphertext, 'hex')]));\\n\\n  return {\\n    version: 3,\\n    id: uuidv4({ random: opts.uuid || crypto.randomBytes(16) }),\\n    address: this.getAddress().toString('hex'),\\n    crypto: {\\n      ciphertext: ciphertext.toString('hex'),\\n      cipherparams: {\\n        iv: iv.toString('hex')\\n      },\\n      cipher: opts.cipher || 'aes-128-ctr',\\n      kdf: kdf,\\n      kdfparams: kdfparams,\\n      mac: mac.toString('hex')\\n    }\\n  };\\n};\\n\\nWallet.prototype.getV3Filename = function (timestamp) {\\n  /*\\n   * We want a timestamp like 2016-03-15T17-11-33.007598288Z. Date formatting\\n   * is a pain in Javascript, everbody knows that. We could use moment.js,\\n   * but decide to do it manually in order to save space.\\n   *\\n   * toJSON() returns a pretty close version, so let's use it. It is not UTC though,\\n   * but does it really matter?\\n   *\\n   * Alternative manual way with padding and Date fields: http://stackoverflow.com/a/7244288/4964819\\n   *\\n   */\\n  var ts = timestamp ? new Date(timestamp) : new Date();\\n\\n  return ['UTC--', ts.toJSON().replace(/:/g, '-'), '--', this.getAddress().toString('hex')].join('');\\n};\\n\\nWallet.prototype.toV3String = function (password, opts) {\\n  return JSON.stringify(this.toV3(password, opts));\\n};\\n\\nWallet.fromPublicKey = function (pub, nonStrict) {\\n  if (nonStrict) {\\n    pub = ethUtil.importPublic(pub);\\n  }\\n  return new Wallet(null, pub);\\n};\\n\\nWallet.fromExtendedPublicKey = function (pub) {\\n  assert(pub.slice(0, 4) === 'xpub', 'Not an extended public key');\\n  pub = bs58check.decode(pub).slice(45);\\n  // Convert to an Ethereum public key\\n  return Wallet.fromPublicKey(pub, true);\\n};\\n\\nWallet.fromPrivateKey = function (priv) {\\n  return new Wallet(priv);\\n};\\n\\nWallet.fromExtendedPrivateKey = function (priv) {\\n  assert(priv.slice(0, 4) === 'xprv', 'Not an extended private key');\\n  var tmp = bs58check.decode(priv);\\n  assert(tmp[45] === 0, 'Invalid extended private key');\\n  return Wallet.fromPrivateKey(tmp.slice(46));\\n};\\n\\n// https://github.com/ethereum/go-ethereum/wiki/Passphrase-protected-key-store-spec\\nWallet.fromV1 = function (input, password) {\\n  assert(typeof password === 'string');\\n  var json = (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' ? input : JSON.parse(input);\\n\\n  if (json.Version !== '1') {\\n    throw new Error('Not a V1 wallet');\\n  }\\n\\n  if (json.Crypto.KeyHeader.Kdf !== 'scrypt') {\\n    throw new Error('Unsupported key derivation scheme');\\n  }\\n\\n  var kdfparams = json.Crypto.KeyHeader.KdfParams;\\n  var derivedKey = scryptsy(Buffer.from(password), Buffer.from(json.Crypto.Salt, 'hex'), kdfparams.N, kdfparams.R, kdfparams.P, kdfparams.DkLen);\\n\\n  var ciphertext = Buffer.from(json.Crypto.CipherText, 'hex');\\n\\n  var mac = ethUtil.sha3(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\\n\\n  if (mac.toString('hex') !== json.Crypto.MAC) {\\n    throw new Error('Key derivation failed - possibly wrong passphrase');\\n  }\\n\\n  var decipher = crypto.createDecipheriv('aes-128-cbc', ethUtil.sha3(derivedKey.slice(0, 16)).slice(0, 16), Buffer.from(json.Crypto.IV, 'hex'));\\n  var seed = decipherBuffer(decipher, ciphertext);\\n\\n  return new Wallet(seed);\\n};\\n\\nWallet.fromV3 = function (input, password, nonStrict) {\\n  assert(typeof password === 'string');\\n  var json = (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' ? input : JSON.parse(nonStrict ? input.toLowerCase() : input);\\n\\n  if (json.version !== 3) {\\n    throw new Error('Not a V3 wallet');\\n  }\\n\\n  var derivedKey;\\n  var kdfparams;\\n  if (json.crypto.kdf === 'scrypt') {\\n    kdfparams = json.crypto.kdfparams;\\n\\n    // FIXME: support progress reporting callback\\n    derivedKey = scryptsy(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\\n  } else if (json.crypto.kdf === 'pbkdf2') {\\n    kdfparams = json.crypto.kdfparams;\\n\\n    if (kdfparams.prf !== 'hmac-sha256') {\\n      throw new Error('Unsupported parameters to PBKDF2');\\n    }\\n\\n    derivedKey = crypto.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\\n  } else {\\n    throw new Error('Unsupported key derivation scheme');\\n  }\\n\\n  var ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\\n\\n  var mac = ethUtil.sha3(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\\n  if (mac.toString('hex') !== json.crypto.mac) {\\n    throw new Error('Key derivation failed - possibly wrong passphrase');\\n  }\\n\\n  var decipher = crypto.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\\n  var seed = decipherBuffer(decipher, ciphertext, 'hex');\\n\\n  return new Wallet(seed);\\n};\\n\\n/*\\n * Based on https://github.com/ethereum/pyethsaletool/blob/master/pyethsaletool.py\\n * JSON fields: encseed, ethaddr, btcaddr, email\\n */\\nWallet.fromEthSale = function (input, password) {\\n  assert(typeof password === 'string');\\n  var json = (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' ? input : JSON.parse(input);\\n\\n  var encseed = Buffer.from(json.encseed, 'hex');\\n\\n  // key derivation\\n  var derivedKey = crypto.pbkdf2Sync(password, password, 2000, 32, 'sha256').slice(0, 16);\\n\\n  // seed decoding (IV is first 16 bytes)\\n  // NOTE: crypto (derived from openssl) when used with aes-*-cbc will handle PKCS#7 padding internally\\n  //       see also http://stackoverflow.com/a/31614770/4964819\\n  var decipher = crypto.createDecipheriv('aes-128-cbc', derivedKey, encseed.slice(0, 16));\\n  var seed = decipherBuffer(decipher, encseed.slice(16));\\n\\n  var wallet = new Wallet(ethUtil.sha3(seed));\\n  if (wallet.getAddress().toString('hex') !== json.ethaddr) {\\n    throw new Error('Decoded key mismatch - possibly wrong passphrase');\\n  }\\n  return wallet;\\n};\\n\\nmodule.exports = Wallet;\",\"var to = require(\\\"./utils/to.js\\\");\\nvar Account = require(\\\"ethereumjs-account\\\");\\nvar Block = require(\\\"ethereumjs-block\\\");\\nvar Log = require(\\\"./utils/log\\\");\\nvar Receipt = require(\\\"./utils/receipt\\\");\\nvar VM = require(\\\"ethereumjs-vm\\\");\\nvar RuntimeError = require(\\\"./utils/runtimeerror\\\");\\nvar Trie = require(\\\"merkle-patricia-tree\\\");\\nvar utils = require(\\\"ethereumjs-util\\\");\\nvar async = require(\\\"async\\\");\\nvar Heap = require(\\\"heap\\\");\\nvar Database = require(\\\"./database\\\");\\nvar EventEmitter = require(\\\"events\\\");\\nvar estimateGas = require(\\\"./utils/gasEstimation\\\");\\nvar _ = require(\\\"lodash\\\");\\nvar promisify = require(\\\"util\\\").promisify;\\nconst BN = require(\\\"bn.js\\\");\\n\\nfunction BlockchainDouble(options) {\\n  var self = this;\\n  EventEmitter.apply(self);\\n\\n  this.options = options = this._applyDefaultOptions(options || {});\\n\\n  this.logger = options.logger || console;\\n\\n  this.data = new Database(options);\\n\\n  if (options.trie != null && options.db_path != null) {\\n    throw new Error(\\\"Can't initialize a TestRPC with a db and a custom trie.\\\");\\n  }\\n\\n  this.pending_transactions = [];\\n\\n  // updated periodically to keep up with the times\\n  this.blockGasLimit = options.gasLimit;\\n  this.defaultTransactionGasLimit = options.defaultTransactionGasLimit;\\n  this.timeAdjustment = 0;\\n}\\n\\nconst defaultOptions = {\\n  gasLimit: \\\"0x6691b7\\\",\\n  defaultTransactionGasLimit: \\\"0x15f90\\\",\\n  time: null,\\n  debug: false,\\n  hardfork: \\\"petersburg\\\",\\n  allowUnlimitedContractSize: false\\n};\\n\\n// inheritence w/ prototype chaining\\nBlockchainDouble.prototype = Object.create(EventEmitter.prototype);\\nBlockchainDouble.prototype.constructor = BlockchainDouble;\\n\\nBlockchainDouble.prototype._applyDefaultOptions = function(options) {\\n  // We want this function to mutate the options object so that we can report\\n  // our settings back to our consumer application (e.g., ganache)\\n  return _.merge(options, defaultOptions, Object.assign({}, options));\\n};\\n\\nBlockchainDouble.prototype.initialize = function(accounts, callback) {\\n  var self = this;\\n\\n  this.data.initialize(function(err) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    self.latestBlock(function(err, block) {\\n      if (err) {\\n        return callback(err);\\n      }\\n\\n      var options = self.options;\\n\\n      var root = null;\\n\\n      if (block) {\\n        root = block.header.stateRoot;\\n      }\\n\\n      // I haven't yet found a good way to do this. Getting the trie from the\\n      // forked blockchain without going through the other setup is a little gross.\\n      self.stateTrie = self.createStateTrie(self.data.trie_db, root);\\n\\n      self.vm = options.vm || self.createVMFromStateTrie(self.stateTrie, true);\\n\\n      if (options.time) {\\n        self.setTime(options.time);\\n      }\\n\\n      // If we already have a block, then that means there's an existing chain.\\n      // Don't create a genesis block.\\n      if (block) {\\n        self.emit(\\\"block\\\", block);\\n        return callback();\\n      }\\n\\n      self.createGenesisBlock(function(err, block) {\\n        if (err) {\\n          return callback(err);\\n        }\\n\\n        accounts = accounts || [];\\n\\n        self.vm.stateManager.checkpoint(() => {\\n          async.eachSeries(\\n            accounts,\\n            function(accountData, finished) {\\n              self.vm.stateManager.putAccount(utils.toBuffer(accountData.address), accountData.account, finished);\\n            },\\n            function(err) {\\n              if (err) {\\n                return callback(err);\\n              }\\n\\n              self.vm.stateManager.commit(() => {\\n                // Create first block\\n                self.putBlock(block, [], [], callback);\\n              });\\n            }\\n          );\\n        });\\n      });\\n    });\\n  });\\n};\\n\\nBlockchainDouble.prototype.createVMFromStateTrie = function(state, activatePrecompiles) {\\n  const self = this;\\n  const vm = new VM({\\n    state: state,\\n    blockchain: {\\n      // EthereumJS VM needs a blockchain object in order to get block information.\\n      // When calling getBlock() it will pass a number that's of a Buffer type.\\n      // Unfortunately, it uses a 64-character buffer (when converted to hex) to\\n      // represent block numbers as well as block hashes. Since it's very unlikely\\n      // any block number will get higher than the maximum safe Javascript integer,\\n      // we can convert this buffer to a number ahead of time before calling our\\n      // own getBlock(). If the conversion succeeds, we have a block number.\\n      // If it doesn't, we have a block hash. (Note: Our implementation accepts both.)\\n      getBlock: function(number, done) {\\n        try {\\n          number = to.number(number);\\n        } catch (e) {\\n          // Do nothing; must be a block hash.\\n        }\\n\\n        self.getBlock(number, done);\\n      }\\n    },\\n    activatePrecompiles: activatePrecompiles || false,\\n    hardfork: self.options.hardfork,\\n    allowUnlimitedContractSize: self.options.allowUnlimitedContractSize\\n  });\\n\\n  if (self.options.debug === true) {\\n    // log executed opcodes, including args as hex\\n    vm.on(\\\"step\\\", function(info) {\\n      var name = info.opcode.name;\\n      var argsNum = info.opcode.in;\\n      if (argsNum) {\\n        var args = info.stack\\n          .slice(-argsNum)\\n          .map((arg) => to.hex(arg))\\n          .join(\\\" \\\");\\n\\n        self.logger.log(`${name} ${args}`);\\n      } else {\\n        self.logger.log(name);\\n      }\\n    });\\n  }\\n\\n  return vm;\\n};\\n\\nBlockchainDouble.prototype.createStateTrie = function(db, root) {\\n  return new Trie(db, root);\\n};\\n\\n// Overrideable so other implementations (forking) can edit it.\\nBlockchainDouble.prototype.createGenesisBlock = function(callback) {\\n  this.createBlock(callback);\\n};\\n\\nBlockchainDouble.prototype.latestBlock = function(callback) {\\n  this.data.blocks.last(function(err, last) {\\n    if (err) {\\n      return callback(err);\\n    }\\n    callback(null, last);\\n  });\\n};\\n\\n// number accepts number (integer, hex) or tag (e.g., \\\"latest\\\")\\nBlockchainDouble.prototype.getEffectiveBlockNumber = function(number, callback) {\\n  if (typeof number !== \\\"string\\\") {\\n    number = to.hex(number);\\n  }\\n\\n  // If we have a hex number\\n  if (number.indexOf(\\\"0x\\\") >= 0) {\\n    return callback(null, to.number(number));\\n  } else {\\n    if (number === \\\"latest\\\" || number === \\\"pending\\\") {\\n      return this.getHeight(callback);\\n    } else if (number === \\\"earliest\\\") {\\n      return callback(null, 0);\\n    }\\n  }\\n};\\n\\n// number accepts number (integer, hex), tag (e.g., \\\"latest\\\") or block hash\\n// This function is used by ethereumjs-vm\\nBlockchainDouble.prototype.getBlock = function(number, callback) {\\n  var self = this;\\n\\n  if (typeof number !== \\\"string\\\") {\\n    number = to.hex(number);\\n  }\\n\\n  // If we have a hex number or a block hash\\n  if (number.indexOf(\\\"0x\\\") >= 0) {\\n    var hash = number;\\n\\n    // block hash\\n    if (hash.length > 40) {\\n      this.data.blockHashes.get(to.hex(hash), function(err, blockIndex) {\\n        if (err) {\\n          return callback(err);\\n        }\\n        return self.data.blocks.get(blockIndex, callback);\\n      });\\n    } else {\\n      // Block number\\n      return this.data.blocks.get(to.number(hash), callback);\\n    }\\n  } else {\\n    if (number === \\\"latest\\\" || number === \\\"pending\\\") {\\n      return this.latestBlock(callback);\\n    } else if (number === \\\"earliest\\\") {\\n      return this.data.blocks.first(callback);\\n    } else {\\n      process.nextTick(callback, new Error(\\\"Invalid `blockNumber`: \\\\\\\"\\\" + number + \\\"\\\\\\\"\\\"));\\n    }\\n  }\\n};\\n\\nBlockchainDouble.prototype.putBlock = function(block, logs, receipts, callback) {\\n  var self = this;\\n\\n  // Lock in the state root for this block.\\n  block.header.stateRoot = this.stateTrie.root;\\n\\n  this.data.blocks.length(function(err, length) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    var requests = [\\n      self.data.blocks.push.bind(self.data.blocks, block),\\n      self.data.blockLogs.push.bind(self.data.blockLogs, logs),\\n      self.data.blockHashes.set.bind(self.data.blockHashes, to.hex(block.hash()), length)\\n    ];\\n\\n    block.transactions.forEach(function(tx, index) {\\n      var txHash = to.hex(tx.hash());\\n      requests.push(\\n        self.data.transactions.set.bind(self.data.transactions, txHash, tx),\\n        self.data.transactionReceipts.set.bind(self.data.transactionReceipts, txHash, receipts[index])\\n      );\\n    });\\n\\n    async.parallel(requests, (err, result) => {\\n      if (!err) {\\n        self.emit(\\\"block\\\", block);\\n      }\\n      callback(err, result);\\n    });\\n  });\\n};\\n\\nBlockchainDouble.prototype.popBlock = function(callback) {\\n  var self = this;\\n\\n  this.data.blocks.last(function(err, block) {\\n    if (err) {\\n      return callback(err);\\n    }\\n    if (block == null) {\\n      return callback(null, null);\\n    }\\n\\n    var requests = [];\\n    var blockHash = to.hex(block.hash());\\n\\n    block.transactions.forEach(function(tx) {\\n      var txHash = to.hex(tx.hash());\\n\\n      requests.push(\\n        self.data.transactions.del.bind(self.data.transactions, txHash),\\n        self.data.transactionReceipts.del.bind(self.data.transactionReceipts, txHash)\\n      );\\n    });\\n\\n    requests.push(\\n      self.data.blockLogs.pop.bind(self.data.blockLogs),\\n      self.data.blockHashes.del.bind(self.data.blockHashes, blockHash),\\n      self.data.blocks.pop.bind(self.data.blocks) // Do this one last in case anything relies on it.\\n    );\\n\\n    async.series(requests, function(err) {\\n      if (err) {\\n        return callback(err);\\n      }\\n\\n      // Set the root to the last available, which will \\\"roll back\\\" to the previous\\n      // moment in time. Note that all the old data is still in the db, but it's now just junk data.\\n      self.data.blocks.last(function(err, newLastBlock) {\\n        if (err) {\\n          return callback(err);\\n        }\\n        // using setStateRoot because in the future it will automatically take care\\n        // of clearing the cache for us.\\n        // note setStateRoot checks for checkpoints, and if there are any, it will fail.\\n        // At time of writing this comment, the only time there could be a checkpoint\\n        // is in the middle of a vm.runBlock call. Once asyncRequestProcessing is reenabled\\n        // this will likely cause problems.\\n        self.vm.stateManager.setStateRoot(newLastBlock.header.stateRoot, function(err) {\\n          // remove this `._storageTries = {}` statement once https://github.com/ethereumjs/ethereumjs-vm/pull/445\\n          // is in a release, probably in ejs-vm 2.6.1\\n          if (!err) {\\n            self.vm.stateManager._storageTries = {};\\n          }\\n          // Remember: Return block we popped off.\\n          callback(err, block);\\n        });\\n      });\\n    });\\n  });\\n};\\n\\nBlockchainDouble.prototype.clearPendingTransactions = function() {\\n  this.pending_transactions = [];\\n};\\n\\n/**\\n * createBlock\\n *\\n * Create a new block, where the parent's block is either the latest block\\n * on the chain or the parent block passed in.\\n *\\n * @param  {Block}   parent   The block meant to be the parent block (optional)\\n * @param  {Function} callback Callback function called after block is created\\n * @return Block              The block created.\\n */\\nBlockchainDouble.prototype.createBlock = function(parent, callback) {\\n  var self = this;\\n\\n  if (typeof parent === \\\"function\\\") {\\n    callback = parent;\\n    parent = null;\\n  }\\n\\n  var block = new Block();\\n\\n  function getParent(callback) {\\n    if (parent) {\\n      return callback(null, parent);\\n    } else {\\n      self.latestBlock(callback);\\n    }\\n  }\\n\\n  getParent(function(err, parent) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    var parentNumber = parent != null ? to.number(parent.header.number) : -1;\\n\\n    block.header.gasLimit = self.blockGasLimit;\\n\\n    // Ensure we have the right block number for the VM.\\n    block.header.number = to.hex(parentNumber + 1);\\n\\n    // Set the timestamp before processing txs\\n    block.header.timestamp = to.hex(self.currentTime());\\n\\n    if (parent != null) {\\n      block.header.parentHash = to.hex(parent.hash());\\n    }\\n\\n    callback(null, block);\\n  });\\n};\\n\\nBlockchainDouble.prototype.getQueuedNonce = function(address, callback) {\\n  var nonce = null;\\n  var addressBuffer = to.buffer(address);\\n  this.pending_transactions.forEach(function(tx) {\\n    if (!tx.from.equals(addressBuffer)) {\\n      return;\\n    }\\n\\n    var pendingNonce = new BN(tx.nonce);\\n    // If this is the first queued nonce for this address we found,\\n    // or it's higher than the previous highest, note it.\\n    if (nonce === null || pendingNonce.gt(nonce)) {\\n      nonce = pendingNonce;\\n    }\\n  });\\n\\n  // If we found a queued transaction nonce, return one higher\\n  // than the highest we found\\n  if (nonce != null) {\\n    return callback(null, nonce.iaddn(1).toArrayLike(Buffer));\\n  }\\n  this.stateTrie.get(addressBuffer, function(err, val) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    var account = new Account(val);\\n    // nonces are initiallized as an empty buffer, which isn't what we want.\\n    callback(null, account.nonce.length === 0 ? Buffer.from([0]) : account.nonce);\\n  });\\n};\\n\\nBlockchainDouble.prototype.queueTransaction = function(tx) {\\n  this.pending_transactions.push(tx);\\n};\\n\\nBlockchainDouble.prototype.sortByPriceAndNonce = function() {\\n  // Sorts transactions like I believe geth does.\\n  // See the description of 'SortByPriceAndNonce' at\\n  // https://github.com/ethereum/go-ethereum/blob/290e851f57f5d27a1d5f0f7ad784c836e017c337/core/types/transaction.go\\n  var self = this;\\n  var sortedByNonce = {};\\n\\n  self.pending_transactions.forEach((tx) => {\\n    const from = tx.from.toString(\\\"hex\\\");\\n    const arr = sortedByNonce[from];\\n    if (arr) {\\n      arr.push(tx);\\n    } else {\\n      sortedByNonce[from] = [tx];\\n    }\\n  });\\n\\n  var priceSort = function(a, b) {\\n    return parseInt(to.hex(b.gasPrice), 16) - parseInt(to.hex(a.gasPrice), 16);\\n  };\\n  var nonceSort = function(a, b) {\\n    return parseInt(to.hex(a.nonce), 16) - parseInt(to.hex(b.nonce), 16);\\n  };\\n\\n  // Now sort each address by nonce\\n  Object.keys(sortedByNonce).forEach((address) => {\\n    sortedByNonce[address].sort(nonceSort);\\n  });\\n\\n  // Initialise a heap, sorted by price, for the head transaction from each account.\\n  var heap = new Heap(priceSort);\\n  Object.keys(sortedByNonce).forEach((address) => {\\n    heap.push(sortedByNonce[address].shift());\\n  });\\n\\n  // Now reorder our transactions. Compare the next transactions from each account, and choose\\n  // the one with the highest gas price.\\n  const sortedTransactions = [];\\n  while (heap.size() > 0) {\\n    const best = heap.pop();\\n    let address = best.from.toString(\\\"hex\\\");\\n    if (sortedByNonce[address].length > 0) {\\n      // Push on the next transaction from this account\\n      heap.push(sortedByNonce[address].shift());\\n    }\\n    sortedTransactions.push(best);\\n  }\\n  self.pending_transactions = sortedTransactions;\\n};\\n\\nBlockchainDouble.prototype.processCall = function(tx, blockNumber, callback) {\\n  var self = this;\\n\\n  var runCall = function(tx, err, parentBlock) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    // create a fake block with this fake transaction\\n    self.createBlock(parentBlock, function(err, newBlock) {\\n      if (err) {\\n        return callback(err);\\n      }\\n      newBlock.transactions.push(tx);\\n\\n      var runArgs = {\\n        tx: tx,\\n        block: newBlock,\\n        skipBalance: true,\\n        skipNonce: true\\n      };\\n\\n      var stateTrie = self.createStateTrie(self.data.trie_db, parentBlock.header.stateRoot);\\n      var vm = self.createVMFromStateTrie(stateTrie);\\n\\n      vm.runTx(runArgs, function(vmerr, result) {\\n        // This is a check that has been in there for awhile. I'm unsure if it's required, but it can't hurt.\\n        if (vmerr && vmerr instanceof Error === false) {\\n          vmerr = new Error(\\\"VM error: \\\" + vmerr);\\n        }\\n\\n        // If we're given an error back directly, it's worse than a runtime error. Expose it and get out.\\n        if (vmerr) {\\n          return callback(vmerr, err);\\n        }\\n\\n        // If no error, check for a runtime error. This can return null if no runtime error.\\n        vmerr = RuntimeError.fromResults([tx], { results: [result] });\\n\\n        callback(vmerr, result);\\n      });\\n    });\\n  };\\n\\n  // Delegate block selection\\n  if (blockNumber === \\\"latest\\\") {\\n    self.latestBlock(runCall.bind(null, tx));\\n  } else {\\n    self.getBlock(blockNumber, runCall.bind(null, tx));\\n  }\\n};\\n\\nBlockchainDouble.prototype.estimateGas = function(tx, blockNumber, callback) {\\n  var self = this;\\n\\n  var runCall = function(tx, err, parentBlock) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    // create a fake block with this fake transaction\\n    self.createBlock(parentBlock, function(err, newBlock) {\\n      if (err) {\\n        return callback(err);\\n      }\\n      newBlock.transactions.push(tx);\\n\\n      var runArgs = {\\n        tx: tx,\\n        block: newBlock,\\n        skipBalance: true,\\n        skipNonce: true\\n      };\\n\\n      var stateTrie = self.createStateTrie(self.data.trie_db, parentBlock.header.stateRoot);\\n      var vm = self.createVMFromStateTrie(stateTrie);\\n\\n      estimateGas(vm, runArgs, err, callback);\\n    });\\n  };\\n\\n  // Delegate block selection\\n  if (blockNumber === \\\"latest\\\") {\\n    self.latestBlock(runCall.bind(null, tx));\\n  } else {\\n    self.getBlock(blockNumber, runCall.bind(null, tx));\\n  }\\n};\\n\\n/**\\n * processBlock\\n *\\n * Process the passed in block and included transactions\\n *\\n * @param  {VM} vm             the vm to use when running the block\\n * @param  {Block} block       block to process\\n * @param  {Boolean} commit    Whether or not changes should be committed to the state\\n * trie and the block appended to the end of the chain.\\n * @param  {Function} callback Callback function when transaction processing is completed.\\n * @return [type]              [description]\\n */\\nBlockchainDouble.prototype.processBlock = function(vm, block, commit, callback) {\\n  var self = this;\\n\\n  if (typeof commit === \\\"function\\\") {\\n    callback = commit;\\n    commit = true;\\n  }\\n\\n  vm.runBlock(\\n    {\\n      block: block,\\n      generate: true,\\n      skipBlockValidation: true\\n    },\\n    async function(vmerr, results) {\\n      // This is a check that has been in there for awhile. I'm unsure if it's required, but it can't hurt.\\n      if (vmerr && vmerr instanceof Error === false) {\\n        vmerr = new Error(\\\"VM error: \\\" + vmerr);\\n      }\\n\\n      // If we're given an error back directly, it's worse than a runtime error. Expose it and get out.\\n      if (vmerr) {\\n        callback(vmerr);\\n        return;\\n      }\\n      // If no error, check for a runtime error. This can return null if no runtime error.\\n      vmerr = RuntimeError.fromResults(block.transactions, results);\\n\\n      // Note, even if we have an error, some transactions may still have succeeded.\\n      // Process their logs if so, returning the error at the end.\\n\\n      var logs = [];\\n      var receipts = [];\\n\\n      var totalBlockGasUsage = 0;\\n\\n      results.results.forEach(function(result) {\\n        totalBlockGasUsage += to.number(result.gasUsed);\\n      });\\n\\n      block.header.gasUsed = utils.toBuffer(to.hex(totalBlockGasUsage));\\n\\n      const txTrie = new Trie();\\n      const rcptTrie = new Trie();\\n      const promises = [];\\n      const putInTrie = (trie, key, val) => promisify(trie.put.bind(trie))(key, val);\\n\\n      for (var v = 0; v < results.receipts.length; v++) {\\n        var result = results.results[v];\\n        var receipt = results.receipts[v];\\n        var tx = block.transactions[v];\\n        var txHash = tx.hash();\\n        var txLogs = [];\\n\\n        // Only process the transaction's logs if it didn't error.\\n        if (result.vm.exception === 1) {\\n          for (var i = 0; i < receipt.logs.length; i++) {\\n            var receiptLog = receipt.logs[i];\\n            var address = to.hex(receiptLog[0]);\\n            var topics = [];\\n\\n            for (var j = 0; j < receiptLog[1].length; j++) {\\n              topics.push(to.hex(receiptLog[1][j]));\\n            }\\n\\n            var data = to.hex(receiptLog[2]);\\n\\n            var log = new Log({\\n              logIndex: to.hex(i),\\n              transactionIndex: to.hex(v),\\n              transactionHash: txHash,\\n              block: block,\\n              address: address,\\n              data: data,\\n              topics: topics,\\n              type: \\\"mined\\\"\\n            });\\n\\n            logs.push(log);\\n            txLogs.push(log);\\n          }\\n        }\\n\\n        let rcpt = new Receipt(\\n          tx,\\n          block,\\n          txLogs,\\n          result.gasUsed.toArrayLike(Buffer),\\n          receipt.gasUsed,\\n          result.createdAddress,\\n          receipt.status,\\n          to.hex(receipt.bitvector)\\n        );\\n        receipts.push(rcpt);\\n\\n        const rawReceipt = [receipt.status, receipt.gasUsed, receipt.bitvector, receipt.logs];\\n        const rcptBuffer = utils.rlp.encode(rawReceipt);\\n        const key = utils.rlp.encode(v);\\n        promises.push(putInTrie(txTrie, key, tx.serialize()));\\n        promises.push(putInTrie(rcptTrie, key, rcptBuffer));\\n      }\\n      await Promise.all(promises);\\n\\n      block.header.transactionsTrie = utils.toBuffer(txTrie.root);\\n      block.header.receiptTrie = utils.toBuffer(rcptTrie.root);\\n\\n      if (commit) {\\n        // Put that block on the end of the chain\\n        self.putBlock(block, logs, receipts, done);\\n      } else {\\n        done();\\n      }\\n\\n      function done(e) {\\n        if (e) {\\n          return callback(e);\\n        }\\n        // Note we return the vm err here too, if it exists.\\n        callback(vmerr, block.transactions, results);\\n      }\\n    }\\n  );\\n};\\n\\n/**\\n * processNextBlock\\n *\\n * Process the next block like a normal blockchain, pulling from the list of\\n * pending transactions.\\n *\\n * @param  {number} timestamp at which the block is mined\\n * @param  {Function} callback Callback when transaction processing is finished.\\n * @return [type]              [description]\\n */\\nBlockchainDouble.prototype.processNextBlock = function(timestamp, callback) {\\n  var self = this;\\n\\n  if (typeof timestamp === \\\"function\\\") {\\n    callback = timestamp;\\n    timestamp = undefined;\\n  }\\n\\n  self.sortByPriceAndNonce();\\n\\n  // Grab only the transactions that can fit within the block\\n  var currentTransactions = [];\\n  var totalGasLimit = 0;\\n  var maxGasLimit = to.number(self.blockGasLimit);\\n\\n  while (self.pending_transactions.length > 0) {\\n    var tx = self.pending_transactions[0];\\n    var gasLimit = to.number(tx.gasLimit);\\n\\n    if (totalGasLimit + gasLimit <= maxGasLimit) {\\n      totalGasLimit += gasLimit;\\n      self.pending_transactions.shift();\\n      currentTransactions.push(tx);\\n    } else {\\n      // Next one won't fit. Break.\\n      break;\\n    }\\n  }\\n\\n  // Remember, we ensured transactions had a valid gas limit when they were queued (in the state manager).\\n  // If we run into a case where we can't process any because one is higher than the gas limit,\\n  // then it's a serious issue. This should never happen, but let's check anyway.\\n  if (currentTransactions.length === 0 && self.pending_transactions.length > 0) {\\n    // Error like geth.\\n    var error = \\\"Unexpected error condition: next transaction exceeds block gas limit\\\";\\n    return callback(error);\\n  }\\n\\n  // Create a new block meant to be the end of the chain\\n  this.createBlock(function(err, block) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    // Overwrite block timestamp\\n    if (timestamp) {\\n      self.data.blocks.last(function(err, last) {\\n        if (err) {\\n          return callback(err);\\n        }\\n        if (last && to.number(last.header.timestamp) > timestamp) {\\n          self.logger.log(\\n            \\\"Waring: Setting the block timestamp (\\\" + timestamp + \\\") that is earlier than the parent block one.\\\"\\n          );\\n        }\\n      });\\n      block.header.timestamp = to.hex(timestamp);\\n      self.setTime(new Date(timestamp * 1000));\\n    }\\n    // Add transactions to the block.\\n    Array.prototype.push.apply(block.transactions, currentTransactions);\\n\\n    self.processBlock(self.vm, block, true, callback);\\n  });\\n};\\n\\n/**\\n * processTransactionTrace\\n *\\n * Run a previously-run transaction in the same state in which it occurred at the time it was run.\\n * This will return the vm-level trace output for debugging purposes.\\n *\\n * Strategy:\\n *\\n *  1. Find block where transaction occurred\\n *  2. Set state root of that block\\n *  3. Rerun every transaction in that block prior to and including the requested transaction\\n *  4. Send trace results back.\\n *\\n * @param  {[type]}   tx       [description]\\n * @param  {Function} callback [description]\\n * @return [type]              [description]\\n */\\nBlockchainDouble.prototype.processTransactionTrace = async function(hash, params, callback) {\\n  const self = this;\\n  const targetHash = to.hex(hash);\\n  let txHashCurrentlyProcessing = \\\"\\\";\\n  let txCurrentlyProcessing = null;\\n  let vm;\\n\\n  let storageStack = {\\n    currentDepth: -1,\\n    stack: []\\n  };\\n\\n  let returnVal = {\\n    gas: 0,\\n    returnValue: \\\"\\\",\\n    structLogs: []\\n  };\\n\\n  function stepListener(event, next) {\\n    // See these docs:\\n    // https://github.com/ethereum/go-ethereum/wiki/Management-APIs\\n\\n    const gasLeft = to.number(event.gasLeft);\\n    const totalGasUsedAfterThisStep = to.number(txCurrentlyProcessing.gasLimit) - gasLeft;\\n    const gasUsedThisStep = totalGasUsedAfterThisStep - returnVal.gas;\\n    returnVal.gas += gasUsedThisStep;\\n\\n    let memory = null;\\n    if (!params.disableMemory) {\\n      // Get memory and break it up into 32-byte words.\\n      // Note we may possibly have to pad the final word.\\n      memory = Buffer.from(event.memory).toString(\\\"hex\\\");\\n      memory = memory.match(/.{1,64}/g) || [];\\n\\n      if (memory.length > 0) {\\n        const lastItem = memory[memory.length - 1];\\n        if (lastItem.length < 64) {\\n          memory[memory.length - 1] = lastItem + new Array(64 - lastItem.length + 1).join(\\\"0\\\");\\n        }\\n      }\\n    }\\n\\n    let stack = null;\\n    if (!params.disableStack) {\\n      stack = event.stack.map((item) => {\\n        return to.rpcDataHexString(item, 64).replace(\\\"0x\\\", \\\"\\\"); // non-0x prefixed.\\n      });\\n    }\\n\\n    let structLog = {\\n      depth: event.depth,\\n      error: \\\"\\\",\\n      gas: gasLeft,\\n      gasCost: gasUsedThisStep,\\n      memory,\\n      op: event.opcode.name,\\n      pc: event.pc,\\n      stack,\\n      storage: null\\n    };\\n\\n    if (params.disableStorage) {\\n      returnVal.structLogs.push(structLog);\\n      next();\\n    } else {\\n      structLog = self.processStorageTrace(structLog, storageStack, event, vm, function(err, structLog) {\\n        if (err) {\\n          return next(err);\\n        }\\n        returnVal.structLogs.push(structLog);\\n        next();\\n      });\\n    }\\n  }\\n\\n  // #1 - get block via transaction receipt\\n  this.getTransactionReceipt(targetHash, function(err, receipt) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    if (!receipt) {\\n      return callback(new Error(\\\"Unknown transaction \\\" + targetHash));\\n    }\\n\\n    let targetBlock = receipt.block;\\n\\n    // Get the parent of the target block\\n    self.getBlock(targetBlock.header.parentHash, function(err, parent) {\\n      if (err) {\\n        return callback(err);\\n      }\\n\\n      // #2 - Set state root of original block\\n      var stateTrie = self.createStateTrie(self.data.trie_db, parent.header.stateRoot);\\n      vm = self.createVMFromStateTrie(stateTrie);\\n\\n      // Prepare the \\\"next\\\" block with necessary transactions\\n      self.createBlock(parent, function(err, block) {\\n        if (err) {\\n          return callback(err);\\n        }\\n\\n        for (var i = 0; i < targetBlock.transactions.length; i++) {\\n          var tx = targetBlock.transactions[i];\\n          block.transactions.push(tx);\\n\\n          // After including the target transaction, that's all we need to do.\\n          if (to.hex(tx.hash()) === targetHash) {\\n            break;\\n          }\\n        }\\n\\n        function beforeTxListener(tx) {\\n          txCurrentlyProcessing = tx;\\n          txHashCurrentlyProcessing = to.hex(tx.hash());\\n          if (txHashCurrentlyProcessing === targetHash) {\\n            vm.on(\\\"step\\\", stepListener);\\n          }\\n        }\\n\\n        // afterTxListener cleans up everything.\\n        function afterTxListener() {\\n          if (txHashCurrentlyProcessing === targetHash) {\\n            removeListeners();\\n          }\\n        }\\n\\n        function removeListeners() {\\n          vm.removeListener(\\\"step\\\", stepListener);\\n          vm.removeListener(\\\"beforeTx\\\", beforeTxListener);\\n          vm.removeListener(\\\"afterTx\\\", afterTxListener);\\n        }\\n\\n        // Listen to beforeTx and afterTx so we know when our target transaction\\n        // is processing. These events will add the event listener for getting the trace data.\\n        vm.on(\\\"beforeTx\\\", beforeTxListener);\\n        vm.on(\\\"afterTx\\\", afterTxListener);\\n\\n        // #3 - Process the block without committing the data.\\n        self.processBlock(vm, block, false, function(err) {\\n          // Ignore runtime errors, or else erroneous transactions can't be traced.\\n          if (err && err.message.indexOf(\\\"VM Exception\\\") === 0) {\\n            err = null;\\n          }\\n\\n          // Just to be safe\\n          removeListeners();\\n\\n          // #4 - send state results back\\n          callback(err, returnVal);\\n        });\\n      });\\n    });\\n  });\\n};\\n\\nBlockchainDouble.prototype.processStorageTrace = function(structLog, storageStack, event, vm, callback) {\\n  var name = event.opcode.name;\\n\\n  var argsNum = event.opcode.in;\\n  var args = event.stack.slice(-argsNum).map((arg) => to.hex(arg));\\n\\n  if (storageStack.currentDepth > event.depth) {\\n    storageStack.stack.pop();\\n  }\\n  if (storageStack.currentDepth < event.depth) {\\n    storageStack.stack.push({});\\n  }\\n\\n  storageStack.currentDepth = event.depth;\\n\\n  var key;\\n  var value;\\n  switch (name) {\\n    case \\\"SSTORE\\\":\\n      key = to.rpcDataHexString(args[1], 64).replace(\\\"0x\\\", \\\"\\\");\\n      value = to.rpcDataHexString(args[0], 64).replace(\\\"0x\\\", \\\"\\\");\\n\\n      // use Object.assign to prevent future steps from overwriting this step's storage values\\n      structLog.storage = Object.assign({}, storageStack.stack[storageStack.currentDepth]);\\n\\n      callback(null, structLog);\\n      // assign after callback because this storage change actually takes\\n      // effect _after_ this opcode executes\\n      storageStack.stack[storageStack.currentDepth][key] = value;\\n      break;\\n    case \\\"SLOAD\\\":\\n      // this one's more fun, we need to get the value the contract is loading from current storage\\n      key = to.rpcDataHexString(args[0], 64).replace(\\\"0x\\\", \\\"\\\");\\n\\n      vm.stateManager.getContractStorage(event.address, \\\"0x\\\" + key, function(err, result) {\\n        if (err) {\\n          return callback(err);\\n        }\\n\\n        value = to.rpcDataHexString(result, 64).replace(\\\"0x\\\", \\\"\\\");\\n        storageStack.stack[storageStack.currentDepth][key] = value;\\n        // use Object.assign to prevent future steps from overwriting this step's storage values\\n        structLog.storage = Object.assign({}, storageStack.stack[storageStack.currentDepth]);\\n        callback(null, structLog);\\n      });\\n      break;\\n    default:\\n      // use Object.assign to prevent future steps from overwriting this step's storage values\\n      structLog.storage = Object.assign({}, storageStack.stack[storageStack.currentDepth]);\\n      callback(null, structLog);\\n  }\\n};\\n\\nBlockchainDouble.prototype.getAccount = function(address, number, callback) {\\n  var self = this;\\n\\n  this.getBlock(number, function(err, block) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    var trie = self.stateTrie;\\n\\n    // Manipulate the state root in place to maintain checkpoints\\n    var currentStateRoot = trie.root;\\n    self.stateTrie.root = block.header.stateRoot;\\n\\n    trie.get(utils.toBuffer(address), function(err, data) {\\n      // Finally, put the stateRoot back for good\\n      trie.root = currentStateRoot;\\n\\n      if (err) {\\n        return callback(err);\\n      }\\n\\n      var account = new Account(data);\\n\\n      callback(null, account);\\n    });\\n  });\\n};\\n\\nBlockchainDouble.prototype.getNonce = function(address, number, callback) {\\n  this.getAccount(address, number, function(err, account) {\\n    if (err) {\\n      return callback(err);\\n    }\\n    callback(null, account.nonce);\\n  });\\n};\\n\\nBlockchainDouble.prototype.getBalance = function(address, number, callback) {\\n  this.getAccount(address, number, function(err, account) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    callback(null, account.balance);\\n  });\\n};\\n\\n// Note! Storage values are returned RLP encoded!\\nBlockchainDouble.prototype.getStorage = function(address, position, number, callback) {\\n  var self = this;\\n\\n  this.getBlock(number, function(err, block) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    var trie = self.stateTrie;\\n\\n    // Manipulate the state root in place to maintain checkpoints\\n    var currentStateRoot = trie.root;\\n    self.stateTrie.root = block.header.stateRoot;\\n\\n    trie.get(utils.toBuffer(address), function(err, data) {\\n      if (err != null) {\\n        // Put the stateRoot back if there's an error\\n        trie.root = currentStateRoot;\\n        return callback(err);\\n      }\\n\\n      var account = new Account(data);\\n\\n      trie.root = account.stateRoot;\\n\\n      trie.get(utils.setLengthLeft(utils.toBuffer(position), 32), function(err, value) {\\n        // Finally, put the stateRoot back for good\\n        trie.root = currentStateRoot;\\n\\n        if (err != null) {\\n          return callback(err);\\n        }\\n\\n        callback(null, value);\\n      });\\n    });\\n  });\\n};\\n\\nBlockchainDouble.prototype.getCode = function(address, number, callback) {\\n  var self = this;\\n\\n  this.getBlock(number, function(err, block) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    var trie = self.stateTrie;\\n\\n    // Manipulate the state root in place to maintain checkpoints\\n    var currentStateRoot = trie.root;\\n    self.stateTrie.root = block.header.stateRoot;\\n\\n    trie.get(utils.toBuffer(address), function(err, data) {\\n      if (err != null) {\\n        // Put the stateRoot back if there's an error\\n        trie.root = currentStateRoot;\\n        return callback(err);\\n      }\\n\\n      var account = new Account(data);\\n\\n      account.getCode(trie, function(err, code) {\\n        // Finally, put the stateRoot back for good\\n        trie.root = currentStateRoot;\\n\\n        if (err) {\\n          return callback(err);\\n        }\\n\\n        callback(null, code);\\n      });\\n    });\\n  });\\n};\\n\\nBlockchainDouble.prototype.getTransaction = function(hash, callback) {\\n  hash = to.hex(hash);\\n\\n  this.data.transactions.get(hash, function(err, tx) {\\n    if (err) {\\n      if (err.notFound) {\\n        return callback(null, null);\\n      } else {\\n        return callback(err);\\n      }\\n    }\\n    callback(null, tx);\\n  });\\n};\\n\\nBlockchainDouble.prototype.getTransactionReceipt = function(hash, callback) {\\n  hash = to.hex(hash);\\n  const pendingTxs = this.pending_transactions;\\n\\n  for (var i = 0; i < pendingTxs.length; i++) {\\n    let pendingTxHash = to.hex(pendingTxs[i].hash());\\n    if (hash === pendingTxHash) {\\n      return callback(null, { tx: pendingTxs[i] });\\n    }\\n  }\\n\\n  this.data.transactionReceipts.get(hash, function(err, receipt) {\\n    if (err) {\\n      if (err.notFound) {\\n        return callback(null, null);\\n      } else {\\n        return callback(err);\\n      }\\n    }\\n\\n    callback(err, receipt);\\n  });\\n};\\n\\nBlockchainDouble.prototype.getBlockLogs = function(number, callback) {\\n  var self = this;\\n  this.getEffectiveBlockNumber(number, function(err, effective) {\\n    if (err) {\\n      return callback(err);\\n    }\\n    self.data.blockLogs.get(effective, callback);\\n  });\\n};\\n\\nBlockchainDouble.prototype.getHeight = function(callback) {\\n  this.data.blocks.length(function(err, length) {\\n    if (err) {\\n      return callback(err);\\n    }\\n    callback(null, length - 1);\\n  });\\n};\\n\\nBlockchainDouble.prototype.currentTime = function() {\\n  return ((new Date().getTime() / 1000) | 0) + this.timeAdjustment;\\n};\\n\\nBlockchainDouble.prototype.increaseTime = function(seconds) {\\n  if (seconds < 0) {\\n    seconds = 0;\\n  }\\n  this.timeAdjustment += seconds;\\n  return this.timeAdjustment;\\n};\\n\\nBlockchainDouble.prototype.setTime = function(date) {\\n  var now = (new Date().getTime() / 1000) | 0;\\n  var start = (date.getTime() / 1000) | 0;\\n  this.timeAdjustment = start - now;\\n};\\n\\nBlockchainDouble.prototype.close = function(callback) {\\n  this.data.close(callback);\\n};\\n\\nmodule.exports = BlockchainDouble;\\n\",\"module.exports = require(\\\"merkle-patricia-tree\\\");\",\"module.exports = require(\\\"level-sublevel\\\");\",\"// var to = require(\\\"../utils/to\\\");\\nvar Transaction = require(\\\"../utils/transaction\\\");\\n\\nconst decode = function(json, done) {\\n  const options = {\\n    hash: json.hash,\\n    nonce: json.nonce,\\n    value: json.value,\\n    to: json.to,\\n    from: json.from,\\n    gasLimit: json.gas || json.gasLimit,\\n    gasPrice: json.gasPrice,\\n    data: json.data,\\n    v: json.v,\\n    r: json.r,\\n    s: json.s\\n  };\\n\\n  // databases generated before ganache-core@2.3.2 didn't have a `_type` and\\n  // and were always fake signed. So if _type is undefined it is \\\"fake\\\" (even\\n  // if we have a valid signature that can generate the tx's `from`).\\n  const type = json._type === undefined ? Transaction.types.fake : json._type;\\n  const tx = Transaction.fromJSON(options, type);\\n\\n  // Commenting this out because we don't want to throw if the json.hash we\\n  // put in is different that the tx.hash() calculation we now have. There\\n  // may have been bug fixes to the way transactions are hashed in future\\n  // versions of ganache-core, but we still want tobe able to read in\\n  // transactions from previously saved databases!\\n  // if (to.hex(tx.hash()) !== json.hash) {\\n  //   const e = new Error(\\n  //     \\\"DB consistency check: Decoded transaction hash \\\" +\\n  //       \\\"didn't match encoded hash. Expected: \\\" +\\n  //       json.hash +\\n  //       \\\"; actual: \\\" +\\n  //       to.hex(tx.hash())\\n  //   );\\n  //   return done(e);\\n  // }\\n\\n  done(null, tx);\\n};\\n\\nconst encode = function(tx, done) {\\n  const encoded = tx.encode();\\n  done(null, encoded);\\n};\\n\\nmodule.exports = {\\n  encode,\\n  decode\\n};\\n\",\"var inherits = require(\\\"util\\\").inherits;\\n\\n// raised when the transaction is rejected prior to running it in the EVM.\\nfunction TXRejectedError(message) {\\n  // Why not just Error.apply(this, [message])? See\\n  // https://gist.github.com/justmoon/15511f92e5216fa2624b#anti-patterns\\n  Error.captureStackTrace(this, this.constructor);\\n  this.name = this.constructor.name;\\n  this.message = message;\\n}\\n\\ninherits(TXRejectedError, Error);\\n\\nmodule.exports = TXRejectedError;\\n\",\"var to = require(\\\"./to\\\");\\n\\nmodule.exports = {\\n  toJSON: function(block, includeFullTransactions) {\\n    return {\\n      number: to.rpcQuantityHexString(block.header.number),\\n      hash: to.hex(block.hash()),\\n      parentHash: to.hex(block.header.parentHash), // common.hash\\n      mixHash: to.hex(block.header.mixHash),\\n      nonce: to.rpcDataHexString(to.hex(block.header.nonce), 16),\\n      sha3Uncles: to.hex(block.header.uncleHash),\\n      logsBloom: to.hex(block.header.bloom),\\n      transactionsRoot: to.hex(block.header.transactionsTrie),\\n      stateRoot: to.hex(block.header.stateRoot),\\n      receiptsRoot: to.hex(block.header.receiptTrie),\\n      miner: to.hex(block.header.coinbase),\\n      difficulty: to.rpcQuantityHexString(block.header.difficulty),\\n      totalDifficulty: to.rpcQuantityHexString(block.header.difficulty), // TODO: Figure out what to do here.\\n      extraData: to.rpcDataHexString(block.header.extraData),\\n      size: to.hex(1000), // TODO: Do something better here\\n      gasLimit: to.rpcQuantityHexString(block.header.gasLimit),\\n      gasUsed: to.rpcQuantityHexString(block.header.gasUsed),\\n      timestamp: to.rpcQuantityHexString(block.header.timestamp),\\n      transactions: block.transactions.map(function(tx) {\\n        if (includeFullTransactions) {\\n          return tx.toJsonRpc(block);\\n        } else {\\n          return to.hex(tx.hash());\\n        }\\n      }),\\n      uncles: [] // block.uncleHeaders.map(function(uncleHash) {return to.hex(uncleHash)})\\n    };\\n  }\\n};\\n\",\"// make sourcemaps work!\\nrequire(\\\"source-map-support/register\\\");\\n\\nconst Provider = require(\\\"./lib/provider\\\");\\nconst Server = require(\\\"./lib/server\\\");\\n\\n// This interface exists so as not to cause breaking changes.\\nmodule.exports = {\\n  server: function(options) {\\n    return Server.create(options);\\n  },\\n  provider: function(options) {\\n    return new Provider(options);\\n  },\\n  _webpacked: true\\n};\\n\",\"module.exports = require(\\\"web3-provider-engine\\\");\",\"module.exports = require(\\\"web3-provider-engine/subproviders/subscriptions\\\");\",\"var Subprovider = require(\\\"web3-provider-engine/subproviders/subprovider.js\\\");\\nvar inherits = require(\\\"util\\\").inherits;\\n\\ninherits(RequestFunnel, Subprovider);\\n\\nmodule.exports = RequestFunnel;\\n\\n// See if any payloads for the specified methods are marked as external.\\n// If they are external, and match the method list, process them one at\\n// a time.\\nfunction RequestFunnel() {\\n  // We use an object here for O(1) lookups (speed).\\n  this.methods = {\\n    eth_call: true,\\n    eth_getStorageAt: true,\\n    eth_sendTransaction: true,\\n    eth_sendRawTransaction: true,\\n\\n    // Ensure block filter and filter changes are process one at a time\\n    // as well so filter requests that come in after a transaction get\\n    // processed once that transaction has finished processing.\\n    eth_newBlockFilter: true,\\n    eth_getFilterChanges: true,\\n    eth_getFilterLogs: true\\n  };\\n  this.queue = [];\\n  this.isWorking = false;\\n}\\n\\nRequestFunnel.prototype.handleRequest = function(payload, next, end) {\\n  if (payload.external !== true || this.methods[payload.method] !== true) {\\n    return next();\\n  }\\n\\n  this.queue.push([payload, next]);\\n\\n  if (this.isWorking === false) {\\n    this.processNext();\\n  }\\n};\\n\\nRequestFunnel.prototype.processNext = function() {\\n  var self = this;\\n\\n  if (this.queue.length === 0) {\\n    this.isWorking = false;\\n    return;\\n  }\\n\\n  this.isWorking = true;\\n\\n  var item = this.queue.shift();\\n  var next = item[1];\\n\\n  next(function(error, request, cb) {\\n    if (error) {\\n      return cb(error);\\n    }\\n    cb();\\n    self.processNext();\\n  });\\n};\\n\",\"// It's unforutnate we have to have this subprovider, but it's because\\n// we instamine, and web3 isn't written in a way that supports instamining\\n// (i.e., it sets up the filter after the transaction has been processed).\\n// This block filter will ensure that each block filter will always see\\n// the change from the last block to the current block.\\n//\\n// Note: An added benefit of this is that it shaves off a signifcant\\n// amount of time from tests that use web3 and block filters.\\n\\nvar Subprovider = require(\\\"web3-provider-engine/subproviders/subprovider.js\\\");\\nvar inherits = require(\\\"util\\\").inherits;\\nvar async = require(\\\"async\\\");\\nvar to = require(\\\"../utils/to\\\");\\n\\ninherits(DelayedBlockFilter, Subprovider);\\n\\nmodule.exports = DelayedBlockFilter;\\n\\nfunction DelayedBlockFilter() {\\n  this.watching = {};\\n}\\n\\nDelayedBlockFilter.prototype.handleRequest = function(payload, next, end) {\\n  if (payload.method === \\\"eth_newBlockFilter\\\") {\\n    return this.handleNewBlockFilter(payload, next, end);\\n  }\\n  if (payload.method === \\\"eth_getFilterChanges\\\") {\\n    return this.handleGetFilterChanges(payload, next, end);\\n  }\\n\\n  next();\\n};\\n\\nDelayedBlockFilter.prototype.handleNewBlockFilter = function(payload, next, end) {\\n  var self = this;\\n\\n  // Let this filter process and add it to our watch list.\\n  next(function(err, result, cb) {\\n    if (err) {\\n      return cb();\\n    }\\n    self.watching[result] = true;\\n    cb();\\n  });\\n};\\n\\nDelayedBlockFilter.prototype.handleGetFilterChanges = function(payload, next, end) {\\n  var self = this;\\n  var filterId = payload.params[0];\\n\\n  if (!this.watching[filterId]) {\\n    return next();\\n  }\\n\\n  // Get the changes, and then alter the result.\\n  next(function(err, result, cb) {\\n    if (err) {\\n      return cb();\\n    }\\n\\n    var currentBlockHash;\\n    var previousBlockHash;\\n    var blockNumber;\\n\\n    async.series(\\n      [\\n        function(c) {\\n          // If we have a result, use it.\\n          if (result.length !== 0) {\\n            currentBlockHash = result[0];\\n            c();\\n          } else {\\n            // Otherwise, get the current block number.\\n            self.emitPayload(\\n              {\\n                method: \\\"eth_blockNumber\\\"\\n              },\\n              function(err, res) {\\n                if (err) {\\n                  return c(err);\\n                }\\n                blockNumber = to.number(res.result);\\n                c();\\n              }\\n            );\\n          }\\n        },\\n        function(c) {\\n          // If we got a block number above, meaning, we didn't get a block hash,\\n          // skip this step.\\n          if (blockNumber) {\\n            return c();\\n          }\\n\\n          // If not skipped, then we got a block hash, and we need to get a block number from it.\\n          self.emitPayload(\\n            {\\n              method: \\\"eth_getBlockByHash\\\",\\n              params: [currentBlockHash, false]\\n            },\\n            function(err, res) {\\n              if (err) {\\n                return c(err);\\n              }\\n              blockNumber = to.number(res.result.number);\\n              c();\\n            }\\n          );\\n        },\\n        function(c) {\\n          // If we're at block 0, return no changes. See final function below.\\n          blockNumber = to.number(blockNumber);\\n          if (blockNumber === 0) {\\n            previousBlockHash = undefined;\\n            return c();\\n          }\\n\\n          // If at this point, we do have a block number, so let's subtract one\\n          // from it and get the block hash of the block before it.\\n          blockNumber = blockNumber - 1;\\n          self.emitPayload(\\n            {\\n              method: \\\"eth_getBlockByNumber\\\",\\n              params: [blockNumber, false]\\n            },\\n            function(err, res) {\\n              if (err) {\\n                return c(err);\\n              }\\n              previousBlockHash = res.result.hash;\\n              c();\\n            }\\n          );\\n        }\\n      ],\\n      function(err) {\\n        if (err) {\\n          // Unfortunately the subprovider code doesn't let us return an error\\n          // through the callback cb(). So we'll just ignore it.... (famous last words).\\n        }\\n\\n        // If we got the previous block, use it. Otherwise do nothing.\\n        // Then stop watching because we only want on getFilterChanges to react this way.\\n        if (previousBlockHash) {\\n          result[0] = previousBlockHash;\\n        }\\n\\n        delete self.watching[filterId];\\n        cb();\\n      }\\n    );\\n  });\\n};\\n\",\"var Subprovider = require(\\\"web3-provider-engine/subproviders/subprovider.js\\\");\\nvar inherits = require(\\\"util\\\").inherits;\\n\\ninherits(GethDefaults, Subprovider);\\n\\nmodule.exports = GethDefaults;\\n\\nfunction GethDefaults() {}\\n\\n// Massage eth_estimateGas requests, setting default data (e.g., from) if\\n// not specified. This is here specifically to make the testrpc\\n// react like Geth.\\nGethDefaults.prototype.handleRequest = function(payload, next, end) {\\n  if (payload.method !== \\\"eth_estimateGas\\\" && payload.method !== \\\"eth_call\\\") {\\n    return next();\\n  }\\n\\n  var params = payload.params[0];\\n\\n  if (params.from == null) {\\n    this.emitPayload(\\n      {\\n        method: \\\"eth_coinbase\\\"\\n      },\\n      function(err, result) {\\n        if (err) {\\n          return end(err);\\n        }\\n\\n        var coinbase = result.result;\\n\\n        params.from = coinbase;\\n        next();\\n      }\\n    );\\n  } else {\\n    next();\\n  }\\n};\\n\",\"var utils = require(\\\"ethereumjs-util\\\");\\nvar inherits = require(\\\"util\\\").inherits;\\nvar StateManager = require(\\\"../statemanager.js\\\");\\nvar to = require(\\\"../utils/to\\\");\\nvar TXRejectedError = require(\\\"../utils/txrejectederror\\\");\\n\\nvar blockHelper = require(\\\"../utils/block_helper\\\");\\nvar pkg = require(\\\"../../package.json\\\");\\nconst { BlockOutOfRangeError } = require(\\\"../utils/errorhelper\\\");\\n\\nvar Subprovider = require(\\\"web3-provider-engine/subproviders/subprovider.js\\\");\\n\\ninherits(GethApiDouble, Subprovider);\\n\\nfunction GethApiDouble(options, provider) {\\n  var self = this;\\n\\n  this.state = options.state || new StateManager(options, provider);\\n  this.options = options;\\n  this.initialized = false;\\n\\n  this.initialization_error = null;\\n  this.post_initialization_callbacks = [];\\n\\n  this.state.initialize(function(err) {\\n    if (err) {\\n      self.initialization_error = err;\\n    }\\n    self.initialized = true;\\n\\n    var callbacks = self.post_initialization_callbacks;\\n    self.post_initialization_callbacks = [];\\n\\n    callbacks.forEach(function(callback) {\\n      setImmediate(function() {\\n        callback(self.initialization_error, self.state);\\n      });\\n    });\\n  });\\n}\\n\\nGethApiDouble.prototype.waitForInitialization = function(callback) {\\n  var self = this;\\n  if (self.initialized === false) {\\n    self.post_initialization_callbacks.push(callback);\\n  } else {\\n    callback(self.initialization_error, self.state);\\n  }\\n};\\n\\n// Function to not pass methods through until initialization is finished\\nGethApiDouble.prototype.handleRequest = function(payload, next, end) {\\n  var self = this;\\n\\n  if (self.initialization_error != null) {\\n    return end(self.initialization_error);\\n  }\\n\\n  if (self.initialized === false) {\\n    self.waitForInitialization(self.getDelayedHandler(payload, next, end));\\n    return;\\n  }\\n\\n  var method = self[payload.method];\\n\\n  if (method == null) {\\n    return end(new Error(\\\"Method \\\" + payload.method + \\\" not supported.\\\"));\\n  }\\n\\n  var params = payload.params || [];\\n  var args = [].concat(params);\\n\\n  var addedBlockParam = false;\\n\\n  if (self.requiresDefaultBlockParameter(payload.method) && args.length < method.length - 1) {\\n    args.push(\\\"latest\\\");\\n    addedBlockParam = true;\\n  }\\n\\n  args.push(end);\\n\\n  // avoid crash by checking to make sure that we haven't specified too many arguments\\n  if (\\n    args.length > method.length ||\\n    (method.minLength !== undefined && args.length < method.minLength) ||\\n    (method.minLength === undefined && args.length < method.length)\\n  ) {\\n    var errorMessage = `Incorrect number of arguments. Method '${payload.method}' requires `;\\n    if (method.minLength) {\\n      errorMessage += `between ${method.minLength - 1} and ${method.length - 1} arguments. `;\\n    } else {\\n      errorMessage += `exactly ${method.length - 1} arguments. `;\\n    }\\n\\n    if (addedBlockParam) {\\n      errorMessage += \\\"Including the implicit block argument, r\\\";\\n    } else {\\n      // new sentence, capitalize it.\\n      errorMessage += \\\"R\\\";\\n    }\\n    errorMessage += `equest specified ${args.length - 1} arguments: ${JSON.stringify(args)}.`;\\n\\n    return end(new Error(errorMessage));\\n  }\\n\\n  method.apply(self, args);\\n};\\n\\nGethApiDouble.prototype.getDelayedHandler = function(payload, next, end) {\\n  var self = this;\\n  return function(err, state) {\\n    if (err) {\\n      end(err);\\n    }\\n    self.handleRequest(payload, next, end);\\n  };\\n};\\n\\nGethApiDouble.prototype.requiresDefaultBlockParameter = function(method) {\\n  // object for O(1) lookup.\\n  var methods = {\\n    eth_getBalance: true,\\n    eth_getCode: true,\\n    eth_getTransactionCount: true,\\n    eth_getStorageAt: true,\\n    eth_call: true,\\n    eth_estimateGas: true\\n  };\\n\\n  return methods[method] === true;\\n};\\n\\n// Handle individual requests.\\n\\nGethApiDouble.prototype.eth_accounts = function(callback) {\\n  callback(null, Object.keys(this.state.accounts));\\n};\\n\\nGethApiDouble.prototype.eth_blockNumber = function(callback) {\\n  this.state.blockNumber(function(err, result) {\\n    if (err) {\\n      return callback(err);\\n    }\\n    callback(null, to.hex(result));\\n  });\\n};\\n\\nGethApiDouble.prototype.eth_coinbase = function(callback) {\\n  callback(null, this.state.coinbase);\\n};\\n\\nGethApiDouble.prototype.eth_mining = function(callback) {\\n  callback(null, this.state.is_mining);\\n};\\n\\nGethApiDouble.prototype.eth_hashrate = function(callback) {\\n  callback(null, \\\"0x0\\\");\\n};\\n\\nGethApiDouble.prototype.eth_gasPrice = function(callback) {\\n  callback(null, utils.addHexPrefix(this.state.gasPrice()));\\n};\\n\\nGethApiDouble.prototype.eth_getBalance = function(address, blockNumber, callback) {\\n  this.state.getBalance(address, blockNumber, callback);\\n};\\n\\nGethApiDouble.prototype.eth_getCode = function(address, blockNumber, callback) {\\n  this.state.getCode(address, blockNumber, callback);\\n};\\n\\nGethApiDouble.prototype.eth_getBlockByNumber = function(blockNumber, includeFullTransactions, callback) {\\n  this.state.blockchain.getBlock(blockNumber, function(err, block) {\\n    if (err) {\\n      if (err instanceof BlockOutOfRangeError) {\\n        return callback(null, null);\\n      } else {\\n        return callback(err);\\n      }\\n    }\\n\\n    callback(null, blockHelper.toJSON(block, includeFullTransactions));\\n  });\\n};\\n\\nGethApiDouble.prototype.eth_getBlockByHash = function(txHash, includeFullTransactions, callback) {\\n  this.eth_getBlockByNumber.apply(this, arguments);\\n};\\n\\nGethApiDouble.prototype.eth_getBlockTransactionCountByNumber = function(blockNumber, callback) {\\n  this.state.blockchain.getBlock(blockNumber, function(err, block) {\\n    if (err) {\\n      if (err instanceof BlockOutOfRangeError) {\\n        // block doesn't exist\\n        return callback(null, null);\\n      }\\n      return callback(err);\\n    }\\n    callback(null, to.rpcQuantityHexString(block.transactions.length));\\n  });\\n};\\n\\nGethApiDouble.prototype.eth_getBlockTransactionCountByHash = function(blockHash, callback) {\\n  this.eth_getBlockTransactionCountByNumber.apply(this, arguments);\\n};\\n\\nGethApiDouble.prototype.eth_getTransactionReceipt = function(hash, callback) {\\n  this.state.getTransactionReceipt(hash, function(err, receipt) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    var result = null;\\n\\n    if (receipt && receipt.block) {\\n      result = receipt.toJSON();\\n    }\\n    callback(null, result);\\n  });\\n};\\n\\nGethApiDouble.prototype.eth_getTransactionByHash = function(hash, callback) {\\n  this.state.getTransactionReceipt(hash, function(err, receipt) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    var result = null;\\n\\n    if (receipt) {\\n      // if there is no block then the transaction is still pending\\n      if (!receipt.block) {\\n        // assemble the block object with null values for pending transactions\\n        receipt.block = {\\n          transactions: [],\\n          hash: () => {\\n            return null;\\n          },\\n          header: { number: null }\\n        };\\n\\n        result = receipt.tx.toJsonRpc(receipt.block);\\n      } else {\\n        result = receipt.tx.toJsonRpc(receipt.block);\\n      }\\n    }\\n    callback(null, result);\\n  });\\n};\\n\\nGethApiDouble.prototype.eth_getTransactionByBlockHashAndIndex = function(hashOrNumber, index, callback) {\\n  index = to.number(index);\\n\\n  this.state.getBlock(hashOrNumber, function(err, block) {\\n    if (err) {\\n      // block doesn't exist by that hash\\n      if (err.notFound) {\\n        return callback(null, null);\\n      } else {\\n        return callback(err);\\n      }\\n    }\\n\\n    if (index >= block.transactions.length) {\\n      return callback(new Error(\\\"Transaction at index \\\" + to.hex(index) + \\\" does not exist in block.\\\"));\\n    }\\n\\n    var tx = block.transactions[index];\\n    var result = tx.toJsonRpc(block);\\n\\n    callback(null, result);\\n  });\\n};\\n\\nGethApiDouble.prototype.eth_getTransactionByBlockNumberAndIndex = function(hashOrNumber, index, callback) {\\n  this.eth_getTransactionByBlockHashAndIndex(hashOrNumber, index, callback);\\n};\\n\\nGethApiDouble.prototype.eth_getTransactionCount = function(address, blockNumber, callback) {\\n  this.state.getTransactionCount(address, blockNumber, (err, count) => {\\n    if (err instanceof BlockOutOfRangeError) {\\n      return callback(null, null);\\n    }\\n    return callback(err, count);\\n  });\\n};\\n\\nGethApiDouble.prototype.eth_sign = function(address, dataToSign, callback) {\\n  var result;\\n  var error;\\n\\n  try {\\n    result = this.state.sign(address, dataToSign);\\n  } catch (e) {\\n    error = e;\\n  }\\n\\n  callback(error, result);\\n};\\n\\nGethApiDouble.prototype.eth_signTypedData = function(address, typedDataToSign, callback) {\\n  var result;\\n  var error;\\n\\n  try {\\n    result = this.state.signTypedData(address, typedDataToSign);\\n  } catch (e) {\\n    error = e;\\n  }\\n\\n  callback(error, result);\\n};\\n\\nGethApiDouble.prototype.eth_sendTransaction = function(txData, callback) {\\n  this.state.queueTransaction(\\\"eth_sendTransaction\\\", txData, null, callback);\\n};\\n\\nGethApiDouble.prototype.eth_sendRawTransaction = function(rawTx, callback) {\\n  let data;\\n  if (rawTx) {\\n    data = to.buffer(rawTx);\\n  }\\n\\n  if (data === undefined) {\\n    throw new TXRejectedError(\\\"rawTx must be a string, JSON-encoded Buffer, or Buffer.\\\");\\n  }\\n\\n  this.state.queueRawTransaction(data, callback);\\n};\\n\\nGethApiDouble.prototype.eth_call = function(txData, blockNumber, callback) {\\n  if (!txData.gas) {\\n    txData.gas = this.state.blockchain.blockGasLimit;\\n  }\\n\\n  this.state.queueTransaction(\\\"eth_call\\\", txData, blockNumber, callback); // :(\\n};\\n\\nGethApiDouble.prototype.eth_estimateGas = function(txData, blockNumber, callback) {\\n  if (!txData.gas) {\\n    txData.gas = this.state.blockchain.blockGasLimit;\\n  }\\n  this.state.queueTransaction(\\\"eth_estimateGas\\\", txData, blockNumber, callback);\\n};\\n\\nGethApiDouble.prototype.eth_getStorageAt = function(address, position, blockNumber, callback) {\\n  this.state.queueStorage(address, position, blockNumber, callback);\\n};\\n\\nGethApiDouble.prototype.eth_newBlockFilter = function(callback) {\\n  var filterId = utils.addHexPrefix(utils.intToHex(this.state.latestFilterId));\\n  this.state.latestFilterId += 1;\\n  callback(null, filterId);\\n};\\n\\nGethApiDouble.prototype.eth_getFilterChanges = function(filterId, callback) {\\n  var blockHash = this.state\\n    .latestBlock()\\n    .hash()\\n    .toString(\\\"hex\\\");\\n  // Mine a block after each request to getFilterChanges so block filters work.\\n  this.state.mine();\\n  callback(null, [blockHash]);\\n};\\n\\nGethApiDouble.prototype.eth_getLogs = function(filter, callback) {\\n  this.state.getLogs(filter, callback);\\n};\\n\\nGethApiDouble.prototype.eth_uninstallFilter = function(filterId, callback) {\\n  callback(null, true);\\n};\\n\\nGethApiDouble.prototype.eth_protocolVersion = function(callback) {\\n  callback(null, \\\"63\\\");\\n};\\n\\nGethApiDouble.prototype.bzz_hive = function(callback) {\\n  callback(null, []);\\n};\\n\\nGethApiDouble.prototype.bzz_info = function(callback) {\\n  callback(null, []);\\n};\\n\\nGethApiDouble.prototype.shh_version = function(callback) {\\n  callback(null, \\\"2\\\");\\n};\\n\\nGethApiDouble.prototype.eth_getCompilers = function(callback) {\\n  callback(null, []);\\n};\\n\\nGethApiDouble.prototype.eth_syncing = function(callback) {\\n  callback(null, false);\\n};\\n\\nGethApiDouble.prototype.net_listening = function(callback) {\\n  callback(null, true);\\n};\\n\\nGethApiDouble.prototype.net_peerCount = function(callback) {\\n  callback(null, 0);\\n};\\n\\nGethApiDouble.prototype.web3_clientVersion = function(callback) {\\n  callback(null, \\\"EthereumJS TestRPC/v\\\" + pkg.version + \\\"/ethereum-js\\\");\\n};\\n\\nGethApiDouble.prototype.web3_sha3 = function(string, callback) {\\n  callback(null, to.hex(utils.sha3(string)));\\n};\\n\\nGethApiDouble.prototype.net_version = function(callback) {\\n  // net_version returns a string containing a base 10 integer.\\n  callback(null, this.state.net_version + \\\"\\\");\\n};\\n\\nGethApiDouble.prototype.miner_start = function(threads, callback) {\\n  if (!callback && typeof threads === \\\"function\\\") {\\n    callback = threads;\\n    threads = null;\\n  }\\n\\n  this.state.startMining(function(err) {\\n    callback(err, true);\\n  });\\n};\\n\\n// indicate that `miner_start` only requires one argument (the callback)\\nGethApiDouble.prototype.miner_start.minLength = 1;\\n\\nGethApiDouble.prototype.miner_stop = function(callback) {\\n  this.state.stopMining(function(err) {\\n    callback(err, true);\\n  });\\n};\\n\\nGethApiDouble.prototype.rpc_modules = function(callback) {\\n  // returns the availible api modules and versions\\n  callback(null, { eth: \\\"1.0\\\", net: \\\"1.0\\\", rpc: \\\"1.0\\\", web3: \\\"1.0\\\", evm: \\\"1.0\\\", personal: \\\"1.0\\\" });\\n};\\n\\nGethApiDouble.prototype.personal_listAccounts = function(callback) {\\n  callback(null, Object.keys(this.state.personal_accounts));\\n};\\n\\nGethApiDouble.prototype.personal_newAccount = function(password, callback) {\\n  var account = this.state.createAccount({ generate: true });\\n  this.state.accounts[account.address.toLowerCase()] = account;\\n  this.state.personal_accounts[account.address.toLowerCase()] = true;\\n  this.state.account_passwords[account.address.toLowerCase()] = password;\\n  callback(null, account.address);\\n};\\n\\nGethApiDouble.prototype.personal_importRawKey = function(rawKey, password, callback) {\\n  var account = this.state.createAccount({ secretKey: rawKey });\\n  this.state.accounts[account.address.toLowerCase()] = account;\\n  this.state.personal_accounts[account.address.toLowerCase()] = true;\\n  this.state.account_passwords[account.address.toLowerCase()] = password;\\n  callback(null, account.address);\\n};\\n\\nGethApiDouble.prototype.personal_lockAccount = function(address, callback) {\\n  var account = this.state.personal_accounts[address.toLowerCase()];\\n  if (account !== true) {\\n    var error = \\\"Account not found\\\";\\n    return callback(error);\\n  }\\n  delete this.state.unlocked_accounts[address.toLowerCase()];\\n  callback(null, true);\\n};\\n\\nGethApiDouble.prototype.personal_unlockAccount = function(address, password, duration, callback) {\\n  // FIXME handle duration\\n  var account = this.state.personal_accounts[address.toLowerCase()];\\n  if (account !== true) {\\n    var accountError = \\\"Account not found\\\";\\n    return callback(accountError);\\n  }\\n\\n  var storedPassword = this.state.account_passwords[address.toLowerCase()];\\n  if (storedPassword !== undefined && storedPassword !== password) {\\n    var passwordError = \\\"Invalid password\\\";\\n    return callback(passwordError);\\n  }\\n\\n  this.state.unlocked_accounts[address.toLowerCase()] = true;\\n  callback(null, true);\\n};\\n\\nGethApiDouble.prototype.personal_sendTransaction = function(txData, password, callback) {\\n  if (txData.from == null) {\\n    var error = \\\"Sender not found\\\";\\n    callback(error);\\n    return;\\n  }\\n\\n  var from = utils.addHexPrefix(txData.from).toLowerCase();\\n\\n  var self = this;\\n  self.personal_unlockAccount(from, password, null, function(err) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    self.state.queueTransaction(\\\"eth_sendTransaction\\\", txData, null, function(err, ret) {\\n      self.state.unlocked_accounts[from.toLowerCase()] = false;\\n      callback(err, ret);\\n    });\\n  });\\n};\\n\\n/* Functions for testing purposes only. */\\n\\nGethApiDouble.prototype.evm_snapshot = function(callback) {\\n  this.state.snapshot(callback);\\n};\\n\\nGethApiDouble.prototype.evm_revert = function(snapshotId, callback) {\\n  this.state.revert(snapshotId, callback);\\n};\\n\\nGethApiDouble.prototype.evm_increaseTime = function(seconds, callback) {\\n  callback(null, this.state.blockchain.increaseTime(seconds));\\n};\\n\\nGethApiDouble.prototype.evm_setTime = function(date, callback) {\\n  callback(null, this.state.blockchain.setTime(date));\\n};\\n\\nGethApiDouble.prototype.evm_mine = function(timestamp, callback) {\\n  if (typeof timestamp === \\\"function\\\") {\\n    callback = timestamp;\\n    timestamp = undefined;\\n  }\\n  this.state.processBlock(timestamp, function(err) {\\n    if (err) {\\n      return callback(err);\\n    }\\n    callback(err, \\\"0x0\\\");\\n  });\\n};\\n\\n// indicate that `evm_mine` only requires one argument (the callback)\\nGethApiDouble.prototype.evm_mine.minLength = 1;\\n\\nGethApiDouble.prototype.debug_traceTransaction = function(txHash, params, callback) {\\n  if (typeof params === \\\"function\\\") {\\n    callback = params;\\n    params = [];\\n  }\\n\\n  this.state.queueTransactionTrace(txHash, params, callback);\\n};\\n\\n/*\\n  RPC AUDIT:\\n  TODO ETH: eth_getUncleCountByBlockHash, eth_getUncleCountByBlockNumber, eth_getUncleByBlockHashAndIndex,\\n        eth_getUncleByBlockNumberAndIndex, eth_getWork, eth_submitWork, eth_submitHashrate\\n\\n  TODO DB: db_putString, db_getString, db_putHex, db_getHex\\n\\n  TODO WHISPER: shh_post, shh_newIdentity, shh_hasIdentity, shh_newGroup, shh_addToGroup,\\n        shh_newFilter, shh_uninstallFilter, shh_getFilterChanges, shh_getMessages\\n*/\\n\\n/**\\n * Returns the number of uncles in a block from a block matching the given block hash.\\n *\\n * @param {DATA, 32 Bytes} hash - hash of a block.\\n * @callback callback\\n * @param {error} err - Error Object\\n * @param {QUANTITY} result - integer of the number of uncles in this block.\\n */\\nGethApiDouble.prototype.eth_getUncleCountByBlockHash = function(hash, callback) {\\n  callback(null, \\\"0x0\\\");\\n};\\n\\n/**\\n * Returns the number of uncles in a block from a block matching the given block number.\\n *\\n * @param {QUANTITY} blockNumber -\\n *  ^integer of a block number, or the string \\\"latest\\\", \\\"earliest\\\" or \\\"pending\\\". Ex: '0xe8', // 232\\n * @callback callback\\n * @param {error} err - Error Object\\n * @param {QUANTITY} result - integer of the number of uncles in this block.\\n */\\nGethApiDouble.prototype.eth_getUncleCountByBlockNumber = function(blockNumber, callback) {\\n  callback(null, \\\"0x0\\\");\\n};\\n\\n/**\\n * Returns information about a uncle of a block by hash and uncle index position.\\n *\\n * @param {DATA, 32 Bytes} hash - hash of a block\\n * @param {QUANTITY} index - the uncle's index position.\\n * @callback callback\\n * @param {error} err - Error Object\\n * @param {Object} result - A block object,\\n */\\nGethApiDouble.prototype.eth_getUncleByBlockHashAndIndex = function(hash, index, callback) {\\n  callback(null, {});\\n};\\n\\n/**\\n * Returns information about a uncle of a block by number and uncle index position.\\n *\\n * @param {QUANTITY} blockNumber -\\n * ^a block number, or the string \\\"earliest\\\", \\\"latest\\\" or \\\"pending\\\", as in the default block parameter.\\n * @param {QUANTITY} uncleIndex - the uncle's index position.\\n * @callback callback\\n * @param {error} err - Error object\\n * @param {Object} resutl - A block object,\\n */\\nGethApiDouble.prototype.eth_getUncleByBlockNumberAndIndex = function(blockNumber, uncleIndex, callback) {\\n  callback(null, {});\\n};\\n\\n/**\\n * Returns: An Array with the following elements\\n * 1: DATA, 32 Bytes - current block header pow-hash\\n * 2: DATA, 32 Bytes - the seed hash used for the DAG.\\n * 3: DATA, 32 Bytes - the boundary condition (\\\"target\\\"), 2^256 / difficulty.\\n *\\n * @param {QUANTITY} filterId - A filter id\\n * @callback callback\\n * @param {error} err - Error object\\n * @param {Array} result - the hash of the current block, the seedHash, and the boundary condition to be met (\\\"target\\\").\\n */\\nGethApiDouble.prototype.eth_getWork = function(filterId, callback) {\\n  callback(null, []);\\n};\\n\\n/**\\n * Used for submitting a proof-of-work solution\\n *\\n * @param {DATA, 8 Bytes} nonce - The nonce found (64 bits)\\n * @param {DATA, 32 Bytes} powHash - The header's pow-hash (256 bits)\\n * @param {DATA, 32 Bytes} digest - The mix digest (256 bits)\\n * @callback callback\\n * @param {error} err - Error object\\n * @param {Boolean} result - returns true if the provided solution is valid, otherwise false.\\n */\\nGethApiDouble.prototype.eth_submitWork = function(nonce, powHash, digest, callback) {\\n  callback(null, false);\\n};\\n\\n/**\\n * Used for submitting mining hashrate.\\n *\\n * @param {String} hashRate - a hexadecimal string representation (32 bytes) of the hash rate\\n * @param {String} clientID - A random hexadecimal(32 bytes) ID identifying the client\\n * @callback callback\\n * @param {error} err - Error object\\n * @param {Boolean} result - returns true if submitting went through succesfully and false otherwise.\\n */\\nGethApiDouble.prototype.eth_submitHashrate = function(hashRate, clientID, callback) {\\n  callback(null, false);\\n};\\n\\n/**\\n * Stores a string in the local database.\\n *\\n * @param {String} dbName - Database name.\\n * @param {String} key - Key name.\\n * @param {String} value - String to store.\\n * @callback callback\\n * @param {error} err - Error object\\n * @param {Boolean} result - returns true if the value was stored, otherwise false.\\n */\\nGethApiDouble.prototype.db_putString = function(dbName, key, value, callback) {\\n  callback(null, false);\\n};\\n\\n/**\\n * Returns string from the local database\\n *\\n * @param {String} dbName - Database name.\\n * @param {String} key - Key name.\\n * @callback callback\\n * @param {error} - Error Object\\n * @param {String} result - The previously stored string.\\n */\\nGethApiDouble.prototype.db_getString = function(dbName, key, callback) {\\n  callback(null, \\\"\\\");\\n};\\n\\n/**\\n * Stores binary data in the local database.\\n *\\n * @param {String} dbName - Database name.\\n * @param {String} key - Key name.\\n * @param {DATA} data - Data to store.\\n * @callback callback\\n * @param {error} err - Error Object\\n * @param {Boolean} result - returns true if the value was stored, otherwise false.\\n */\\nGethApiDouble.prototype.db_putHex = function(dbName, key, data, callback) {\\n  callback(null, false);\\n};\\n\\n/**\\n * Returns binary data from the local database\\n *\\n * @param {String} dbName - Database name.\\n * @param {String} key - Key name.\\n * @callback callback\\n * @param {error} err - Error Object\\n * @param {DATA} result - The previously stored data.\\n */\\nGethApiDouble.prototype.db_getHex = function(dbName, key, callback) {\\n  callback(null, \\\"0x00\\\");\\n};\\n\\n/**\\n * Sends a whisper message.\\n *\\n * @param {DATA, 60 Bytes} from - (optional) The identity of the sender.\\n * @param {DATA, 60 Bytes} to -\\n *  ^(optional) The identity of the receiver. When present whisper will encrypt the message so that\\n *  only the receiver can decrypt it.\\n * @param {Array of DATA} topics - Array of DATA topics, for the receiver to identify messages.\\n * @param {DATA} payload - The payload of the message.\\n * @param {QUANTITY} priority - The integer of the priority in a range from ... (?).\\n * @param {QUANTITY} ttl - integer of the time to live in seconds.\\n * @callback callback\\n * @param {error} err - Error Object\\n * @param {Boolean} result - returns true if the message was sent, otherwise false.\\n */\\nGethApiDouble.prototype.shh_post = function(from, to, topics, payload, priority, ttl, callback) {\\n  callback(null, false);\\n};\\n\\n/**\\n * Creates new whisper identity in the client.\\n *\\n * @callback callback\\n * @param {error} err - Error Object\\n * @param {DATA, 60 Bytes} result - the address of the new identiy.\\n */\\nGethApiDouble.prototype.shh_newIdentity = function(callback) {\\n  callback(null, \\\"0x00\\\");\\n};\\n\\n/**\\n * Checks if the client hold the private keys for a given identity.\\n *\\n * @param {DATA, 60 Bytes} address - The identity address to check.\\n * @callback callback\\n * @param {error} err - Error Object\\n * @param {Boolean} result - returns true if the client holds the privatekey for that identity, otherwise false.\\n */\\nGethApiDouble.prototype.shh_hasIdentity = function(address, callback) {\\n  callback(null, false);\\n};\\n\\n/**\\n * Creates a new group.\\n *\\n * @callback callback\\n * @param {error} err - Error Object\\n * @param {DATA, 60 Bytes} result - the address of the new group.\\n */\\nGethApiDouble.prototype.shh_newGroup = function(callback) {\\n  callback(null, \\\"0x00\\\");\\n};\\n\\n/**\\n * Adds a whisper identity to the group\\n *\\n * @param {DATA, 60 Bytes} - The identity address to add to a group.\\n * @callback callback\\n * @param {error} err - Error Object\\n * @param {Boolean} result - returns true if the identity was successfully added to the group, otherwise false.\\n */\\nGethApiDouble.prototype.shh_addToGroup = function(address, callback) {\\n  callback(null, false);\\n};\\n\\n/**\\n * Creates filter to notify, when client receives whisper message matching the filter options.\\n *\\n * @param {DATA, 60 Bytes} to -\\n * ^(optional) Identity of the receiver. When present it will try to decrypt any incoming message\\n *  if the client holds the private key to this identity.\\n * @param {Array of DATA} topics - Array of DATA topics which the incoming message's topics should match.\\n * @callback callback\\n * @param {error} err - Error Object\\n * @param {Boolean} result - returns true if the identity was successfully added to the group, otherwise false.\\n */\\nGethApiDouble.prototype.shh_newFilter = function(to, topics, callback) {\\n  callback(null, false);\\n};\\n\\n/**\\n * Uninstalls a filter with given id. Should always be called when watch is no longer needed.\\n * Additonally Filters timeout when they aren't requested with shh_getFilterChanges for a period of time.\\n *\\n * @param {QUANTITY} id - The filter id. Ex: \\\"0x7\\\"\\n * @callback callback\\n * @param {error} err - Error Object\\n * @param {Boolean} result - true if the filter was successfully uninstalled, otherwise false.\\n */\\nGethApiDouble.prototype.shh_uninstallFilter = function(id, callback) {\\n  callback(null, false);\\n};\\n\\n/**\\n * Polling method for whisper filters. Returns new messages since the last call of this method.\\n *\\n * @param {QUANTITY} id - The filter id. Ex: \\\"0x7\\\"\\n * @callback callback\\n * @param {error} err - Error Object\\n * @param {Array} result - More Info: https://github.com/ethereum/wiki/wiki/JSON-RPC#shh_getfilterchanges\\n */\\nGethApiDouble.prototype.shh_getFilterChanges = function(id, callback) {\\n  callback(null, []);\\n};\\n\\n/**\\n * Get all messages matching a filter. Unlike shh_getFilterChanges this returns all messages.\\n *\\n * @param {QUANTITY} id - The filter id. Ex: \\\"0x7\\\"\\n * @callback callback\\n * @param {error} err - Error Object\\n * @param {Array} result - See: shh_getFilterChanges\\n */\\nGethApiDouble.prototype.shh_getMessages = function(id, callback) {\\n  callback(null, false);\\n};\\n\\nmodule.exports = GethApiDouble;\\n\",\"var Account = require(\\\"ethereumjs-account\\\");\\nvar RuntimeError = require(\\\"./utils/runtimeerror\\\");\\nvar Transaction = require(\\\"./utils/transaction\\\");\\nvar utils = require(\\\"ethereumjs-util\\\");\\nvar seedrandom = require(\\\"seedrandom\\\");\\nvar bip39 = require(\\\"bip39\\\");\\nvar wallet = require(\\\"ethereumjs-wallet\\\");\\nvar hdkey = require(\\\"ethereumjs-wallet/hdkey\\\");\\nvar async = require(\\\"async\\\");\\nvar BlockchainDouble = require(\\\"./blockchain_double.js\\\");\\nvar ForkedBlockchain = require(\\\"./utils/forkedblockchain.js\\\");\\nvar Web3 = require(\\\"web3\\\");\\nvar sigUtil = require(\\\"eth-sig-util\\\");\\nvar _ = require(\\\"lodash\\\");\\nconst { BlockOutOfRangeError } = require(\\\"./utils/errorhelper\\\");\\nconst BN = require(\\\"bn.js\\\");\\n\\nconst ZERO_BUFFER = Buffer.from([0]);\\n\\nvar to = require(\\\"./utils/to\\\");\\nvar random = require(\\\"./utils/random\\\");\\nvar TXRejectedError = require(\\\"./utils/txrejectederror\\\");\\n\\nfunction StateManager(options, provider) {\\n  this.options = options = this._applyDefaultOptions(options || {});\\n\\n  if (options.fork) {\\n    this.blockchain = new ForkedBlockchain(options);\\n  } else {\\n    this.blockchain = new BlockchainDouble(options);\\n  }\\n\\n  this.vm = this.blockchain.vm;\\n  this.stateTrie = this.blockchain.stateTrie;\\n\\n  this.accounts = {};\\n  this.secure = !!options.secure;\\n  this.account_passwords = {};\\n  this.personal_accounts = {};\\n  this.total_accounts = options.total_accounts;\\n  this.coinbase = null;\\n\\n  this.latest_filter_id = 1;\\n\\n  // This queue manages actions that shouldn't be run in parallel.\\n  // The action_processing flag ensures new actions are queued instead of\\n  // run immediately.\\n  this.action_queue = [];\\n  this.action_processing = false;\\n\\n  this.snapshots = [];\\n  this.logger = options.logger;\\n  this.net_version = options.network_id;\\n  this.mnemonic = options.mnemonic;\\n  this.wallet = hdkey.fromMasterSeed(bip39.mnemonicToSeed(this.mnemonic));\\n  this.wallet_hdpath = options.hdPath;\\n\\n  this.gasPriceVal = to.rpcQuantityHexString(options.gasPrice);\\n\\n  this.is_mining = true;\\n  this.blockTime = options.blockTime;\\n  this.is_mining_on_interval = !!options.blockTime;\\n  this.mining_interval_timeout = null;\\n\\n  this._provider = provider;\\n}\\n\\nconst defaultOptions = {\\n  total_accounts: 10,\\n  gasPrice: \\\"0x77359400\\\", // 2 gwei\\n  default_balance_ether: 100,\\n  unlocked_accounts: [],\\n  hdPath: \\\"m/44'/60'/0'/0/\\\"\\n};\\n\\nStateManager.prototype._applyDefaultOptions = function(options) {\\n  // do this so that we can use the same seed on our next run and get the same\\n  // results without explicitly setting a seed up front\\n  if (!options.seed) {\\n    options.seed = random.randomAlphaNumericString(10, seedrandom());\\n  }\\n\\n  // generate a randomized default mnemonic\\n  if (!options.mnemonic) {\\n    let randomBytes = random.randomBytes(16, seedrandom(options.seed));\\n    options.mnemonic = bip39.entropyToMnemonic(randomBytes.toString(\\\"hex\\\"));\\n  }\\n\\n  if (!options.fork && !options.network_id) {\\n    options.network_id = new Date().getTime();\\n  }\\n\\n  // We want this function to mutate the options object so that we can report\\n  // our settings back to our consumer application (e.g., ganache)\\n  return _.merge(options, defaultOptions, Object.assign({}, options));\\n};\\n\\nStateManager.prototype.initialize = function(callback) {\\n  var self = this;\\n\\n  var accounts = [];\\n\\n  let defaultBalanceWei = to.hex(Web3.utils.toWei(self.options.default_balance_ether.toString(), \\\"ether\\\"));\\n\\n  if (self.options.accounts) {\\n    accounts = self.options.accounts.map(self.createAccount.bind(self));\\n  } else {\\n    if (!self.total_accounts) {\\n      return callback(\\n        new Error(\\\"Cannot initialize chain: either options.accounts or options.total_accounts must be specified\\\")\\n      );\\n    }\\n\\n    for (var i = 0; i < self.total_accounts; i++) {\\n      accounts.push(\\n        self.createAccount({\\n          index: i,\\n          balance: defaultBalanceWei\\n        })\\n      );\\n    }\\n  }\\n\\n  self.coinbase = to.hex(accounts[0].address);\\n  self.accounts = {};\\n\\n  accounts.forEach(function(data) {\\n    self.accounts[data.address] = data;\\n    self.personal_accounts[data.address.toLowerCase()] = true;\\n  });\\n\\n  // Turn array into object, mostly for speed purposes.\\n  // No need for caller to specify private keys.\\n  self.unlocked_accounts = self.options.unlocked_accounts.reduce(function(obj, address) {\\n    // If it doesn't have a hex prefix, must be a number (either a string or number type).\\n    if ((address + \\\"\\\").indexOf(\\\"0x\\\") !== 0) {\\n      let idx = parseInt(address);\\n      let account = accounts[idx];\\n      if (!account) {\\n        throw new Error(`Account at index ${idx} not found. Max index available is ${accounts.length - 1}.`);\\n      }\\n      address = account.address.toLowerCase();\\n    }\\n\\n    obj[address.toLowerCase()] = true; // can be any value\\n    return obj;\\n  }, {});\\n\\n  if (!self.secure) {\\n    accounts.forEach(function(data) {\\n      self.unlocked_accounts[data.address.toLowerCase()] = data;\\n    });\\n  }\\n\\n  self.blockchain.initialize(accounts, function(err) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    // If the user didn't pass a specific version id in, then use the\\n    // forked blockchain's version (if it exists) or create our own.\\n    if (!self.net_version) {\\n      self.net_version = self.blockchain.forkVersion;\\n    }\\n\\n    if (self.is_mining_on_interval) {\\n      self.mineOnInterval();\\n    }\\n\\n    callback();\\n  });\\n};\\n\\nStateManager.prototype._minerCancellationToken = null;\\nStateManager.prototype.mineOnInterval = function() {\\n  // cancel the a previous miner's timeout\\n  clearTimeout(this.mining_interval_timeout);\\n\\n  // make sure a pending eth_mine doesn't come back and execute mineOnInterval\\n  // again...\\n  if (this._minerCancellationToken !== null) {\\n    this._minerCancellationToken.cancelled = true;\\n  }\\n\\n  // if mining was stopped `mineOnInterval` shouldn't start mining again\\n  if (!this.is_mining) {\\n    this.logger.log(\\\"Warning: mineOnInterval called when miner was stopped\\\");\\n    return;\\n  }\\n\\n  const cancellationToken = { cancelled: false };\\n  this._minerCancellationToken = cancellationToken;\\n\\n  const timeout = (this.mining_interval_timeout = setTimeout(\\n    this._provider.send.bind(this._provider),\\n    this.blockTime * 1000,\\n    { method: \\\"evm_mine\\\" },\\n    () => {\\n      if (!cancellationToken.cancelled) {\\n        this.mineOnInterval.bind(this)();\\n      }\\n    }\\n  ));\\n\\n  // Ensure this won't keep a node process open.\\n  if (typeof timeout.unref === \\\"function\\\") {\\n    timeout.unref();\\n  }\\n};\\n\\nStateManager.prototype.createAccount = function(opts, i) {\\n  var secretKey;\\n\\n  if (opts.generate) {\\n    secretKey = wallet.generate().getPrivateKey();\\n  } else if (opts.secretKey) {\\n    secretKey = utils.toBuffer(to.hex(opts.secretKey));\\n  } else {\\n    var index = typeof opts.index === \\\"undefined\\\" ? i : opts.index;\\n    var acct = this.wallet.derivePath(this.wallet_hdpath + index); // index is a number\\n    secretKey = acct.getWallet().getPrivateKey(); // Buffer\\n  }\\n\\n  var publicKey = utils.privateToPublic(secretKey);\\n  var address = utils.publicToAddress(publicKey);\\n\\n  var account = new Account();\\n\\n  account.balance = to.hex(opts.balance);\\n\\n  var data = {\\n    secretKey: secretKey,\\n    publicKey: publicKey,\\n    address: to.hex(address).toLowerCase(),\\n    account: account\\n  };\\n\\n  return data;\\n};\\n\\nStateManager.prototype.blockNumber = function(callback) {\\n  return this.blockchain.getHeight(callback);\\n};\\n\\nStateManager.prototype.gasPrice = function() {\\n  return this.gasPriceVal;\\n};\\n\\nStateManager.prototype.getBalance = function(address, number, callback) {\\n  this.blockchain.getBalance(address, number, function(err, balance) {\\n    if (balance) {\\n      balance = to.rpcQuantityHexString(balance);\\n    }\\n    callback(err, balance);\\n  });\\n};\\n\\nStateManager.prototype.getTransactionCount = function(address, number, callback) {\\n  this.blockchain.getNonce(address, number, function(err, nonce) {\\n    if (nonce) {\\n      nonce = to.rpcQuantityHexString(nonce);\\n    }\\n    callback(err, nonce);\\n  });\\n};\\n\\nStateManager.prototype.getCode = function(address, number, callback) {\\n  this.blockchain.getCode(address, number, function(err, code) {\\n    if (code) {\\n      code = to.hex(code);\\n    }\\n    callback(err, code);\\n  });\\n};\\n\\nStateManager.prototype.queueRawTransaction = function(data, callback) {\\n  const tx = new Transaction(data, Transaction.types.signed);\\n  // use toLowerCase() to properly handle from addresses meant to be validated.\\n  const from = to.hex(tx.from).toLowerCase();\\n  this._queueTransaction(\\\"eth_sendRawTransaction\\\", tx, from, null, callback);\\n};\\n\\nStateManager.prototype.queueStorage = function(address, position, block, callback) {\\n  this.action_queue.push({\\n    method: \\\"eth_getStorageAt\\\",\\n    address: utils.addHexPrefix(address),\\n    position: utils.addHexPrefix(position),\\n    block: block,\\n    callback: callback\\n  });\\n\\n  // We know there's work, so get started.\\n  this.processNextAction();\\n};\\n\\nStateManager.prototype.queueTransaction = function(method, txJsonRpc, blockNumber, callback) {\\n  // use toLowerCase() to properly handle from addresses meant to be validated.\\n  const from = txJsonRpc.from ? to.hex(txJsonRpc.from).toLowerCase() : null;\\n\\n  if (from == null) {\\n    callback(new TXRejectedError(\\\"from not found; is required\\\"));\\n    return;\\n  }\\n\\n  // Error checks. It's possible to JSON.stringify a Buffer to JSON.\\n  // we actually now handle this \\\"properly\\\" (not sure about spec), but for\\n  // legacy reasons we don't allow it.\\n  if (txJsonRpc.to && typeof txJsonRpc.to !== \\\"string\\\") {\\n    return callback(new TXRejectedError(\\\"Invalid to address\\\"));\\n  }\\n\\n  const isKnownAccount = this.accounts.hasOwnProperty(from);\\n\\n  if (method === \\\"eth_sendTransaction\\\" && !this.unlocked_accounts.hasOwnProperty(from)) {\\n    const msg = isKnownAccount ? \\\"signer account is locked\\\" : \\\"sender account not recognized\\\";\\n    return callback(new TXRejectedError(msg));\\n  }\\n\\n  let type = Transaction.types.none;\\n  if (!isKnownAccount || method === \\\"eth_call\\\") {\\n    type |= Transaction.types.fake;\\n  }\\n\\n  let tx;\\n  try {\\n    tx = Transaction.fromJSON(txJsonRpc, type);\\n    this._setTransactionDefaults(tx);\\n  } catch (e) {\\n    callback(e);\\n    return;\\n  }\\n  this._queueTransaction(method, tx, from, blockNumber, callback);\\n};\\n\\nStateManager.prototype._setTransactionDefaults = function(tx) {\\n  if (tx.gasLimit.length === 0) {\\n    tx.gasLimit = utils.toBuffer(this.blockchain.defaultTransactionGasLimit);\\n  }\\n\\n  if (tx.gasPrice.length === 0) {\\n    tx.gasPrice = utils.toBuffer(this.gasPriceVal);\\n  }\\n\\n  if (tx.value.length === 0) {\\n    tx.value = Buffer.from([0]);\\n  }\\n\\n  if (tx.to.length === 0 || tx.to.equals(ZERO_BUFFER)) {\\n    tx.to = Buffer.allocUnsafe(0);\\n  }\\n};\\n\\nStateManager.prototype._queueTransaction = function(method, tx, from, blockNumber, callback) {\\n  if (!(tx instanceof Transaction)) {\\n    throw new TXRejectedError(\\\"tx must be of type Transaction\\\");\\n  }\\n\\n  // If the transaction has a higher gas limit than the block gas limit, error.\\n  if (to.number(tx.gasLimit) > to.number(this.blockchain.blockGasLimit)) {\\n    return callback(new TXRejectedError(\\\"Exceeds block gas limit\\\"));\\n  }\\n\\n  this.action_queue.push({\\n    method,\\n    from,\\n    tx,\\n    callback,\\n    blockNumber\\n  });\\n\\n  // We know there's work, so get started.\\n  this.processNextAction();\\n};\\n\\nStateManager.prototype.queueTransactionTrace = function(txHash, params, callback) {\\n  this.action_queue.push({\\n    method: \\\"debug_traceTransaction\\\",\\n    hash: to.hex(txHash),\\n    params: params,\\n    callback: callback\\n  });\\n\\n  // We know there's work, so get started.\\n  this.processNextAction();\\n};\\n\\nStateManager.prototype.processNextAction = function(override) {\\n  var self = this;\\n\\n  if (override !== true) {\\n    if (this.action_processing === true || this.action_queue.length === 0) {\\n      return;\\n    }\\n  }\\n\\n  var queued = this.action_queue.shift();\\n\\n  // Set the flag that we're currently processing something.\\n  this.action_processing = true;\\n\\n  var intermediary = function(err, result) {\\n    queued.callback(err, result);\\n\\n    if (self.action_queue.length > 0) {\\n      self.processNextAction(true);\\n    } else {\\n      self.action_processing = false;\\n    }\\n  };\\n\\n  if (typeof queued.method === \\\"function\\\") {\\n    var result = queued.method();\\n    return intermediary(null, result);\\n  } else if (queued.method === \\\"eth_getStorageAt\\\") {\\n    this.blockchain.getStorage(queued.address, queued.position, queued.block, function(err, result) {\\n      if (err) {\\n        return intermediary(err);\\n      }\\n\\n      if (result) {\\n        result = utils.rlp.decode(result);\\n      }\\n\\n      result = to.hex(result || 0);\\n      intermediary(null, result);\\n    });\\n  } else if (queued.method === \\\"debug_traceTransaction\\\") {\\n    this.blockchain.processTransactionTrace(queued.hash, queued.params, intermediary);\\n  } else if (queued.method === \\\"eth_sendTransaction\\\" || queued.method === \\\"eth_sendRawTransaction\\\") {\\n    this.processTransaction(queued.from, queued.tx, intermediary);\\n  } else if (queued.method === \\\"eth_call\\\") {\\n    this.processCall(queued.from, queued.tx, queued.blockNumber, intermediary);\\n  } else if (queued.method === \\\"eth_estimateGas\\\") {\\n    this.processGasEstimate(queued.from, queued.tx, queued.blockNumber, intermediary);\\n  }\\n};\\n\\nStateManager.prototype.sign = function(address, dataToSign) {\\n  var account = this.accounts[to.hex(address).toLowerCase()];\\n\\n  if (!account) {\\n    throw new Error(\\\"cannot sign data; no private key\\\");\\n  }\\n\\n  var secretKey = account.secretKey;\\n  var msg = to.buffer(dataToSign, \\\"hex\\\");\\n  var msgHash = utils.hashPersonalMessage(msg);\\n  var sgn = utils.ecsign(msgHash, Buffer.from(secretKey));\\n  return utils.toRpcSig(sgn.v, sgn.r, sgn.s);\\n};\\n\\nStateManager.prototype.signTypedData = function(address, typedDataToSign) {\\n  var account = this.accounts[to.hex(address).toLowerCase()];\\n  if (!account) {\\n    throw new Error(\\\"cannot sign data; no private key\\\");\\n  }\\n\\n  if (!typedDataToSign.types) {\\n    throw new Error(\\\"cannot sign data; types missing\\\");\\n  }\\n\\n  if (!typedDataToSign.types.EIP712Domain) {\\n    throw new Error(\\\"cannot sign data; EIP712Domain definition missing\\\");\\n  }\\n\\n  if (!typedDataToSign.domain) {\\n    throw new Error(\\\"cannot sign data; domain missing\\\");\\n  }\\n\\n  if (!typedDataToSign.primaryType) {\\n    throw new Error(\\\"cannot sign data; primaryType missing\\\");\\n  }\\n\\n  if (!typedDataToSign.message) {\\n    throw new Error(\\\"cannot sign data; message missing\\\");\\n  }\\n\\n  return sigUtil.signTypedData(account.secretKey, { data: typedDataToSign });\\n};\\n\\nStateManager.prototype.printTransactionReceipt = function(txHash, error, callback) {\\n  var self = this;\\n\\n  self.blockchain.getTransactionReceipt(txHash, function(err, receipt) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    self.blockchain.latestBlock(function(err, block) {\\n      if (err) {\\n        return callback(err);\\n      }\\n\\n      receipt = receipt.toJSON();\\n\\n      self.logger.log(\\\"\\\");\\n      self.logger.log(\\\"  Transaction: \\\" + txHash);\\n\\n      if (receipt.contractAddress != null) {\\n        self.logger.log(\\\"  Contract created: \\\" + receipt.contractAddress);\\n      }\\n\\n      self.logger.log(\\\"  Gas usage: \\\" + parseInt(receipt.gasUsed, 16));\\n      self.logger.log(\\\"  Block Number: \\\" + parseInt(receipt.blockNumber, 16));\\n      self.logger.log(\\\"  Block Time: \\\" + new Date(to.number(block.header.timestamp) * 1000).toString());\\n\\n      if (error) {\\n        self.logger.log(\\\"  Runtime Error: \\\" + error.error);\\n        if (error.reason) {\\n          self.logger.log(\\\"  Revert reason: \\\" + error.reason);\\n        }\\n      }\\n\\n      self.logger.log(\\\"\\\");\\n\\n      callback(null, txHash);\\n    });\\n  });\\n};\\n\\nStateManager.prototype.processBlock = function(timestamp, callback) {\\n  var self = this;\\n\\n  if (typeof timestamp === \\\"function\\\") {\\n    callback = timestamp;\\n    timestamp = null;\\n  }\\n\\n  self.blockchain.processNextBlock(timestamp, function(runtimeError, transactions, vmOutput) {\\n    if (runtimeError && runtimeError instanceof RuntimeError === false) {\\n      // This is bad. Get out.\\n      return callback(runtimeError, transactions, vmOutput);\\n    }\\n\\n    // TODO: Can we refactor printTransactionReceipt so it's synchronous?\\n    // We technically have the raw vm receipts (though they're not full receipts here...).\\n    async.eachSeries(\\n      transactions,\\n      function(tx, finishedPrinting) {\\n        var hash = to.hex(tx.hash());\\n        var error = runtimeError == null ? { results: {} } : runtimeError;\\n        self.printTransactionReceipt(hash, error.results[hash], finishedPrinting);\\n      },\\n      callback(runtimeError, transactions, vmOutput)\\n    );\\n  });\\n};\\n\\nStateManager.prototype.processBlocks = function(totalBlocks, callback) {\\n  var self = this;\\n\\n  if (typeof totalBlocks === \\\"function\\\") {\\n    callback = totalBlocks;\\n    totalBlocks = null;\\n  }\\n\\n  // Note: VM errors (errors that the VM directly returns) trump all runtime errors.\\n  var runtimeError = null;\\n  var amountProcessed = 0;\\n\\n  async.whilst(\\n    function() {\\n      var shouldContinue;\\n\\n      if (totalBlocks == null) {\\n        shouldContinue = self.blockchain.pending_transactions.length > 0;\\n      } else {\\n        shouldContinue = amountProcessed < totalBlocks;\\n      }\\n\\n      return shouldContinue;\\n    },\\n    function(done) {\\n      self.processBlock(function(err, transactions, vmOutput) {\\n        amountProcessed += 1;\\n\\n        if (err) {\\n          if (err instanceof RuntimeError === false) {\\n            // This is bad. Get out.\\n            return done(err);\\n          }\\n\\n          // We must have a RuntimeError. Merge results if we've found\\n          // other runtime errors during this execution.\\n          if (runtimeError == null) {\\n            runtimeError = err;\\n          } else {\\n            runtimeError.combine(err);\\n          }\\n        }\\n\\n        // Note we don't quit on runtime errors. We keep processing transactions.\\n        done();\\n      });\\n    },\\n    function(err) {\\n      // Remember: vm errors trump runtime errors\\n      callback(err || runtimeError);\\n    }\\n  );\\n};\\n\\nStateManager.prototype.processCall = function(from, tx, blockNumber, callback) {\\n  var self = this;\\n\\n  self.createTransactionWithCorrectNonce(tx, from, function(err, tx) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    self.blockchain.processCall(tx, blockNumber, function(err, results) {\\n      if (err) {\\n        if (err instanceof BlockOutOfRangeError) {\\n          // block doesn't exist\\n          return callback(null, null);\\n        }\\n        return callback(err);\\n      }\\n\\n      var result = \\\"0x\\\";\\n      if (!results.error && results.vm.return) {\\n        result = to.hex(results.vm.return);\\n      } else if (results.error) {\\n        self.logger.log(`Error processing call: ${results.error}`);\\n      }\\n\\n      return callback(null, result);\\n    });\\n  });\\n};\\n\\nStateManager.prototype.processGasEstimate = function(from, tx, blockNumber, callback) {\\n  var self = this;\\n\\n  self.createTransactionWithCorrectNonce(tx, from, function(err, tx) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    self.blockchain.estimateGas(tx, blockNumber, function(err, results) {\\n      if (err) {\\n        return callback(err);\\n      }\\n      var result = \\\"0x\\\";\\n      if (!results.error) {\\n        result = results.gasRefund ? to.hex(results.gasEstimate.add(results.gasRefund)) : to.hex(results.gasEstimate);\\n      } else {\\n        self.logger.log(`Error calculating gas estimate: ${results.error}`);\\n      }\\n      return callback(null, result);\\n    });\\n  });\\n};\\n\\nStateManager.prototype.processTransaction = function(from, tx, callback) {\\n  var self = this;\\n\\n  self.createTransactionWithCorrectNonce(tx, from, function(err, tx) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    self.blockchain.queueTransaction(tx);\\n\\n    var txHash = to.hex(tx.hash());\\n\\n    // If we're not currently mining or we're mining on an interval,\\n    // only queue the transaction, don't process it.\\n    if (self.is_mining === false || self.is_mining_on_interval) {\\n      return callback(null, txHash);\\n    }\\n\\n    self.processBlocks(function(err) {\\n      if (err) {\\n        return callback(err);\\n      }\\n      callback(null, txHash);\\n    });\\n  });\\n};\\n\\nStateManager.prototype.getTransactionReceipt = function(hash, callback) {\\n  this.blockchain.getTransactionReceipt(hash, function(err, receipt) {\\n    if (err && err.notFound) {\\n      // Return null if the receipt's not found.\\n      return callback(null, null);\\n    }\\n    callback(err, receipt);\\n  });\\n};\\n\\nStateManager.prototype.getBlock = function(hashOrNumber, callback) {\\n  this.blockchain.getBlock(hashOrNumber, callback);\\n};\\n\\nStateManager.prototype.getLogs = function(filter, callback) {\\n  var self = this;\\n\\n  // filter.address may be a single address or an array\\n  // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_getlogs\\n  var expectedAddress = filter.address && (Array.isArray(filter.address) ? filter.address : [filter.address]);\\n  expectedAddress =\\n    expectedAddress &&\\n    expectedAddress.map(function(a) {\\n      return a.toLowerCase();\\n    });\\n  var expectedTopics = filter.topics || [];\\n\\n  async.parallel(\\n    {\\n      fromBlock: this.blockchain.getEffectiveBlockNumber.bind(this.blockchain, filter.fromBlock || \\\"latest\\\"),\\n      toBlock: this.blockchain.getEffectiveBlockNumber.bind(this.blockchain, filter.toBlock || \\\"latest\\\"),\\n      latestBlock: this.blockchain.getEffectiveBlockNumber.bind(this.blockchain, \\\"latest\\\")\\n    },\\n    function(err, results) {\\n      if (err) {\\n        return callback(err);\\n      }\\n      var fromBlock = results.fromBlock;\\n      var toBlock = results.toBlock;\\n      var latestBlock = results.latestBlock;\\n\\n      if (toBlock > latestBlock) {\\n        toBlock = latestBlock;\\n      }\\n\\n      var logs = [];\\n      var current = fromBlock;\\n\\n      async.whilst(\\n        function() {\\n          return current <= toBlock;\\n        },\\n        function(finished) {\\n          self.blockchain.getBlockLogs(current, function(err, blockLogs) {\\n            if (err) {\\n              return finished(err);\\n            }\\n\\n            // Filter logs that match the address\\n            var filtered = !expectedAddress\\n              ? blockLogs\\n              : blockLogs.filter(function(log) {\\n                return expectedAddress.indexOf(log.address.toLowerCase()) > -1;\\n              });\\n\\n            // Now filter based on topics.\\n            filtered = filtered.filter(function(log) {\\n              var keep = true;\\n              for (var i = 0; i < expectedTopics.length; i++) {\\n                var expectedTopic = expectedTopics[i];\\n                var logTopic = log.topics[i];\\n                if (expectedTopic == null) {\\n                  continue;\\n                }\\n                var isMatch = Array.isArray(expectedTopic)\\n                  ? expectedTopic.includes(logTopic)\\n                  : expectedTopic === logTopic;\\n                if (i >= log.topics.length || !isMatch) {\\n                  keep = false;\\n                  break;\\n                }\\n              }\\n              return keep;\\n            });\\n\\n            logs.push.apply(logs, filtered);\\n\\n            current += 1;\\n            finished();\\n          });\\n        },\\n        function(err) {\\n          if (err) {\\n            return callback(err);\\n          }\\n\\n          logs = logs.map(function(log) {\\n            return log.toJSON();\\n          });\\n\\n          callback(err, logs);\\n        }\\n      );\\n    }\\n  );\\n};\\n\\n// Note: Snapshots have 1-based ids.\\nStateManager.prototype.snapshot = function(callback) {\\n  var self = this;\\n\\n  this.blockchain.getHeight(function(err, blockNumber) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    self.snapshots.push({\\n      blockNumber: blockNumber,\\n      timeAdjustment: self.blockchain.timeAdjustment\\n    });\\n\\n    self.logger.log(\\\"Saved snapshot #\\\" + self.snapshots.length);\\n\\n    callback(null, to.hex(self.snapshots.length));\\n  });\\n};\\n\\nStateManager.prototype.revert = function(snapshotId, callback) {\\n  var self = this;\\n\\n  // Convert from hex.\\n  snapshotId = utils.bufferToInt(snapshotId);\\n\\n  this.logger.log(\\\"Reverting to snapshot #\\\" + snapshotId);\\n\\n  if (snapshotId > this.snapshots.length) {\\n    // the snapshot doesn't exist now, or it has already been reverted\\n    callback(null, false);\\n    return false;\\n  }\\n\\n  // Convert to zero based.\\n  snapshotId = snapshotId - 1;\\n  var timeAdjustment = this.snapshots[snapshotId].timeAdjustment;\\n\\n  // Loop through each snapshot with a higher id than the current one.\\n  async.whilst(\\n    function() {\\n      return self.snapshots.length > snapshotId;\\n    },\\n    function(nextSnapshot) {\\n      var snapshot = self.snapshots.pop();\\n\\n      // For each snapshot, asynchronously pop off the blocks it represents.\\n      async.during(\\n        function(doneWithTest) {\\n          self.blockchain.getHeight(function(err, blockNumber) {\\n            if (err) {\\n              return doneWithTest(err);\\n            }\\n\\n            doneWithTest(null, blockNumber > snapshot.blockNumber);\\n          });\\n        },\\n        function(nextBlock) {\\n          self.blockchain.popBlock(function(err) {\\n            if (err) {\\n              return nextBlock(err);\\n            }\\n            nextBlock();\\n          });\\n        },\\n        nextSnapshot\\n      );\\n    },\\n    function(err) {\\n      if (err) {\\n        return callback(err);\\n      }\\n\\n      // Pending transactions are removed when you revert.\\n      self.blockchain.clearPendingTransactions();\\n      // The time adjustment is restored to its prior state\\n      self.blockchain.timeAdjustment = timeAdjustment;\\n\\n      callback(null, true);\\n    }\\n  );\\n};\\n\\nStateManager.prototype.hasContractCode = function(address, callback) {\\n  this.vm.stateManager.getContractCode(address, function(err, result) {\\n    if (err != null) {\\n      callback(err, false);\\n    } else {\\n      callback(null, true);\\n    }\\n  });\\n};\\n\\nStateManager.prototype.startMining = function(callback) {\\n  if (this.is_mining) {\\n    process.nextTick(callback);\\n    this.logger.log(\\\"Warning: startMining called when miner was already started\\\");\\n    return;\\n  }\\n\\n  this.is_mining = true;\\n\\n  if (this.is_mining_on_interval) {\\n    this.mineOnInterval();\\n    process.nextTick(callback);\\n  } else {\\n    this.processBlocks(callback);\\n  }\\n};\\n\\nStateManager.prototype.stopMining = function(callback) {\\n  if (this.is_mining) {\\n    if (this._minerCancellationToken) {\\n      this._minerCancellationToken.cancelled = true;\\n      this._minerCancellationToken = null;\\n    }\\n    this.is_mining = false;\\n    clearTimeout(this.mining_interval_timeout);\\n    this.mining_interval_timeout = null;\\n  } else {\\n    this.logger.log(\\\"Warning: stopMining called when miner was already stopped\\\");\\n  }\\n  callback && process.nextTick(callback);\\n};\\n\\nStateManager.prototype.isUnlocked = function(address) {\\n  return this.unlocked_accounts[address.toLowerCase()] != null;\\n};\\n\\nStateManager.prototype.createTransactionWithCorrectNonce = function(tx, from, callback) {\\n  // account for transactions waiting in the tx queue\\n  this.blockchain.getQueuedNonce(from, (err, expectedNonce) => {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    const validateNonce = (tx, expectedNonce) => {\\n      if (tx.validateNonce(expectedNonce)) {\\n        return Promise.resolve(tx);\\n      } else {\\n        const expected = new BN(expectedNonce).toString(10);\\n        const actual = new BN(tx.nonce).toString(10);\\n        return Promise.reject(\\n          new TXRejectedError(\\n            `the tx doesn't have the correct nonce. account has nonce of: ${expected} tx has nonce of: ${actual}`\\n          )\\n        );\\n      }\\n    };\\n    const done = (tx) => callback(null, tx);\\n\\n    if (tx.isSigned()) {\\n      validateNonce(tx, expectedNonce)\\n        .then(done)\\n        .catch(callback);\\n    } else {\\n      const sign = (tx) => {\\n        // we need to sign transactions if they haven't been signed already\\n        // but we never sign fake transactions\\n        if (!tx.isFake() && !tx.isSigned()) {\\n          const account = this.accounts[from];\\n          if (account) {\\n            tx.sign(account.secretKey);\\n          }\\n        }\\n        return Promise.resolve(tx);\\n      };\\n\\n      // Validate the tx's nonce and then sign the transaction.\\n      // By signing this transaction now we ensure all future calls to tx.hash()\\n      // return the same signed transaction hash. It's sort of an unintuitive\\n      // quirk of etheremjs-tx that:\\n      //   tx.hash(includeSignature);\\n      //   tx.sign(secretKey);\\n      //   tx.hash(includeSignature);\\n      // will produce different hashes.\\n      if (tx.nonce.length === 0) {\\n        // Since this transaction is unsigned and the nonce was not defined\\n        // we can go ahead and change the nonce and not worry about\\n        // invalidating the tx hash the client may be expecting (automatic nonce\\n        // calculation should have been expected by the client in this case).\\n        tx.nonce = expectedNonce;\\n        sign(tx).then(done);\\n      } else {\\n        validateNonce(tx, expectedNonce)\\n          .then(sign)\\n          .then(done)\\n          .catch(callback);\\n      }\\n    }\\n  });\\n};\\nmodule.exports = StateManager;\\n\",\"module.exports = require(\\\"ethereumjs-abi\\\");\",\"module.exports = require(\\\"ethereumjs-tx\\\");\",\"module.exports = require(\\\"ethereumjs-tx/fake\\\");\",\"module.exports = require(\\\"assert\\\");\",\"module.exports = require(\\\"rlp\\\");\",\"module.exports = require(\\\"seedrandom\\\");\",\"module.exports = require(\\\"bip39\\\");\",\"module.exports = require(\\\"safe-buffer\\\");\",\"module.exports = require(\\\"crypto\\\");\",\"module.exports = require(\\\"scrypt.js\\\");\",\"module.exports = require(\\\"uuid/v4\\\");\",\"module.exports = require(\\\"bs58check\\\");\",\"'use strict';\\n\\nvar HDKey = require('hdkey');\\nvar Wallet = require('./index.js');\\n\\nfunction EthereumHDKey() {}\\n\\n/*\\n * Horrible wrapping.\\n */\\nfunction fromHDKey(hdkey) {\\n  var ret = new EthereumHDKey();\\n  ret._hdkey = hdkey;\\n  return ret;\\n}\\n\\nEthereumHDKey.fromMasterSeed = function (seedBuffer) {\\n  return fromHDKey(HDKey.fromMasterSeed(seedBuffer));\\n};\\n\\nEthereumHDKey.fromExtendedKey = function (base58key) {\\n  return fromHDKey(HDKey.fromExtendedKey(base58key));\\n};\\n\\nEthereumHDKey.prototype.privateExtendedKey = function () {\\n  if (!this._hdkey.privateExtendedKey) {\\n    throw new Error('This is a public key only wallet');\\n  }\\n  return this._hdkey.privateExtendedKey;\\n};\\n\\nEthereumHDKey.prototype.publicExtendedKey = function () {\\n  return this._hdkey.publicExtendedKey;\\n};\\n\\nEthereumHDKey.prototype.derivePath = function (path) {\\n  return fromHDKey(this._hdkey.derive(path));\\n};\\n\\nEthereumHDKey.prototype.deriveChild = function (index) {\\n  return fromHDKey(this._hdkey.deriveChild(index));\\n};\\n\\nEthereumHDKey.prototype.getWallet = function () {\\n  if (this._hdkey._privateKey) {\\n    return Wallet.fromPrivateKey(this._hdkey._privateKey);\\n  } else {\\n    return Wallet.fromPublicKey(this._hdkey._publicKey, true);\\n  }\\n};\\n\\nmodule.exports = EthereumHDKey;\",\"module.exports = require(\\\"hdkey\\\");\",\"module.exports = require(\\\"ethereumjs-vm\\\");\",\"module.exports = require(\\\"heap\\\");\",\"var LevelUpArrayAdapter = require(\\\"./database/leveluparrayadapter\\\");\\nvar LevelUpObjectAdapter = require(\\\"./database/levelupobjectadapter\\\");\\nvar levelup = require(\\\"levelup\\\");\\nvar encode = require(\\\"encoding-down\\\");\\nvar filedown = require(\\\"./database/filedown\\\");\\nvar cachedown = require(\\\"cachedown\\\");\\nvar txserializer = require(\\\"./database/txserializer\\\");\\nvar blockserializer = require(\\\"./database/blockserializer\\\");\\nvar bufferserializer = require(\\\"./database/bufferserializer\\\");\\nvar BlockLogsSerializer = require(\\\"./database/blocklogsserializer\\\");\\nvar ReceiptSerializer = require(\\\"./database/receiptserializer\\\");\\nvar tmp = require(\\\"tmp\\\");\\n\\nfunction Database(options) {\\n  this.options = options;\\n  this.directory = null;\\n}\\n\\nDatabase.prototype.initialize = function(callback) {\\n  var self = this;\\n\\n  function getDir(cb) {\\n    if (self.options.db_path) {\\n      cb(null, self.options.db_path);\\n    } else {\\n      tmp.dir(cb);\\n    }\\n  }\\n\\n  getDir(function(err, directory) {\\n    if (err) {\\n      return callback(err);\\n    }\\n    const levelupOptions = { valueEncoding: \\\"json\\\" };\\n    if (self.options.db) {\\n      const store = self.options.db;\\n      levelup(store, levelupOptions, finishInitializing);\\n    } else {\\n      self.directory = directory;\\n      const store = encode(cachedown(directory, filedown).maxSize(100), levelupOptions);\\n      levelup(store, {}, finishInitializing);\\n    }\\n  });\\n\\n  function finishInitializing(err, db) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    self.db = db;\\n\\n    // Blocks, keyed by array index (not necessarily by block number) (0-based)\\n    self.blocks = new LevelUpArrayAdapter(\\\"blocks\\\", self.db, blockserializer);\\n\\n    // Logs triggered in each block, keyed by block id (ids in the blocks array; not necessarily block number) (0-based)\\n    self.blockLogs = new LevelUpArrayAdapter(\\\"blockLogs\\\", self.db, new BlockLogsSerializer(self));\\n\\n    // Block hashes -> block ids (ids in the blocks array; not necessarily block number) for quick lookup\\n    self.blockHashes = new LevelUpObjectAdapter(\\\"blockHashes\\\", self.db);\\n\\n    // Transaction hash -> transaction objects\\n    self.transactions = new LevelUpObjectAdapter(\\\"transactions\\\", self.db, txserializer);\\n\\n    // Transaction hash -> transaction receipts\\n    self.transactionReceipts = new LevelUpObjectAdapter(\\\"transactionReceipts\\\", self.db, new ReceiptSerializer(self));\\n\\n    self.trie_db = new LevelUpObjectAdapter(\\\"trie_db\\\", self.db, bufferserializer, bufferserializer);\\n\\n    callback();\\n  }\\n};\\n\\nDatabase.prototype.close = function(callback) {\\n  callback();\\n};\\n\\nmodule.exports = Database;\\n\",\"var Sublevel = require(\\\"level-sublevel\\\");\\nconst { LevelUpOutOfRangeError, BlockOutOfRangeError } = require(\\\"../utils/errorhelper\\\");\\n\\n// Level up adapter that looks like an array. Doesn't support inserts.\\n\\nfunction LevelUpArrayAdapter(name, db, serializer) {\\n  this.db = Sublevel(db);\\n  this.db = this.db.sublevel(name);\\n  this.name = name;\\n  this.serializer = serializer || {\\n    encode: function(val, callback) {\\n      callback(null, val);\\n    },\\n    decode: function(val, callback) {\\n      callback(null, val);\\n    }\\n  };\\n}\\n\\nLevelUpArrayAdapter.prototype.length = function(callback) {\\n  this.db.get(\\\"length\\\", function(err, result) {\\n    if (err) {\\n      if (err.notFound) {\\n        return callback(null, 0);\\n      } else {\\n        return callback(err);\\n      }\\n    }\\n\\n    callback(null, result);\\n  });\\n};\\n\\nLevelUpArrayAdapter.prototype._get = function(key, callback) {\\n  var self = this;\\n  this.db.get(key, function(err, val) {\\n    if (err) {\\n      return callback(err);\\n    }\\n    self.serializer.decode(val, callback);\\n  });\\n};\\n\\nLevelUpArrayAdapter.prototype._put = function(key, value, callback) {\\n  var self = this;\\n  this.serializer.encode(value, function(err, encoded) {\\n    if (err) {\\n      return callback(err);\\n    }\\n    self.db.put(key, encoded, callback);\\n  });\\n};\\n\\nLevelUpArrayAdapter.prototype.get = function(index, callback) {\\n  var self = this;\\n\\n  this.length(function(err, length) {\\n    if (err) {\\n      return callback(err);\\n    }\\n    if (index >= length) {\\n      // index out of range\\n      let RangeError =\\n        self.name === \\\"blocks\\\"\\n          ? new BlockOutOfRangeError(index, length)\\n          : new LevelUpOutOfRangeError(self.name, index, length);\\n      return callback(RangeError);\\n    }\\n    self._get(index, callback);\\n  });\\n};\\n\\nLevelUpArrayAdapter.prototype.push = function(val, callback) {\\n  var self = this;\\n  this.length(function(err, length) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    // TODO: Do this in atomic batch.\\n    self._put(length + \\\"\\\", val, function(err) {\\n      if (err) {\\n        return callback(err);\\n      }\\n      self.db.put(\\\"length\\\", length + 1, callback);\\n    });\\n  });\\n};\\n\\nLevelUpArrayAdapter.prototype.pop = function(callback) {\\n  var self = this;\\n\\n  this.length(function(err, length) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    var newLength = length - 1;\\n\\n    // TODO: Do this in atomic batch.\\n    self._get(newLength + \\\"\\\", function(err, val) {\\n      if (err) {\\n        return callback(err);\\n      }\\n      self.db.del(newLength + \\\"\\\", function(err) {\\n        if (err) {\\n          return callback(err);\\n        }\\n        self.db.put(\\\"length\\\", newLength, function(err) {\\n          if (err) {\\n            return callback(err);\\n          }\\n\\n          callback(null, val);\\n        });\\n      });\\n    });\\n  });\\n};\\n\\nLevelUpArrayAdapter.prototype.last = function(callback) {\\n  var self = this;\\n  this.length(function(err, length) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    if (length === 0) {\\n      return callback(null, null);\\n    }\\n\\n    self._get(length - 1 + \\\"\\\", callback);\\n  });\\n};\\n\\nLevelUpArrayAdapter.prototype.first = function(callback) {\\n  this._get(\\\"0\\\", callback);\\n};\\n\\nmodule.exports = LevelUpArrayAdapter;\\n\",\"var Sublevel = require(\\\"level-sublevel\\\");\\nvar async = require(\\\"async\\\");\\n\\nfunction LevelUpObjectAdapter(name, db, valueserializer, keyserializer, options) {\\n  this.db = Sublevel(db, options);\\n  this.db = this.db.sublevel(name);\\n  this.name = name;\\n  this.valueserializer = valueserializer || {\\n    encode: function(val, callback) {\\n      callback(null, val);\\n    },\\n    decode: function(val, callback) {\\n      callback(null, val);\\n    }\\n  };\\n  this.keyserializer = keyserializer || {\\n    encode: function(val, callback) {\\n      callback(null, val);\\n    },\\n    decode: function(val, callback) {\\n      callback(null, val);\\n    }\\n  };\\n}\\n\\nLevelUpObjectAdapter.prototype.get = function(key, options, callback) {\\n  var self = this;\\n\\n  if (typeof options === \\\"function\\\") {\\n    callback = options;\\n    options = {};\\n  }\\n\\n  this.keyserializer.encode(key, function(err, encodedKey) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    self.db.get(encodedKey, function(err, val) {\\n      if (err) {\\n        return callback(err);\\n      }\\n\\n      self.valueserializer.decode(val, function(err, decodedValue) {\\n        if (err) {\\n          return callback(err);\\n        }\\n\\n        callback(null, decodedValue);\\n      });\\n    });\\n  });\\n};\\n\\nLevelUpObjectAdapter.prototype.put = function(key, value, options, callback) {\\n  var self = this;\\n\\n  if (typeof options === \\\"function\\\") {\\n    callback = options;\\n    options = {};\\n  }\\n\\n  this.keyserializer.encode(key, function(err, encodedKey) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    self.valueserializer.encode(value, function(err, encoded) {\\n      if (err) {\\n        return callback(err);\\n      }\\n\\n      self.db.put(encodedKey, encoded, callback);\\n    });\\n  });\\n};\\n\\nLevelUpObjectAdapter.prototype.set = LevelUpObjectAdapter.prototype.put;\\n\\nLevelUpObjectAdapter.prototype.del = function(key, callback) {\\n  var self = this;\\n\\n  this.keyserializer.encode(key, function(err, encodedKey) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    self.db.del(encodedKey, callback);\\n  });\\n};\\n\\nLevelUpObjectAdapter.prototype.batch = function(array, options, callback) {\\n  var self = this;\\n\\n  async.each(\\n    array,\\n    function(item, finished) {\\n      if (item.type === \\\"put\\\") {\\n        self.put(item.key, item.value, options, finished);\\n      } else if (item.type === \\\"del\\\") {\\n        self.del(item.key, finished);\\n      } else {\\n        finished(new Error(\\\"Unknown batch type\\\", item.type));\\n      }\\n    },\\n    function(err) {\\n      if (err) {\\n        return callback(err);\\n      }\\n      callback();\\n    }\\n  );\\n};\\n\\nLevelUpObjectAdapter.prototype.isOpen = function() {\\n  return true;\\n};\\n\\nmodule.exports = LevelUpObjectAdapter;\\n\",\"module.exports = require(\\\"levelup\\\");\",\"module.exports = require(\\\"encoding-down\\\");\",\"var util = require(\\\"util\\\");\\nvar AbstractLevelDOWN = require(\\\"abstract-leveldown\\\").AbstractLevelDOWN;\\nvar async = require(\\\"async\\\");\\nvar fs = require(\\\"fs\\\");\\nvar path = require(\\\"path\\\");\\n\\nutil.inherits(FileDown, AbstractLevelDOWN);\\n\\nfunction FileDown(location) {\\n  this.location = location;\\n  AbstractLevelDOWN.call(this, location);\\n}\\n\\nFileDown.prototype._open = function(options, callback) {\\n  var self = this;\\n  callback(null, self);\\n};\\n\\nFileDown.prototype._put = function(key, value, options, callback) {\\n  fs.writeFile(path.join(this.location, key), value, \\\"utf8\\\", callback);\\n};\\n\\nFileDown.prototype._get = function(key, options, callback) {\\n  fs.readFile(path.join(this.location, key), \\\"utf8\\\", function(err, data) {\\n    if (err) {\\n      return callback(new Error(\\\"NotFound\\\"));\\n    }\\n    callback(null, data);\\n  });\\n};\\n\\nFileDown.prototype._del = function(key, options, callback) {\\n  fs.unlink(path.join(this.location, key), function(err) {\\n    // Ignore when we try to delete a file that doesn't exist.\\n    // I'm not sure why this happens. Worth looking into.\\n    if (err) {\\n      if (err.message.indexOf(\\\"ENOENT\\\") >= 0) {\\n        return callback();\\n      } else {\\n        return callback(err);\\n      }\\n    }\\n    callback();\\n  });\\n};\\n\\nFileDown.prototype._batch = function(array, options, callback) {\\n  var self = this;\\n  async.each(\\n    array,\\n    function(item, finished) {\\n      if (item.type === \\\"put\\\") {\\n        self.put(item.key, item.value, options, finished);\\n      } else if (item.type === \\\"del\\\") {\\n        self.del(item.key, options, finished);\\n      } else {\\n        finished(new Error(\\\"Unknown batch type\\\", item.type));\\n      }\\n    },\\n    function(err) {\\n      if (err) {\\n        return callback(err);\\n      }\\n      callback();\\n    }\\n  );\\n};\\n\\nmodule.exports = function(location) {\\n  return new FileDown(location);\\n};\\n\",\"module.exports = require(\\\"abstract-leveldown\\\");\",\"module.exports = require(\\\"fs\\\");\",\"module.exports = require(\\\"path\\\");\",\"module.exports = require(\\\"cachedown\\\");\",\"var txserializer = require(\\\"./txserializer\\\");\\nvar async = require(\\\"async\\\");\\nvar Block = require(\\\"ethereumjs-block\\\");\\n\\nmodule.exports = {\\n  encode: function(block, done) {\\n    var encoded = block.toJSON(true);\\n\\n    async.map(\\n      block.transactions,\\n      function(tx, finished) {\\n        txserializer.encode(tx, finished);\\n      },\\n      function(err, transactions) {\\n        if (err) {\\n          return done(err);\\n        }\\n        encoded.transactions = transactions;\\n        done(null, encoded);\\n      }\\n    );\\n  },\\n  decode: function(json, done) {\\n    var transactions = json.transactions;\\n    json.transactions = [];\\n\\n    var block = new Block(json);\\n\\n    async.eachSeries(\\n      transactions,\\n      function(txJson, finished) {\\n        txserializer.decode(txJson, function(err, tx) {\\n          if (err) {\\n            return finished(err);\\n          }\\n          block.transactions.push(tx);\\n          finished();\\n        });\\n      },\\n      function(err) {\\n        if (err) {\\n          return done(err);\\n        }\\n\\n        done(null, block);\\n      }\\n    );\\n  }\\n};\\n\",\"var utils = require(\\\"ethereumjs-util\\\");\\nvar to = require(\\\"../utils/to\\\");\\n\\nmodule.exports = {\\n  encode: function(val, cb) {\\n    var hex = to.hex(val);\\n    cb(null, hex);\\n  },\\n  decode: function(json, cb) {\\n    cb(null, utils.toBuffer(json));\\n  }\\n};\\n\",\"var Log = require(\\\"../utils/log\\\");\\nvar async = require(\\\"async\\\");\\n\\nfunction BlockLogsSerializer(database) {\\n  this.database = database;\\n}\\n\\nBlockLogsSerializer.prototype.encode = function(logs, done) {\\n  logs = logs.map(function(log) {\\n    return log.toJSON();\\n  });\\n\\n  done(null, logs);\\n};\\n\\nBlockLogsSerializer.prototype.decode = function(json, done) {\\n  var self = this;\\n\\n  if (json.length === 0) {\\n    return done(null, []);\\n  }\\n\\n  this.database.blockHashes.get(json[0].blockHash, function(err, blockIndex) {\\n    if (err) {\\n      return done(err);\\n    }\\n\\n    self.database.blocks.get(blockIndex, function(err, block) {\\n      if (err) {\\n        return done(err);\\n      }\\n\\n      async.map(\\n        json,\\n        function(log, finished) {\\n          finished(\\n            null,\\n            new Log({\\n              block: block,\\n              logIndex: log.logIndex,\\n              transactionIndex: log.transactionIndex,\\n              transactionHash: log.transactionHash,\\n              address: log.address,\\n              data: log.data,\\n              topics: log.topics,\\n              type: log.type\\n            })\\n          );\\n        },\\n        function(err, logs) {\\n          if (err) {\\n            return done(err);\\n          }\\n          done(null, logs);\\n        }\\n      );\\n    });\\n  });\\n};\\n\\nmodule.exports = BlockLogsSerializer;\\n\",\"var Receipt = require(\\\"../utils/receipt\\\");\\nvar async = require(\\\"async\\\");\\n\\nfunction ReceiptSerializer(database) {\\n  this.database = database;\\n}\\n\\nReceiptSerializer.prototype.encode = function(receipt, done) {\\n  done(null, receipt.toJSON());\\n};\\n\\nReceiptSerializer.prototype.decode = function(json, done) {\\n  var self = this;\\n  // Make sure we can handle mixed/upper-case transaction hashes\\n  // it doesn't seem possible to record a transaction hash that isn't\\n  // already lower case, as that's the way ganache generates them, however\\n  // I don't think it will hurt anything to normalize here anyway.\\n  // If you can figure out how to test this please feel free to add a test!\\n  var txHash = json.transactionHash.toLowerCase();\\n\\n  this.database.transactions.get(json.transactionHash, function(err, tx) {\\n    if (err) {\\n      return done(err);\\n    }\\n\\n    self.database.blockHashes.get(json.blockHash, function(err, blockIndex) {\\n      if (err) {\\n        return done(err);\\n      }\\n\\n      async.parallel(\\n        {\\n          block: self.database.blocks.get.bind(self.database.blocks, blockIndex),\\n          logs: self.database.blockLogs.get.bind(self.database.blockLogs, blockIndex)\\n        },\\n        function(err, result) {\\n          if (err) {\\n            return done(err);\\n          }\\n\\n          done(\\n            null,\\n            new Receipt(\\n              tx,\\n              result.block,\\n              result.logs.filter((log) => log.transactionHash.toLowerCase() === txHash),\\n              json.gasUsed,\\n              json.cumulativeGasUsed,\\n              json.contractAddress,\\n              json.status,\\n              json.logsBloom\\n            )\\n          );\\n        }\\n      );\\n    });\\n  });\\n};\\n\\nmodule.exports = ReceiptSerializer;\\n\",\"module.exports = require(\\\"tmp\\\");\",\"const BN = require(\\\"bn.js\\\");\\n\\n/**\\n * @param {Array} ops Array of all ops/steps of the VM\\n * @param {Number} lowestIndex Known lowestIndex\\n */\\nmodule.exports = (vm, runArgs, err, callback) => {\\n  const steps = stepTracker();\\n\\n  vm.on(\\\"step\\\", steps.collect);\\n\\n  vm.runTx(runArgs, function(vmerr, result) {\\n    const opsLength = steps.ops.length;\\n    if (vmerr) {\\n      // This is a check that has been in there for awhile. I'm unsure if it's required, but it can't hurt.\\n      if (vmerr instanceof Error === false) {\\n        vmerr = new Error(\\\"VM error: \\\" + vmerr);\\n      }\\n      return callback(vmerr, err);\\n    } else if (!steps.success() || !opsLength || opsLength - 1 === steps.lowestGasIndex()) {\\n      let estimate = result.gasUsed;\\n      if (opsLength) {\\n        const lastSVT = steps.lastSVT();\\n        if (steps.success() && lastSVT > 0) {\\n          const tailCost = steps.ops[lastSVT].gasLeft.sub(steps.ops[steps.ops.length - 1].gasLeft);\\n          const stipend = new BN(2300);\\n          estimate = estimate.add(new BN(tailCost.lt(stipend) ? stipend.sub(tailCost) : 0));\\n        }\\n      }\\n      result.gasEstimate = estimate;\\n    } else {\\n      const data = runArgs.tx.data != null ? Array.from(runArgs.tx.data) : [];\\n      // Base Fee 21000: cost of an elliptic curve operation to recover the sender pubkey/address from\\n      // signature plus disk and bandwidth space of storing the transaction.\\n      // Data Costs 4 * (# of 0 bytes) + 68 * (# of non-zero bytes)\\n      // This line is just calculating the data costs ^.\\n      // Read: start with 21000, iterate through the data\\n      // (each element represents a byte)\\n      // if the current byte is 0 add 4 otherwise add 68.\\n      const costOfData = data.reduce((acc, curr) => acc + (curr === 0 ? 4 : 68), 21000);\\n\\n      const total = getTotal(0, steps.ops.length - 1, steps.sysOpIndex()) + costOfData;\\n      result.gasEstimate = new BN(total);\\n    }\\n\\n    callback(vmerr, result);\\n  });\\n\\n  /**\\n   * Returns the sum of all costs in a range\\n   * opcode fees, memory expansion costs, return costs, etc\\n   * @param {Number} start Beginning index\\n   * @param {Number} end Ending index\\n   */\\n  const sumRange = (start, end) => {\\n    const lastSVT = steps.lastSVT();\\n    if (lastSVT > start && lastSVT < end) {\\n      const top = steps.ops[start].gasLeft - steps.ops[lastSVT].gasLeft;\\n      let needed;\\n      if (steps.ops[lastSVT].depth) {\\n        const tail = steps.ops[lastSVT].gasLeft - steps.ops[end - 1].gasLeft;\\n        needed = tail < 2300 ? 2300 - tail : tail;\\n      } else {\\n        const tail = steps.ops[lastSVT].gasLeft - steps.ops[end].gasLeft;\\n        needed = tail < 2300 ? 2300 : tail;\\n      }\\n      return top + needed;\\n    }\\n    return steps.ops[start].gasLeft - steps.ops[end].gasLeft;\\n  };\\n\\n  /**\\n   * Finds the index in systemOps index\\n   * @param {Number} index index of op in steps.ops\\n   */\\n  const findRootScope = (opIndex) => {\\n    const index = steps.findIndex(opIndex);\\n    let begin = index;\\n    let end = index;\\n    const length = steps.systemOps.length;\\n    while (begin && steps.systemOps[begin][1]) {\\n      --begin;\\n    }\\n    while (end < length && steps.systemOps[end][1]) {\\n      ++end;\\n    }\\n    return {\\n      rootBegin: steps.systemOps[begin][0],\\n      rootEnd: steps.systemOps[end - 1][0] + 1 // the op after the matching terminator\\n    };\\n  };\\n\\n  /**\\n   * Find the range of the current system operation (CREATE, CALL, etc)\\n   * @param {Number} index Index of the lowest gas point in the domain\\n   */\\n  const findParentScope = (opIndex) => {\\n    let depth = steps.ops[opIndex].depth;\\n    const index = steps.findIndex(opIndex);\\n    let begin = index;\\n    let end = index;\\n    const length = steps.systemOps.length;\\n    while (end < length && steps.systemOps[end][1] >= depth) {\\n      ++end;\\n    }\\n    while (begin && steps.systemOps[begin][1] >= depth) {\\n      --begin;\\n    }\\n    return {\\n      parentBegin: steps.systemOps[begin][0],\\n      parentEnd: steps.systemOps[end - 1][0] + 1 // the op after the matching terminator\\n    };\\n  };\\n\\n  /**\\n   * Finds the lowest index in a given search space\\n   * @param {Number} start The beginning index of the search space\\n   * @param {Number} stop The ending index of the search space\\n   */\\n  const findLowestIndex = (start, stop) => {\\n    let lowestGas = Infinity;\\n    let lowestIndex = stop;\\n    for (let i = start; i <= stop; i++) {\\n      if (steps.ops[i].gasLeft <= lowestGas) {\\n        // Find the new lowest gas index\\n        lowestIndex = i;\\n        lowestGas = steps.ops[i].gasLeft;\\n      }\\n    }\\n    return lowestIndex;\\n  };\\n\\n  const gas = (op) => parseInt(`0x${op.gasLeft.toString(\\\"hex\\\")}`);\\n  const isStipend = (op) => op.gasLeft === 2300;\\n\\n  /**\\n   * Calculates the total gas needed with respect to EIP150\\n   * @param {Number} start The beginning index of the search space\\n   * @param {Number} stop The ending index of the search space\\n   * @param {Number|null} lowestIndex If the index of the lowest gas point is known otherwise null\\n   */\\n  const getTotal = (start, stop, lowestIndex = null) => {\\n    if (lowestIndex) {\\n      lowestIndex = steps.systemOps[lowestIndex][0];\\n    } else {\\n      // If the lowest index is not known ( on recursive calls if the contract is tail heavy )\\n      lowestIndex = findLowestIndex(start, stop);\\n      if (lowestIndex === stop) {\\n        // If the lowest index is the last operation in the range\\n        // Return the sum of the range\\n        return sumRange(start, stop);\\n      }\\n    }\\n\\n    const { rootBegin, rootEnd } = findRootScope(lowestIndex);\\n    let { parentBegin, parentEnd } = findParentScope(lowestIndex);\\n    let systemOpSum = 0;\\n    while (rootBegin !== parentBegin && rootEnd !== parentEnd) {\\n      // assert xnor\\n      // TODO: Assert op must be a System op: CREATE/CALL/etc\\n      const callingSysOp = steps.ops[parentBegin];\\n\\n      // Cost of the system operation itself\\n      const callingFee = callingSysOp.opcode.fee;\\n      const sumOfCurrentSysOp = sumRange(parentBegin, parentEnd) - callingFee;\\n\\n      // What we need before the 1/64 is held back\\n      const neededBefore6364 = sumOfCurrentSysOp + Math.floor(sumOfCurrentSysOp / 63);\\n      const oneSixtyFloorth = neededBefore6364 - sumOfCurrentSysOp;\\n\\n      systemOpSum = neededBefore6364 + callingFee;\\n      const next = steps.findIndex(lowestIndex) + 1;\\n\\n      const prevParentBegin = parentBegin;\\n      const prevParentEnd = parentEnd;\\n\\n      ({ parentBegin, parentEnd } = findParentScope(steps.systemOps[next][0]));\\n      lowestIndex = parentEnd - 1;\\n\\n      // Sum to the top of the range above sysOp\\n      systemOpSum += gas(steps.ops[parentBegin + 1]) - gas(steps.ops[prevParentBegin]);\\n      // systemOpSum += sumRange(parentBegin - 1, prevParentBegin);\\n\\n      // Sum of the remaining steps after the current (outer) system operation\\n      const costOfParentReturn =\\n        gas(steps.ops[parentEnd - 1]) -\\n        gas(steps.ops[parentEnd]) +\\n        gas(steps.ops[parentBegin]) -\\n        steps.ops[parentBegin].opcode.fee -\\n        gas(steps.ops[parentBegin + 1]);\\n      // recursively sum the remaining search space and return this total minus the 1/64th we already accounted for\\n      const remaining = getTotal(prevParentEnd, lowestIndex) + costOfParentReturn;\\n      // if ((stipend && stipend < remaining) || oneSixtyFloorth < remaining) {\\n      let tail = oneSixtyFloorth;\\n      if (callingSysOp.opcode.name === \\\"CALL\\\" && isStipend(steps.ops[rootBegin + 1])) {\\n        tail = 2300;\\n      }\\n      if (tail < remaining) {\\n        systemOpSum = 0;\\n      }\\n    }\\n\\n    // TODO: Assert op must be a System op: CREATE/CALL/etc\\n    const callingSysOp = steps.ops[rootBegin];\\n\\n    // Cost of the system operation itself\\n    const callingFee = callingSysOp.opcode.fee;\\n\\n    if (!systemOpSum) {\\n      systemOpSum = sumRange(rootBegin, rootEnd) - callingFee;\\n    }\\n\\n    // What we need before the 1/64 is held back\\n    const neededBefore6364 = systemOpSum + Math.floor(systemOpSum / 63);\\n    let total = neededBefore6364 + callingFee;\\n\\n    // Sum to the top of the range above sysOp\\n    total += sumRange(start, rootBegin);\\n\\n    const oneSixtyFloorth = neededBefore6364 - systemOpSum;\\n    const remaining = getTotal(rootEnd, stop);\\n    if (callingSysOp.opcode.name === \\\"CALL\\\" && isStipend(steps.ops[rootBegin + 1])) {\\n      return total - remaining;\\n    }\\n\\n    // Recursively Sum of the remaining steps after the current (outer) system operation\\n    if (oneSixtyFloorth > remaining) {\\n      // If we withhold more than the cost of all remaining operations\\n      return total;\\n    }\\n    total -= oneSixtyFloorth;\\n\\n    return total + remaining;\\n  };\\n};\\n\\nconst stepTracker = () => {\\n  const sysOps = [];\\n  const allOps = [];\\n  const svt = [];\\n  const isCall = (opname) => [\\\"CALL\\\", \\\"DELEGATECALL\\\", \\\"STATICCALL\\\", \\\"CALLCODE\\\"].includes(opname);\\n  const isCreate = (opname) => [\\\"CREATE\\\"].includes(opname);\\n  const isTerminator = (opname) => [\\\"STOP\\\", \\\"RETURN\\\", \\\"REVERT\\\", \\\"INVALID\\\", \\\"SELFDESTRUCT\\\"].includes(opname);\\n  const indexMap = {};\\n  let lowestGasLeft = Infinity;\\n  let lowestGasIndex = 0;\\n  let lowestSysOpIndex;\\n  let simpleCallCheck = false;\\n  let simpleCallDepth = 0;\\n  return {\\n    collect: (info) => {\\n      const gasLeft = info.gasLeft.toNumber();\\n      if (lowestGasLeft > gasLeft) {\\n        lowestGasLeft = gasLeft;\\n        lowestGasIndex = allOps.length;\\n        lowestSysOpIndex = sysOps.length;\\n      }\\n      // This is checking for what ive been calling a simple value transfer\\n      // where there is a CALL operation with no subsequent STOP/RETURN\\n      // and where the `call depth` never increases.\\n      // It's usually as a result of a .send or .transfer in solidity to an\\n      // external account or a contract with no payable\\n      if (simpleCallCheck) {\\n        // simpleCallCheck acts as a boolean flag checking whether the previous\\n        // operation was a CALL. The flag is set during the `isCall` conditional\\n        // as well as the simpleCallDepth so its always `up-to-date`.\\n        if (info.depth === simpleCallDepth) {\\n          // If the current depth (info.depth) equals the depth of a simpleCall\\n          // we record its position.  we can probably use a variable rather than an array\\n          svt.push(allOps.length);\\n        }\\n        // Reset the flag immedietely here\\n        simpleCallCheck = false;\\n      }\\n      if (isCall(info.opcode.name)) {\\n        simpleCallCheck = true;\\n        simpleCallDepth = info.depth;\\n        indexMap[allOps.length] = sysOps.length;\\n        sysOps.push([allOps.length, info.depth, info.opcode.name]);\\n      } else if (isCreate(info.opcode.name) || isTerminator(info.opcode.name)) {\\n        indexMap[allOps.length] = sysOps.length;\\n        sysOps.push([allOps.length, info.depth, info.opcode.name]);\\n      }\\n\\n      allOps.push(info); // This goes last so we can use the length for the index ^\\n    },\\n    findIndex: (index) => indexMap[index],\\n    lowestGasIndex: () => lowestGasIndex,\\n    sysOpIndex: () => lowestSysOpIndex,\\n    lastSVT: () => (svt.length ? svt[svt.length - 1] : -1),\\n    success: () => !allOps.length || isTerminator(allOps[allOps.length - 1].opcode.name),\\n    ops: allOps,\\n    systemOps: sysOps,\\n    simpleValueTransfers: svt,\\n    isTerminator: isTerminator,\\n    isCall: isCall\\n  };\\n};\\n\",\"var BlockchainDouble = require(\\\"../blockchain_double.js\\\");\\nvar Account = require(\\\"ethereumjs-account\\\");\\nvar Block = require(\\\"ethereumjs-block\\\");\\nvar Log = require(\\\"./log.js\\\");\\nvar Receipt = require(\\\"./receipt.js\\\");\\nvar utils = require(\\\"ethereumjs-util\\\");\\nvar ForkedStorageTrie = require(\\\"./forkedstoragetrie.js\\\");\\nvar Web3 = require(\\\"web3\\\");\\nvar to = require(\\\"./to.js\\\");\\nvar Transaction = require(\\\"./transaction\\\");\\nvar async = require(\\\"async\\\");\\nvar BN = require(\\\"bn.js\\\");\\n\\nvar inherits = require(\\\"util\\\").inherits;\\n\\ninherits(ForkedBlockchain, BlockchainDouble);\\n\\nfunction ForkedBlockchain(options) {\\n  this.options = options || {};\\n\\n  if (options.fork == null) {\\n    throw new Error(\\\"ForkedBlockchain must be passed a fork parameter.\\\");\\n  }\\n\\n  this.fork = options.fork;\\n  this.forkBlockNumber = options.fork_block_number;\\n  this.forkVersion = null;\\n\\n  if (typeof this.fork === \\\"string\\\") {\\n    if (this.fork.indexOf(\\\"@\\\") >= 0) {\\n      var split = this.fork.split(\\\"@\\\");\\n      this.fork = split[0];\\n      this.forkBlockNumber = parseInt(split[1]);\\n    }\\n\\n    this.fork = new Web3.providers.HttpProvider(this.fork);\\n  }\\n\\n  this.time = options.time;\\n  this.storageTrieCache = {};\\n\\n  BlockchainDouble.call(this, options);\\n\\n  this.createVMFromStateTrie = function() {\\n    var vm = BlockchainDouble.prototype.createVMFromStateTrie.apply(this, arguments);\\n    this.patchVM(vm);\\n    return vm;\\n  };\\n\\n  this.web3 = new Web3(this.fork);\\n}\\n\\nForkedBlockchain.prototype.initialize = function(accounts, callback) {\\n  var self = this;\\n\\n  this.web3.eth.net.getId(function(err, version) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    self.forkVersion = version;\\n\\n    BlockchainDouble.prototype.initialize.call(self, accounts, callback);\\n  });\\n};\\nForkedBlockchain.prototype.patchVM = function(vm) {\\n  const trie = vm.stateManager._trie;\\n  const lookupAccount = this.getLookupAccount(trie);\\n  // Unfortunately forking requires a bit of monkey patching, but it gets the job done.\\n  vm.stateManager._cache._lookupAccount = lookupAccount;\\n  vm.stateManager._lookupStorageTrie = this.getLookupStorageTrie(trie, lookupAccount);\\n  vm.stateManager.getContractCode = this.getCode.bind(this);\\n};\\n\\nForkedBlockchain.prototype.createStateTrie = function(db, root) {\\n  return new ForkedStorageTrie(db, root, {\\n    fork: this.fork,\\n    forkBlockNumber: this.forkBlockNumber,\\n    blockchain: this\\n  });\\n};\\n\\nForkedBlockchain.prototype.createGenesisBlock = function(callback) {\\n  var self = this;\\n  var blockNumber = this.forkBlockNumber || \\\"latest\\\";\\n\\n  self.web3.eth.getBlock(blockNumber, function(err, json) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    // If no start time was passed, set the time to where we forked from.\\n    // We only want to do this if a block was explicitly passed. If a block\\n    // number wasn't passed, then we're using the last block and the current time.\\n    if (!self.time && self.forkBlockNumber) {\\n      self.time = self.options.time = new Date(to.number(json.timestamp) * 1000);\\n      self.setTime(self.time);\\n    }\\n\\n    blockNumber = to.hex(json.number);\\n\\n    // Update the relevant block numbers\\n    self.forkBlockNumber = self.options.fork_block_number = blockNumber;\\n    self.stateTrie.forkBlockNumber = self.stateTrie.options.forkBlockNumber = blockNumber;\\n\\n    self.createBlock(function(err, block) {\\n      if (err) {\\n        return callback(err);\\n      }\\n\\n      block.header.number = utils.toBuffer(to.number(json.number) + 1);\\n      block.header.parentHash = utils.toBuffer(json.hash);\\n\\n      callback(null, block);\\n    });\\n  });\\n};\\n\\nForkedBlockchain.prototype.getLookupStorageTrie = function(stateTrie, lookupAccount) {\\n  lookupAccount = lookupAccount || this.getLookupAccount(stateTrie);\\n  return (address, callback) => {\\n    const storageTrie = stateTrie.copy();\\n    storageTrie.address = address;\\n    lookupAccount(address, (err, account) => {\\n      if (err) {\\n        return callback(err);\\n      }\\n\\n      storageTrie.root = account.stateRoot;\\n      callback(null, storageTrie);\\n    });\\n  };\\n};\\n\\nForkedBlockchain.prototype.isFallbackBlock = function(value, callback) {\\n  var self = this;\\n\\n  self.getEffectiveBlockNumber(value, function(err, number) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    callback(null, number <= to.number(self.forkBlockNumber));\\n  });\\n};\\n\\nForkedBlockchain.prototype.isBlockHash = function(value) {\\n  const isHash = typeof value === \\\"string\\\" && value.indexOf(\\\"0x\\\") === 0 && value.length > 42;\\n  return isHash || (Buffer.isBuffer(value) && value.byteLength > 20);\\n};\\n\\nForkedBlockchain.prototype.isFallbackBlockHash = function(value, callback) {\\n  var self = this;\\n\\n  if (!this.isBlockHash(value)) {\\n    return callback(null, false);\\n  }\\n\\n  if (Buffer.isBuffer(value)) {\\n    value = to.hex(value);\\n  }\\n\\n  self.data.blockHashes.get(value, function(err, blockIndex) {\\n    if (err) {\\n      if (err.notFound) {\\n        // If the block isn't found in our database, then it must be a fallback block.\\n        return callback(null, true);\\n      } else {\\n        return callback(err);\\n      }\\n    }\\n    callback(null, false);\\n  });\\n};\\n\\nForkedBlockchain.prototype.getFallbackBlock = function(numberOrHash, cb) {\\n  var self = this;\\n\\n  self.web3.eth.getBlock(numberOrHash, true, function(err, json) {\\n    if (err) {\\n      return cb(err);\\n    }\\n\\n    if (json == null) {\\n      return cb();\\n    }\\n\\n    var block = new Block();\\n\\n    block.header.parentHash = utils.toBuffer(json.parentHash);\\n    block.header.uncleHash = utils.toBuffer(json.sha3Uncles);\\n    block.header.coinbase = utils.toBuffer(json.miner);\\n    block.header.stateRoot = utils.toBuffer(json.stateRoot); // Should we include the following three?\\n    block.header.transactionsTrie = utils.toBuffer(json.transactionsRoot);\\n    block.header.receiptTrie = utils.toBuffer(json.receiptsRoot);\\n    block.header.bloom = utils.toBuffer(json.logsBloom);\\n    block.header.difficulty = utils.toBuffer(\\\"0x\\\" + json.totalDifficulty.toString(16)); // BigNumber\\n    block.header.number = utils.toBuffer(json.number);\\n    block.header.gasLimit = utils.toBuffer(json.gasLimit);\\n    block.header.gasUsed = utils.toBuffer(json.gasUsed);\\n    block.header.timestamp = utils.toBuffer(json.timestamp);\\n    block.header.extraData = utils.toBuffer(json.extraData);\\n\\n    (json.transactions || []).forEach(function(txJson, index) {\\n      block.transactions.push(Transaction.fromJSON(txJson, Transaction.types.real));\\n    });\\n\\n    // Fake block. Let's do the worst.\\n    // TODO: Attempt to fill out all block data so as to produce the same hash! (can we?)\\n    block.hash = function() {\\n      return utils.toBuffer(json.hash);\\n    };\\n\\n    cb(null, block);\\n  });\\n};\\n\\nForkedBlockchain.prototype.getBlock = function(number, callback) {\\n  let checkFn;\\n  const isBlockHash = this.isBlockHash(number);\\n  if (isBlockHash) {\\n    checkFn = this.isFallbackBlockHash;\\n  } else {\\n    checkFn = this.isFallbackBlock;\\n  }\\n  checkFn.call(this, number, (err, isFallback) => {\\n    if (err) {\\n      return callback(err);\\n    }\\n    if (isFallback) {\\n      return this.getFallbackBlock(number, callback);\\n    }\\n\\n    const getBlock = BlockchainDouble.prototype.getBlock.bind(this);\\n    if (isBlockHash) {\\n      getBlock(number, callback);\\n    } else {\\n      this.getRelativeBlockNumber(number, (err, number) => {\\n        if (err) {\\n          return callback(err);\\n        }\\n        getBlock(number, callback);\\n      });\\n    }\\n  });\\n};\\n\\nForkedBlockchain.prototype.getStorage = function(address, key, number, callback) {\\n  this.getLookupStorageTrie(this.stateTrie)(address, (err, trie) => {\\n    if (err) {\\n      return callback(err);\\n    }\\n    this.getEffectiveBlockNumber(number, (err, number) => {\\n      if (err) {\\n        return callback(err);\\n      }\\n      trie.get(key, number, callback);\\n    });\\n  });\\n};\\n\\nForkedBlockchain.prototype.getCode = function(address, number, callback) {\\n  var self = this;\\n\\n  if (typeof number === \\\"function\\\") {\\n    callback = number;\\n    number = \\\"latest\\\";\\n  }\\n\\n  if (!number) {\\n    number = \\\"latest\\\";\\n  }\\n\\n  this.getEffectiveBlockNumber(number, function(err, effective) {\\n    if (err) {\\n      return callback(err);\\n    }\\n    number = effective;\\n\\n    self.stateTrie.keyExists(address, function(err, exists) {\\n      if (err) {\\n        return callback(err);\\n      }\\n      // If we've stored the value and we're looking at one of our stored blocks,\\n      // get it from our stored data.\\n      if (exists && number > to.number(self.forkBlockNumber)) {\\n        BlockchainDouble.prototype.getCode.call(self, address, number, callback);\\n      } else {\\n        // Else, we need to fetch it from web3. If our number is greater than\\n        // the fork, let's just use \\\"latest\\\".\\n        if (number > to.number(self.forkBlockNumber)) {\\n          number = \\\"latest\\\";\\n        }\\n\\n        self.fetchCodeFromFallback(address, number, function(err, code) {\\n          if (code) {\\n            code = utils.toBuffer(code);\\n          }\\n          callback(err, code);\\n        });\\n      }\\n    });\\n  });\\n};\\n\\nForkedBlockchain.prototype.getLookupAccount = function(trie) {\\n  return (address, callback) => {\\n    // If the account doesn't exist in our state trie, get it off the wire.\\n    trie.keyExists(address, (err, exists) => {\\n      if (err) {\\n        return callback(err);\\n      }\\n      if (exists) {\\n        trie.get(address, (err, data) => {\\n          if (err) {\\n            return callback(err);\\n          }\\n          const account = new Account(data);\\n          callback(null, account);\\n        });\\n      } else {\\n        this.fetchAccountFromFallback(address, to.number(this.forkBlockNumber), callback);\\n      }\\n    });\\n  };\\n};\\n\\nForkedBlockchain.prototype.getAccount = function(address, number, callback) {\\n  var self = this;\\n\\n  if (typeof number === \\\"function\\\") {\\n    callback = number;\\n    number = \\\"latest\\\";\\n  }\\n\\n  this.getEffectiveBlockNumber(number, function(err, effective) {\\n    if (err) {\\n      return callback(err);\\n    }\\n    number = effective;\\n\\n    // If the account doesn't exist in our state trie, get it off the wire.\\n    self.stateTrie.keyExists(address, function(err, exists) {\\n      if (err) {\\n        return callback(err);\\n      }\\n\\n      if (exists && number > to.number(self.forkBlockNumber)) {\\n        BlockchainDouble.prototype.getAccount.call(self, address, number, function(err, acc) {\\n          if (err) {\\n            return callback(err);\\n          }\\n          callback(null, acc);\\n        });\\n      } else {\\n        self.fetchAccountFromFallback(address, number, callback);\\n      }\\n    });\\n  });\\n};\\n\\nForkedBlockchain.prototype.getTransaction = function(hash, callback) {\\n  var self = this;\\n  BlockchainDouble.prototype.getTransaction.call(this, hash, function(err, tx) {\\n    if (err) {\\n      return callback(err);\\n    }\\n    if (tx != null) {\\n      return callback(null, tx);\\n    }\\n\\n    self.web3.eth.getTransaction(hash, function(err, result) {\\n      if (err) {\\n        return callback(err);\\n      }\\n\\n      if (result) {\\n        result = Transaction.fromJSON(result, Transaction.types.signed);\\n      }\\n\\n      callback(null, result);\\n    });\\n  });\\n};\\n\\nForkedBlockchain.prototype.getTransactionReceipt = function(hash, callback) {\\n  var self = this;\\n  BlockchainDouble.prototype.getTransactionReceipt.call(this, hash, function(err, receipt) {\\n    if (err) {\\n      return callback(err);\\n    }\\n    if (receipt) {\\n      return callback(null, receipt);\\n    }\\n\\n    self.web3.eth.getTransactionReceipt(hash, function(err, receiptJson) {\\n      if (err) {\\n        return callback(err);\\n      }\\n      if (!receiptJson) {\\n        return callback();\\n      }\\n\\n      async.parallel(\\n        {\\n          tx: self.getTransaction.bind(self, hash),\\n          block: self.getBlock.bind(self, receiptJson.blockNumber)\\n        },\\n        function(err, result) {\\n          if (err) {\\n            return callback(err);\\n          }\\n\\n          var logs = receiptJson.logs.map(function(log) {\\n            return new Log(log);\\n          });\\n\\n          var receipt = new Receipt(\\n            result.tx,\\n            result.block,\\n            logs,\\n            receiptJson.gasUsed,\\n            receiptJson.cumulativeGasUsed,\\n            receiptJson.contractAddress,\\n            receiptJson.status,\\n            to.hex(receiptJson.logsBloom)\\n          );\\n\\n          callback(null, receipt);\\n        }\\n      );\\n    });\\n  });\\n};\\n\\nForkedBlockchain.prototype.fetchAccountFromFallback = function(address, blockNumber, callback) {\\n  var self = this;\\n  address = to.hex(address);\\n\\n  async.parallel(\\n    {\\n      code: this.fetchCodeFromFallback.bind(this, address, blockNumber),\\n      balance: this.fetchBalanceFromFallback.bind(this, address, blockNumber),\\n      nonce: this.fetchNonceFromFallback.bind(this, address, blockNumber)\\n    },\\n    function(err, results) {\\n      if (err) {\\n        return callback(err);\\n      }\\n\\n      var code = results.code;\\n      var balance = results.balance;\\n      var nonce = results.nonce;\\n\\n      var account = new Account({\\n        nonce: nonce,\\n        balance: balance\\n      });\\n\\n      // This puts the code on the trie, keyed by the hash of the code.\\n      // It does not actually link an account to code in the trie.\\n      account.setCode(self.stateTrie, utils.toBuffer(code), function(err) {\\n        if (err) {\\n          return callback(err);\\n        }\\n        callback(null, account);\\n      });\\n    }\\n  );\\n};\\n\\nForkedBlockchain.prototype.fetchCodeFromFallback = function(address, blockNumber, callback) {\\n  var self = this;\\n  address = to.hex(address);\\n\\n  // Allow an optional blockNumber\\n  if (typeof blockNumber === \\\"function\\\") {\\n    callback = blockNumber;\\n    blockNumber = this.forkBlockNumber;\\n  }\\n\\n  this.getSafeFallbackBlockNumber(blockNumber, function(err, safeBlockNumber) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    self.web3.eth.getCode(address, safeBlockNumber, function(err, code) {\\n      if (err) {\\n        return callback(err);\\n      }\\n\\n      code = \\\"0x\\\" + utils.toBuffer(code).toString(\\\"hex\\\");\\n      callback(null, code);\\n    });\\n  });\\n};\\n\\nForkedBlockchain.prototype.fetchBalanceFromFallback = function(address, blockNumber, callback) {\\n  var self = this;\\n  address = to.hex(address);\\n\\n  // Allow an optional blockNumber\\n  if (typeof blockNumber === \\\"function\\\") {\\n    callback = blockNumber;\\n    blockNumber = this.forkBlockNumber;\\n  }\\n\\n  this.getSafeFallbackBlockNumber(blockNumber, function(err, safeBlockNumber) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    self.web3.eth.getBalance(address, safeBlockNumber, function(err, balance) {\\n      if (err) {\\n        return callback(err);\\n      }\\n\\n      balance = \\\"0x\\\" + new BN(balance).toString(16);\\n      callback(null, balance);\\n    });\\n  });\\n};\\n\\nForkedBlockchain.prototype.fetchNonceFromFallback = function(address, blockNumber, callback) {\\n  var self = this;\\n  address = to.hex(address);\\n\\n  // Allow an optional blockNumber\\n  if (typeof blockNumber === \\\"function\\\") {\\n    callback = blockNumber;\\n    blockNumber = this.forkBlockNumber;\\n  }\\n\\n  this.getSafeFallbackBlockNumber(blockNumber, function(err, safeBlockNumber) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    self.web3.eth.getTransactionCount(address, safeBlockNumber, function(err, nonce) {\\n      if (err) {\\n        return callback(err);\\n      }\\n\\n      nonce = \\\"0x\\\" + self.web3.utils.toBN(nonce).toString(16);\\n      callback(null, nonce);\\n    });\\n  });\\n};\\n\\nForkedBlockchain.prototype.getHeight = function(callback) {\\n  this.latestBlock(function(err, block) {\\n    if (err) {\\n      return callback(err);\\n    }\\n    callback(null, to.number(block.header.number));\\n  });\\n};\\n\\nForkedBlockchain.prototype.getRelativeBlockNumber = function(number, callback) {\\n  var self = this;\\n  this.getEffectiveBlockNumber(number, function(err, effective) {\\n    if (err) {\\n      return callback(err);\\n    }\\n    callback(null, effective - to.number(self.forkBlockNumber) - 1);\\n  });\\n};\\n\\nForkedBlockchain.prototype.getSafeFallbackBlockNumber = function(blockNumber, callback) {\\n  var forkBlockNumber = to.number(this.forkBlockNumber);\\n\\n  if (blockNumber == null) {\\n    return callback(null, forkBlockNumber);\\n  }\\n\\n  this.getEffectiveBlockNumber(blockNumber, function(err, effective) {\\n    if (err) {\\n      return callback(err);\\n    }\\n    if (effective > forkBlockNumber) {\\n      effective = forkBlockNumber;\\n    }\\n\\n    callback(null, effective);\\n  });\\n};\\n\\nForkedBlockchain.prototype.getBlockLogs = function(number, callback) {\\n  var self = this;\\n\\n  this.getEffectiveBlockNumber(number, function(err, effective) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    self.getRelativeBlockNumber(effective, function(err, relative) {\\n      if (err) {\\n        return callback(err);\\n      }\\n\\n      if (relative < 0) {\\n        self.getBlock(number, function(err, block) {\\n          if (err) {\\n            return callback(err);\\n          }\\n\\n          self.web3.currentProvider.send(\\n            {\\n              jsonrpc: \\\"2.0\\\",\\n              method: \\\"eth_getLogs\\\",\\n              params: [\\n                {\\n                  fromBlock: to.hex(number),\\n                  toBlock: to.hex(number)\\n                }\\n              ],\\n              id: new Date().getTime()\\n            },\\n            function(err, res) {\\n              if (err) {\\n                return callback(err);\\n              }\\n\\n              var logs = res.result.map(function(log) {\\n                // To make this result masquerade as the right information.\\n                log.block = block;\\n                return new Log(log);\\n              });\\n\\n              callback(null, logs);\\n            }\\n          );\\n        });\\n      } else {\\n        BlockchainDouble.prototype.getBlockLogs.call(self, relative, callback);\\n      }\\n    });\\n  });\\n};\\n\\nmodule.exports = ForkedBlockchain;\\n\",\"const MerklePatriciaTree = require(\\\"merkle-patricia-tree\\\");\\nconst BaseTrie = require(\\\"merkle-patricia-tree/baseTrie\\\");\\nconst checkpointInterface = require(\\\"merkle-patricia-tree/checkpoint-interface\\\");\\nvar utils = require(\\\"ethereumjs-util\\\");\\nvar inherits = require(\\\"util\\\").inherits;\\nvar Web3 = require(\\\"web3\\\");\\nvar to = require(\\\"./to.js\\\");\\n\\ninherits(ForkedStorageBaseTrie, BaseTrie);\\n\\nfunction ForkedStorageBaseTrie(db, root, options) {\\n  BaseTrie.call(this, db, root);\\n\\n  this.options = options;\\n  this.address = options.address;\\n  this.forkBlockNumber = options.forkBlockNumber;\\n  this.blockchain = options.blockchain;\\n  this.fork = options.fork;\\n  this.web3 = new Web3(this.fork);\\n}\\n\\n// Note: This overrides a standard method whereas the other methods do not.\\nForkedStorageBaseTrie.prototype.get = function(key, blockNumber, callback) {\\n  var self = this;\\n\\n  // Allow an optional blockNumber\\n  if (typeof blockNumber === \\\"function\\\") {\\n    callback = blockNumber;\\n    blockNumber = self.forkBlockNumber;\\n  }\\n\\n  // For geth; https://github.com/ethereumjs/ethereumjs-util/issues/79\\n  blockNumber = to.rpcQuantityHexString(blockNumber);\\n\\n  key = utils.toBuffer(key);\\n\\n  // If the account doesn't exist in our state trie, get it off the wire.\\n  this.keyExists(key, function(err, exists) {\\n    if (err) {\\n      return callback(err);\\n    }\\n\\n    if (exists) {\\n      // TODO: just because we have the key doesn't mean we're at the right\\n      // block number/root to send it. We need to check the block number\\n      // before using the data in our own trie.\\n      MerklePatriciaTree.prototype.get.call(self, key, function(err, r) {\\n        callback(err, r);\\n      });\\n    } else {\\n      // If this is the main trie, get the whole account.\\n      if (self.address == null) {\\n        self.blockchain.fetchAccountFromFallback(key, blockNumber, function(err, account) {\\n          if (err) {\\n            return callback(err);\\n          }\\n\\n          callback(null, account.serialize());\\n        });\\n      } else {\\n        if (to.number(blockNumber) > to.number(self.forkBlockNumber)) {\\n          blockNumber = self.forkBlockNumber;\\n        }\\n        self.web3.eth.getStorageAt(to.hex(self.address), to.hex(key), blockNumber, function(err, value) {\\n          if (err) {\\n            return callback(err);\\n          }\\n\\n          value = utils.rlp.encode(value);\\n\\n          callback(null, value);\\n        });\\n      }\\n    }\\n  });\\n};\\n\\nForkedStorageBaseTrie.prototype.keyExists = function(key, callback) {\\n  key = utils.toBuffer(key);\\n\\n  this.findPath(key, function(err, node, remainder, stack) {\\n    const exists = node && remainder.length === 0;\\n    callback(err, exists);\\n  });\\n};\\n\\nForkedStorageBaseTrie.prototype.copy = function() {\\n  return new ForkedStorageBaseTrie(this.db, this.root, this.options);\\n};\\n\\ninherits(ForkedStorageTrie, ForkedStorageBaseTrie);\\n\\nfunction ForkedStorageTrie(db, root, options) {\\n  ForkedStorageBaseTrie.call(this, db, root, options);\\n  checkpointInterface(this);\\n}\\n\\nForkedStorageTrie.prove = MerklePatriciaTree.prove;\\nForkedStorageTrie.verifyProof = MerklePatriciaTree.verifyProof;\\n\\nmodule.exports = ForkedStorageTrie;\\n\",\"module.exports = require(\\\"merkle-patricia-tree/baseTrie\\\");\",\"module.exports = require(\\\"merkle-patricia-tree/checkpoint-interface\\\");\",\"module.exports = require(\\\"web3-core\\\");\",\"module.exports = require(\\\"web3-eth\\\");\",\"module.exports = require(\\\"web3-net\\\");\",\"module.exports = require(\\\"web3-eth-personal\\\");\",\"module.exports = require(\\\"web3-shh\\\");\",\"module.exports = require(\\\"web3-bzz\\\");\",\"module.exports = require(\\\"web3-utils\\\");\",\"module.exports = require(\\\"eth-sig-util\\\");\",\"module.exports = {\\n  // Mimics crypto.random bytes, but takes in a random number generator\\n  // as its second parameter. rng is expected to be a function that takes\\n  // no parameters and returns a result like Math.random().\\n  // This is important because it allows for a seeded random number generator.\\n  // Since this is a mock RPC library, the rng doesn't need to be cryptographically secure.\\n  randomBytes: function(length, rng) {\\n    var buf = [];\\n\\n    for (var i = 0; i < length; i++) {\\n      buf.push(rng() * 255);\\n    }\\n\\n    return Buffer.from(buf);\\n  },\\n\\n  randomAlphaNumericString: function(length, rng) {\\n    const alphabet = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\\\";\\n\\n    let text = \\\"\\\";\\n\\n    for (var i = 0; i < length; i++) {\\n      text += alphabet.charAt(Math.floor((rng || Math.random)() * alphabet.length));\\n    }\\n\\n    return text;\\n  }\\n};\\n\",\"// this replaces `eth-block-tracker` in the provider-engine, as that block tracker is meant to work with\\n// an external provider instance\\n\\nconst EventEmitter = require(\\\"events\\\");\\nvar blockHelper = require(\\\"./utils/block_helper\\\");\\n\\nfunction GanacheBlockTracker(opts) {\\n  opts = opts || {};\\n  EventEmitter.apply(this);\\n  if (!opts.blockchain) {\\n    throw new Error(\\\"RpcBlockTracker - no blockchain specified.\\\");\\n  }\\n  if (!opts.blockchain.on) {\\n    throw new Error(\\\"RpcBlockTracker - blockchain is not an EventEmitter.\\\");\\n  }\\n  this._blockchain = opts.blockchain;\\n  this.start = this.start.bind(this);\\n  this.stop = this.stop.bind(this);\\n  this.getTrackingBlock = this.getTrackingBlock.bind(this);\\n  this.awaitCurrentBlock = this.awaitCurrentBlock.bind(this);\\n  this._setCurrentBlock = this._setCurrentBlock.bind(this);\\n}\\n\\nGanacheBlockTracker.prototype = Object.create(EventEmitter.prototype);\\nGanacheBlockTracker.prototype.constructor = GanacheBlockTracker;\\n\\nGanacheBlockTracker.prototype.getTrackingBlock = function() {\\n  return this._currentBlock;\\n};\\n\\nGanacheBlockTracker.prototype.getCurrentBlock = function() {\\n  return this._currentBlock;\\n};\\n\\nGanacheBlockTracker.prototype.awaitCurrentBlock = function() {\\n  const self = this;\\n  // return if available\\n  if (this._currentBlock) {\\n    return this._currentBlock;\\n  }\\n  // wait for \\\"sync\\\" event\\n  return new Promise((resolve) => this.once(\\\"block\\\", resolve)).then(() => self._currentBlock);\\n};\\n\\nGanacheBlockTracker.prototype.start = function(opts = {}) {\\n  this._blockchain.on(\\\"block\\\", this._setCurrentBlock);\\n  return Promise.resolve();\\n};\\n\\nGanacheBlockTracker.prototype.stop = function() {\\n  this._isRunning = false;\\n  this._blockchain.removeListener(\\\"block\\\", this._setCurrentBlock);\\n};\\n\\n//\\n// private\\n//\\n\\nGanacheBlockTracker.prototype._setCurrentBlock = function(newBlock) {\\n  let block = blockHelper.toJSON(newBlock, true);\\n  if (this._currentBlock && this._currentBlock.hash === block.hash) {\\n    return;\\n  }\\n  const oldBlock = this._currentBlock;\\n  this._currentBlock = block;\\n  this.emit(\\\"latest\\\", block);\\n  this.emit(\\\"sync\\\", { block, oldBlock });\\n  this.emit(\\\"block\\\", block);\\n};\\n\\nmodule.exports = GanacheBlockTracker;\\n\",\"// make sourcemaps work!\\nrequire(\\\"source-map-support/register\\\");\\n\\nvar Provider = require(\\\"./provider\\\");\\nvar webSocketServer = require(\\\"./webSocketServer\\\");\\nvar httpServer = require(\\\"./httpServer\\\");\\nvar _ = require(\\\"lodash\\\");\\n\\nmodule.exports = {\\n  create: function(options) {\\n    options = _applyDefaultOptions(options || {});\\n\\n    var logger = options.logger;\\n    var provider = new Provider(options);\\n\\n    var server = httpServer(provider, logger);\\n    server.keepAliveTimeout = options.keepAliveTimeout;\\n\\n    let connectionCounter = 0;\\n    const connections = {};\\n    server.on(\\\"connection\\\", (conn) => {\\n      let key = connectionCounter++;\\n      connections[key] = conn;\\n      conn.on(\\\"close\\\", () => delete connections[key]);\\n    });\\n\\n    var oldListen = server.listen;\\n\\n    server.listen = function() {\\n      var args = Array.prototype.slice.call(arguments);\\n      var callback = function() {};\\n      if (args.length > 0) {\\n        var last = args[args.length - 1];\\n        if (typeof last === \\\"function\\\") {\\n          callback = args.pop();\\n        }\\n      }\\n\\n      var intermediary = function(err) {\\n        if (err) {\\n          return callback(err);\\n        }\\n        server.provider.manager.waitForInitialization(callback);\\n      };\\n\\n      args.push(intermediary);\\n\\n      oldListen.apply(server, args);\\n    };\\n\\n    server.provider = provider;\\n\\n    if (options.ws) {\\n      webSocketServer(server, provider, logger);\\n    }\\n\\n    var oldClose = server.close;\\n\\n    server.close = function(callback) {\\n      var args = Array.prototype.slice.call(arguments);\\n      oldClose.apply(server, args);\\n\\n      server.provider.close(function(err) {\\n        if (err) {\\n          return callback(err);\\n        }\\n        Object.keys(connections).forEach((key) => {\\n          try {\\n            connections[key].destroy();\\n          } catch (error) {}\\n        });\\n      });\\n    };\\n\\n    return server;\\n  }\\n};\\n\\nconst defaultOptions = {\\n  logger: {\\n    log: function() {}\\n  },\\n  ws: true,\\n  keepAliveTimeout: 5000\\n};\\n\\nvar _applyDefaultOptions = function(options) {\\n  return _.merge({}, defaultOptions, options);\\n};\\n\",\"var websocket = require(\\\"websocket\\\");\\nvar WebSocketServer = websocket.server;\\n\\nmodule.exports = function(httpServer, provider, logger) {\\n  var connectionManager = new ConnectionManager(provider, logger);\\n\\n  var wsServer = new WebSocketServer({\\n    httpServer: httpServer,\\n    autoAcceptConnections: true\\n  });\\n\\n  wsServer.on(\\\"connect\\\", connectionManager.manageConnection);\\n\\n  return wsServer;\\n};\\n\\nfunction ConnectionManager(provider, logger) {\\n  const self = this;\\n  self.provider = provider;\\n  self.logger = logger;\\n  self.connectionsBySubscriptionId = {};\\n  self.connections = {};\\n  self.connectionCounter = 0;\\n\\n  self._updateSubscriptions = self._updateSubscriptions.bind(self);\\n  self.manageConnection = self.manageConnection.bind(self);\\n  self._logPayload = self._logPayload.bind(self);\\n  self._handleRequest = self._handleRequest.bind(self);\\n\\n  provider.on(\\\"data\\\", function(err, notification) {\\n    if (err) {\\n      return;\\n    }\\n    self._updateSubscriptions(notification);\\n  });\\n}\\n\\nConnectionManager.prototype.manageConnection = function(connection) {\\n  const self = this;\\n  connection.id = ++self.connectionCounter;\\n  self.connections[connection.id] = {\\n    connection: connection,\\n    subscriptions: {}\\n  };\\n\\n  connection.on(\\\"message\\\", function(message) {\\n    let payload;\\n    try {\\n      if (message.type === \\\"utf8\\\") {\\n        payload = JSON.parse(message.utf8Data);\\n      } else if (message.type === \\\"binary\\\") {\\n        payload = JSON.parse(message.binaryData.toString(\\\"utf8\\\").trim());\\n      } else {\\n        throw new Error(\\\"Invalid message type\\\");\\n      }\\n    } catch (e) {\\n      connection.close(websocket.connection.CLOSE_REASON_UNPROCESSABLE_INPUT, e.message);\\n      return;\\n    }\\n\\n    self._logPayload(payload);\\n    self._handleRequest(connection, payload);\\n  });\\n\\n  connection.on(\\\"close\\\", function() {\\n    // remove subscriptions\\n    Object.keys(self.connections[connection.id].subscriptions).forEach((subscriptionId) => {\\n      self.provider.send(\\n        {\\n          jsonrpc: \\\"2.0\\\",\\n          method: \\\"eth_unsubscribe\\\",\\n          params: [subscriptionId],\\n          id: new Date().getTime()\\n        },\\n        function(err, result) {\\n          if (err) {\\n            return;\\n          }\\n          delete self.connectionsBySubscriptionId[subscriptionId];\\n        }\\n      );\\n    });\\n\\n    delete self.connections[connection.id];\\n  });\\n};\\n\\nConnectionManager.prototype._handleRequest = function(connection, payload) {\\n  const self = this;\\n\\n  // handle subscription requests, otherwise delegate to provider\\n  switch (payload.method) {\\n    case \\\"eth_subscribe\\\":\\n      self.provider.send(payload, function(err, result) {\\n        if (!err && result.result && self.connections[connection.id]) {\\n          self.connections[connection.id].subscriptions[result.result] = true;\\n          self.connectionsBySubscriptionId[result.result] = self.connections[connection.id];\\n        }\\n        connection.send(JSON.stringify(result));\\n      });\\n      break;\\n    case \\\"eth_unsubscribe\\\":\\n      self.provider.send(payload, function(err, result) {\\n        if (err || result.error) {\\n          if (connection && connection.send) {\\n            connection.send(JSON.stringify(result));\\n          }\\n          return;\\n        }\\n\\n        if (self.connections[connection.id]) {\\n          delete self.connections[connection.id].subscriptions[payload.params[0]];\\n        }\\n        delete self.connectionsBySubscriptionId[payload.params[0]];\\n\\n        connection.send(JSON.stringify(result));\\n      });\\n      break;\\n    default:\\n      self.provider.send(payload, function(_, result) {\\n        connection.send(JSON.stringify(result));\\n      });\\n  }\\n};\\n\\n// Log messages that come into the TestRPC via http\\nConnectionManager.prototype._logPayload = function(payload) {\\n  const self = this;\\n  if (payload instanceof Array) {\\n    // Batch request\\n    for (var i = 0; i < payload.length; i++) {\\n      var item = payload[i];\\n      self.logger.log(item.method);\\n    }\\n  } else {\\n    self.logger.log(payload.method);\\n  }\\n};\\n\\nConnectionManager.prototype._updateSubscriptions = function(notification) {\\n  const subscription = this.connectionsBySubscriptionId[notification.params.subscription];\\n  // Safety check for subscription/connection.\\n  if (subscription) {\\n    subscription.connection.send(JSON.stringify(notification));\\n  }\\n};\\n\",\"module.exports = require(\\\"websocket\\\");\",\"const http = require(\\\"http\\\");\\nconst { rpcError } = require(\\\"./utils/to\\\");\\n\\nfunction createCORSResponseHeaders(method, requestHeaders) {\\n  // https://fetch.spec.whatwg.org/#http-requests\\n  const headers = {};\\n  let isCORSRequest = requestHeaders.hasOwnProperty(\\\"origin\\\");\\n  if (isCORSRequest) {\\n    // OPTIONS preflight requests need a little extra treatment\\n    if (method === \\\"OPTIONS\\\") {\\n      // we only allow POST requests, so it doesn't matter which method the request is asking for\\n      headers[\\\"Access-Control-Allow-Methods\\\"] = \\\"POST\\\";\\n      // echo all requested access-control-request-headers back to the response\\n      if (requestHeaders.hasOwnProperty(\\\"access-control-request-headers\\\")) {\\n        headers[\\\"Access-Control-Allow-Headers\\\"] = requestHeaders[\\\"access-control-request-headers\\\"];\\n      }\\n      // Safari needs Content-Length = 0 for a 204 response otherwise it hangs forever\\n      // https://github.com/expressjs/cors/pull/121#issue-130260174\\n      headers[\\\"Content-Length\\\"] = 0;\\n\\n      // Make browsers and compliant clients cache the OPTIONS preflight response for 10\\n      // minutes (this is the maximum time Chromium allows)\\n      headers[\\\"Access-Control-Max-Age\\\"] = 600; // seconds\\n    }\\n\\n    // From the spec: https://fetch.spec.whatwg.org/#http-responses\\n    // \\\"For a CORS-preflight request, request’s credentials mode is always \\\"omit\\\",\\n    // but for any subsequent CORS requests it might not be. Support therefore\\n    // needs to be indicated as part of the HTTP response to the CORS-preflight request as well.\\\", so this\\n    // header is added to all requests.\\n    // Additionally, https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials,\\n    // states that there aren't any HTTP Request headers that indicate you whether or not Request.withCredentials\\n    // is set. Because web3@1.0.0-beta.35-? always sets `request.withCredentials = true` while Safari requires it be\\n    // returned even when no credentials are set in the browser this header must always be return on all requests.\\n    // (I've found that Chrome and Firefox don't actually require the header when credentials aren't set)\\n    //  Regression Commit: https://github.com/ethereum/web3.js/pull/1722\\n    //  Open Web3 Issue: https://github.com/ethereum/web3.js/issues/1802\\n    headers[\\\"Access-Control-Allow-Credentials\\\"] = true;\\n\\n    // From the spec: \\\"It cannot be reliably identified as participating in the CORS protocol\\n    // as the `Origin` header is also included for all requests whose method is neither\\n    // `GET` nor `HEAD`.\\\"\\n    // Explicitly set the origin instead of using *, since credentials\\n    // can't be used in conjunction with *. This will always be set\\n    /// for valid preflight requests.\\n    headers[\\\"Access-Control-Allow-Origin\\\"] = requestHeaders.origin;\\n  }\\n  return headers;\\n}\\n\\nfunction sendResponse(response, statusCode, headers, data) {\\n  response.writeHead(statusCode, headers);\\n  response.end(data);\\n}\\n\\nmodule.exports = function(provider, logger) {\\n  var server = http.createServer(function(request, response) {\\n    var method = request.method;\\n    var body = [];\\n\\n    request\\n      .on(\\\"data\\\", function(chunk) {\\n        body.push(chunk);\\n      })\\n      .on(\\\"end\\\", function() {\\n        body = Buffer.concat(body).toString();\\n        // At this point, we have the headers, method, url and body, and can now\\n        // do whatever we need to in order to respond to this request.\\n\\n        const headers = createCORSResponseHeaders(method, request.headers);\\n\\n        switch (method) {\\n          case \\\"POST\\\":\\n            var payload;\\n            try {\\n              payload = JSON.parse(body);\\n            } catch (e) {\\n              headers[\\\"Content-Type\\\"] = \\\"text/plain\\\";\\n              sendResponse(response, 400, headers, \\\"400 Bad Request\\\");\\n              return;\\n            }\\n\\n            // Log messages that come into the TestRPC via http\\n            if (payload instanceof Array) {\\n              // Batch request\\n              for (var i = 0; i < payload.length; i++) {\\n                var item = payload[i];\\n                logger.log(item.method);\\n              }\\n            } else {\\n              logger.log(payload.method);\\n            }\\n\\n            // http connections do not support subscriptions\\n            if (payload.method === \\\"eth_subscribe\\\" || payload.method === \\\"eth_unsubscribe\\\") {\\n              headers[\\\"Content-Type\\\"] = \\\"application/json\\\";\\n              sendResponse(response, 400, headers, rpcError(payload.id, -32000, \\\"notifications not supported\\\"));\\n              break;\\n            }\\n\\n            provider.send(payload, function(_, result) {\\n              headers[\\\"Content-Type\\\"] = \\\"application/json\\\";\\n              sendResponse(response, 200, headers, JSON.stringify(result));\\n            });\\n\\n            break;\\n          case \\\"OPTIONS\\\":\\n            sendResponse(response, 204, headers);\\n            break;\\n          default:\\n            headers[\\\"Content-Type\\\"] = \\\"text/plain\\\";\\n            sendResponse(response, 400, headers, \\\"400 Bad Request\\\");\\n            break;\\n        }\\n      });\\n  });\\n\\n  server.ganacheProvider = provider;\\n  return server;\\n};\\n\",\"module.exports = require(\\\"http\\\");\"]}","code":"!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(\"Ganache\",[],e):\"object\"==typeof exports?exports.Ganache=e():t.Ganache=e()}(global,function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"\",n(n.s=25)}([function(t,e,n){let r=n(3);t.exports={buffer:function(t){let e;return\"string\"==typeof t?(e=(e=0===t.indexOf(\"0x\")?t.slice(2):t).length%2==1?`0${e}`:e,e=Buffer.from(e,\"hex\")):e=Buffer.isBuffer(t)?t:Buffer.from(t),e},hex:function(t){if(\"string\"==typeof t){if(0===t.indexOf(\"0x\"))return t.trim();t=new r.BN(t)}if(\"boolean\"==typeof t&&(t=t?1:0),\"number\"==typeof t)t=r.intToHex(t);else{if(null==t)return\"0x\";\"object\"==typeof t&&(t=t.toString(\"hex\"))}return r.addHexPrefix(t)},_rpcQuantityHexString:function(t){return t=(t=this.hex(t)).replace(/^(?:0x)(?:0+(.+?))?$/,\"0x$1\")},rpcQuantityHexString:function(t){return\"0x\"===(t=this._rpcQuantityHexString(t))&&(t=\"0x0\"),t},rpcDataHexString:function(t,e){if(\"number\"==typeof e)t=this.hex(t).replace(\"0x\",\"\"),t=new Array(e-t.length).fill(\"0\").join(\"\")+t;else{if(0===t.length)return\"0x\";(t=this.hex(t).replace(\"0x\",\"\")).length%2!=0&&(t=\"0\"+t)}return\"0x\"+t},nullableRpcDataHexString:function(t,e){if(null===t)return null;{const n=this.rpcDataHexString(t,e);return\"0x\"===n?null:n}},nullableRpcQuantityHexString:function(t,e){if(null===t)return null;{const n=this._rpcQuantityHexString(t,e);return\"0x\"===n?null:n}},hexWithZeroPadding:function(t){const e=(t=this.hex(t)).replace(\"0x\",\"\");return 1&e.length?\"0x0\"+e:t},number:function(t){if(\"number\"==typeof t)return t;if(\"string\"==typeof t&&0!==t.indexOf(\"0x\"))return parseInt(t,10);var e=r.toBuffer(t);return r.bufferToInt(e)},rpcError:function(t,e,n){return JSON.stringify({jsonrpc:\"2.0\",id:t,error:{code:e,message:n}})}}},function(t,e){t.exports=require(\"util\")},function(t,e){t.exports=require(\"async\")},function(t,e){t.exports=require(\"ethereumjs-util\")},function(t,e){t.exports=require(\"web3-provider-engine/subproviders/subprovider.js\")},function(t,e){t.exports=require(\"bn.js\")},function(t,e){t.exports=require(\"lodash\")},function(t,e){t.exports=require(\"source-map-support/register\")},function(t,e){t.exports=require(\"ethereumjs-account\")},function(t,e,n){var r=n(1).inherits,o=n(0),i=n(33);function s(t,e){Error.captureStackTrace(this,this.constructor),this.name=this.constructor.name,this.results={},this.hashes=[],this.combine(t,e)}r(s,Error),s.prototype.combine=function(t,e){if(t instanceof s)for(var n=t,r=Object.keys(n.results),a=0;a<r.length;a++){var c=r[a];this.results[c]=n.results[c],Array.prototype.push.apply(this.hashes,n.hashes)}else{var u=e.results;for(a=0;a<t.length;a++){var l=t[a],h=u[a];if(1!==h.vm.exception){var p,f=o.hex(l.hash());this.hashes.push(f);var d=h.vm.return;d&&\"08c379a0\"===d.slice(0,4).toString(\"hex\")&&(p=i.rawDecode([\"string\"],d.slice(4))[0]),this.results[f]={error:h.vm.exceptionError.error||h.vm.exceptionError,program_counter:h.vm.runState.programCounter,return:o.hex(h.vm.return),reason:p}}}}if(1===this.hashes.length){var g=this.results[this.hashes[0]],m=\"VM Exception while processing transaction: \"+g.error;g.reason&&(m+=\" \"+g.reason),this.message=m}else{for(m=\"Multiple VM Exceptions while processing transactions: \\n\\n\",a=0;a<this.hashes.length;a++)m+=(f=this.hashes[a])+\": \"+(g=this.results[f]).error,g.reason&&(m+=\" \"+g.reason),m+=\"\\n\";this.message=m}},s.prototype.count=function(){return Object.keys(this.results).length},s.fromResults=function(t,e){var n=new s(t,e);return 0===n.count()?null:n},t.exports=s},function(t,e,n){const r=n(34),o=n(35),i=n(3),s=n(36),a=n(37),c=n(0),u=r.prototype.sign,l=function(){return null!=this._hash?this._hash:o.prototype.hash.apply(this,arguments)},h=Buffer.from([0]);function p(t,e){t._originals=[];[\"nonce\",\"gasPrice\",\"gasLimit\",\"value\"].forEach(e=>(function(t,e,n=32){const r=t._fields.indexOf(e),o=Object.getOwnPropertyDescriptor(t,e);Object.defineProperty(t,e,{set:a=>{o.set.call(t,a),a=i.toBuffer(a),s(n>=a.length,`The field ${e} must not have more ${n} bytes`),t._originals[r]=a},get:()=>t._originals[r]})})(t,e,32));const n=Object.getOwnPropertyDescriptor(t,\"v\");Object.defineProperty(t,\"v\",{set:e=>{n.set.call(t,e);const r=i.bufferToInt(t.v);let o=Math.floor((r-35)/2);o<0&&(o=0),t._chainId=o||0}}),t.isFake()&&(Object.defineProperty(t,\"from\",{enumerable:!0,configurable:!0,get:t.getSenderAddress.bind(t),set:e=>{t._from=e?i.toBuffer(e):null}}),e&&e.from&&(t.from=e.from),t.hash=l)}t.exports=class t extends r{constructor(e,n=t.types.none){super(),this.type=n,p(this,e),function(t,e){if(e){\"string\"==typeof e&&(e=c.buffer(e)),Buffer.isBuffer(e)&&(e=a.decode(e));const n=t;if(Array.isArray(e)){if(e.length>t._fields.length)throw new Error(\"wrong number of fields in data\");e.forEach((t,e)=>{n[n._fields[e]]=i.toBuffer(t)})}else{if(\"object\"!=(void 0===e?\"undefined\":typeof e))throw new Error(\"invalid data\");{const r=Object.keys(e);t._fields.forEach(function(t){-1!==r.indexOf(t)&&(n[t]=e[t]),\"gasLimit\"===t?-1!==r.indexOf(\"gas\")&&(n.gas=e.gas):\"data\"===t&&-1!==r.indexOf(\"input\")&&(n.input=e.input)}),!t._chainId&&e&&null!=e.chainId&&(t.raw[n._fields.indexOf(\"v\")]=t._chainId=e.chainId||0)}}}}(this,e)}static get types(){return{none:0,signed:1,fake:2}}static fromJSON(e,n){let r;if(e.to){const t=c.buffer(e.to);r=t.equals(Buffer.from([0]))?i.setLengthLeft(t,20):t}const o=e.data||e.input,s={nonce:i.toBuffer(c.hex(e.nonce)),from:i.toBuffer(c.hex(e.from)),value:i.toBuffer(c.hex(e.value)),gasLimit:i.toBuffer(c.hex(e.gas||e.gasLimit)),gasPrice:i.toBuffer(c.hex(e.gasPrice)),data:o?c.buffer(o):null,to:r,v:i.toBuffer(e.v),r:i.toBuffer(e.r),s:i.toBuffer(e.s)},a=new t(s,n);return a._hash=e.hash?c.buffer(e.hash):null,a}encode(){return{hash:c.nullableRpcDataHexString(this.hash()),nonce:c.nullableRpcQuantityHexString(this.nonce)||\"0x\",from:c.rpcDataHexString(this.from),to:c.nullableRpcDataHexString(this.to),value:c.nullableRpcQuantityHexString(this.value),gas:c.nullableRpcQuantityHexString(this.gasLimit),gasPrice:c.nullableRpcQuantityHexString(this.gasPrice),data:this.data?this.data.toString(\"hex\"):null,v:c.nullableRpcQuantityHexString(this.v),r:c.nullableRpcDataHexString(this.r),s:c.nullableRpcDataHexString(this.s),_type:this.type}}isFake(){return(this.type&t.types.fake)===t.types.fake}isSigned(){return(this.type&t.types.signed)===t.types.signed}validateNonce(t){let e;return(e=this.isSigned()&&0===this.nonce.length?h:this.nonce).equals(t)}sign(){u.apply(this,arguments),this.type|=t.types.signed}toJsonRpc(t){const e=this.hash();let n=null;for(let r=0,o=t.transactions,i=o.length;r<i;r++)if(o[r].hash().equals(e)){n=r;break}return{hash:c.nullableRpcDataHexString(e),nonce:c.rpcQuantityHexString(this.nonce),blockHash:c.nullableRpcDataHexString(t.hash()),blockNumber:c.nullableRpcQuantityHexString(t.header.number),transactionIndex:c.nullableRpcQuantityHexString(n),from:c.rpcDataHexString(this.from),to:c.nullableRpcDataHexString(this.to),value:c.rpcQuantityHexString(this.value),gas:c.rpcQuantityHexString(this.gasLimit),gasPrice:c.rpcQuantityHexString(this.gasPrice),input:c.rpcDataHexString(this.data),v:c.nullableRpcQuantityHexString(this.v),r:c.nullableRpcDataHexString(this.r),s:c.nullableRpcDataHexString(this.s)}}hash(t=!0){let e;if(t)e=this.raw;else{const t=this._chainId;if(t>0){const n=this.raw.slice();this.v=t,this.r=0,this.s=0,e=this.raw,this.raw=n,this._chainId=t}else e=this.raw.slice(0,6)}return i.rlphash(e)}}},function(t,e){t.exports=require(\"ethereumjs-block\")},function(t,e,n){var r=n(0);function o(t){var e=this;Object.keys(t).forEach(function(n){e[n]=t[n]})}o.prototype.toJSON=function(){return{logIndex:r.rpcQuantityHexString(this.logIndex),transactionIndex:r.rpcQuantityHexString(this.transactionIndex),transactionHash:r.rpcDataHexString(this.transactionHash),blockHash:r.rpcDataHexString(this.block.hash()),blockNumber:r.rpcQuantityHexString(this.block.header.number),address:r.rpcDataHexString(this.address),data:r.rpcDataHexString(this.data),topics:this.topics,type:\"mined\"}},t.exports=o},function(t,e,n){var r=n(0);function o(t,e,n,r,o,i,s,a){this.tx=t,this.block=e,this.logs=n,this.gasUsed=r,this.cumulativeGasUsed=o,this.contractAddress=i,this.status=s,this.logsBloom=a,this.transactionIndex=0,this.txHash=t.hash();for(var c=0;c<e.transactions.length;c++){if(e.transactions[c].hash().equals(this.txHash)){this.transactionIndex=c;break}}}o.prototype.toJSON=function(){return{transactionHash:r.rpcDataHexString(this.txHash),transactionIndex:r.rpcQuantityHexString(this.transactionIndex),blockHash:r.rpcDataHexString(this.block.hash()),blockNumber:r.rpcQuantityHexString(this.block.header.number),from:r.rpcDataHexString(this.tx.from),to:r.nullableRpcDataHexString(this.tx.to),gasUsed:r.rpcQuantityHexString(this.gasUsed),cumulativeGasUsed:r.rpcQuantityHexString(this.cumulativeGasUsed),contractAddress:null!=this.contractAddress?r.rpcDataHexString(this.contractAddress):null,logs:this.logs.map(function(t){return t.toJSON()}),status:r.rpcQuantityHexString(this.status),logsBloom:r.rpcDataHexString(this.logsBloom),v:r.rpcDataHexString(this.tx.v),r:r.rpcDataHexString(this.tx.r),s:r.rpcDataHexString(this.tx.s)}},t.exports=o},function(t,e){class n extends Error{constructor(t,e,n){super(\"LevelUpArrayAdapter named '\"+t+\"' index out of range: index \"+e+\"; length: \"+n),this.name=`${this.constructor.name}:${t}`,this.type=t}}t.exports={LevelUpOutOfRangeError:n,BlockOutOfRangeError:class extends n{constructor(t,e){super(\"blocks\",t,e)}}}},function(t,e){t.exports=require(\"events\")},function(t,e,n){\"use strict\";var r=n(69).version,o=n(70),i=n(71),s=n(72),a=n(73),c=n(74),u=n(75),l=n(76),h=function(){var t=this;o.packageInit(this,arguments),this.version=r,this.utils=l,this.eth=new i(this),this.shh=new c(this),this.bzz=new u(this);var e=this.setProvider;this.setProvider=function(n,r){return e.apply(t,arguments),this.eth.setProvider(n,r),this.shh.setProvider(n,r),this.bzz.setProvider(n),!0}};h.version=r,h.utils=l,h.modules={Eth:i,Net:s,Personal:a,Shh:c,Bzz:u},o.addProviders(h),t.exports=h},function(t,e,n){n(7);let r=n(26),o=n(27),i=n(28),s=n(29),a=n(30),c=n(31),u=n(80),l=n(9),h=n(15),p=n(6);function f(t){const e=this;h.call(this),this.options=t=e._applyDefaultOptions(t||{});let n=new c(t,this);this.engine=new r({blockTracker:new u({blockchain:n.state.blockchain})});let l=new o;this.engine.manager=n,this.engine.addProvider(new i),this.engine.addProvider(new s),this.engine.addProvider(l),this.engine.addProvider(new a),this.engine.addProvider(n),this.engine.setMaxListeners(100),this.engine.start(),this.manager=n,this.sendAsync=this.send.bind(this),this.send=this.send.bind(this),this.close=this.close.bind(this),this._queueRequest=this._queueRequest.bind(this),this._processRequestQueue=this._processRequestQueue.bind(this),l.on(\"data\",function(t,n){e.emit(\"data\",t,n)})}const d={vmErrorsOnRPCResponse:!0,verbose:!1,asyncRequestProcessing:!1,logger:{log:function(){}}};f.prototype=Object.create(h.prototype),f.prototype.constructor=f,f.prototype._applyDefaultOptions=function(t){return p.merge({},d,t)},f.prototype.send=function(t,e){if(\"function\"!=typeof e)throw new Error(\"No callback provided to provider's send function. As of web3 1.0, provider.send is no longer synchronous and must be passed a callback as its final argument.\");let n=this,r=function(t){return p.cloneDeep(t)};t=Array.isArray(t)?t.map(r):r(t);let o=function(r,o){let i;if(o=p.cloneDeep(o),Array.isArray(o)){i=[];for(let e=0;e<o.length;e++)i.push(n.reportErrorInResponse(t[e],r,o[e]))}else i=n.reportErrorInResponse(t,r,o);n.options.verbose&&n.options.logger.log(\" <   \"+JSON.stringify(i,null,2).split(\"\\n\").join(\"\\n <   \")),process.nextTick(()=>e(i.error?r:null,i))};n.options.verbose&&n.options.logger.log(\"   > \"+JSON.stringify(t,null,2).split(\"\\n\").join(\"\\n   > \")),n.options.asyncRequestProcessing?n.engine.sendAsync(t,o):n._queueRequest(t,o)},f.prototype.close=function(t){this.manager.state.stopMining(),this.manager.state.blockchain.close(t),this.engine.stop()},f.prototype._queueRequest=function(t,e){this._requestQueue||(this._requestQueue=[]),this._requestQueue.push({payload:t,callback:e}),setImmediate(this._processRequestQueue)},f.prototype._processRequestQueue=function(){const t=this;if(t._requestInProgress)return;t._requestInProgress=!0;let e=t._requestQueue.shift();e?t.engine.sendAsync(e.payload,(n,r)=>{t._requestQueue.length>0&&setImmediate(t._processRequestQueue),e.callback(n,r),t._requestInProgress=!1}):(t._requestInProgress=!1,t._requestQueue.length>0&&setImmediate(t._processRequestQueue))},f.prototype.cleanUpErrorObject=function(t,e){if(!t||!e.error)return e;let n={error:{data:{}}};return t.message?(n.error.message=t.message,n.error.data.stack=t.stack,n.error.data.name=t.name):e.error||(n.error={message:t.toString()}),p.merge(e,n)};let g=[\"eth_sendTransaction\",\"eth_sendRawTransaction\",\"personal_sendTransaction\"];f.prototype._isTransactionRequest=function(t){return-1!==g.indexOf(t.method)},f.prototype.reportErrorInResponse=function(t,e,n){const r=this;return e?(r._isTransactionRequest(t)&&e instanceof l&&(n.result=e.hashes[0],r.options.vmErrorsOnRPCResponse?(n.error.data||(n.error.data={}),n.error.data[e.hashes[0]]=e.results[e.hashes[0]]):delete n.error),\"eth_call\"===t.method&&e instanceof l&&(r.options.vmErrorsOnRPCResponse?(n.error.data||(n.error.data={}),n.error.data[e.hashes[0]]=e.results[e.hashes[0]]):(n.result=e.results[e.hashes[0]].return||\"0x\",delete n.error)),r.cleanUpErrorObject(e,n)):n},t.exports=f},function(t,e,n){\"use strict\";var r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},o=n(40).Buffer,i=n(3),s=n(41),a=n(42),c=n(43),u=n(44);function l(t,e){if(!t)throw new Error(e||\"Assertion failed\")}function h(t,e){return o.concat([t.update(e),t.final()])}var p=function(t,e){if(t&&e)throw new Error(\"Cannot supply both a private and a public key to the constructor\");if(t&&!i.isValidPrivate(t))throw new Error(\"Private key does not satisfy the curve requirements (ie. it is invalid)\");if(e&&!i.isValidPublic(e))throw new Error(\"Invalid public key\");this._privKey=t,this._pubKey=e};Object.defineProperty(p.prototype,\"privKey\",{get:function(){return l(this._privKey,\"This is a public key only wallet\"),this._privKey}}),Object.defineProperty(p.prototype,\"pubKey\",{get:function(){return this._pubKey||(this._pubKey=i.privateToPublic(this.privKey)),this._pubKey}}),p.generate=function(t){if(!t)return new p(s.randomBytes(32));for(var e=new i.BN(\"088f924eeceeda7fe92e1f5b0fffffffffffffff\",16);;){var n=s.randomBytes(32);if(new i.BN(i.privateToAddress(n)).lte(e))return new p(n)}},p.generateVanityAddress=function(t){for(\"object\"!==(void 0===t?\"undefined\":r(t))&&(t=new RegExp(t));;){var e=s.randomBytes(32),n=i.privateToAddress(e);if(t.test(n.toString(\"hex\")))return new p(e)}},p.prototype.getPrivateKey=function(){return this.privKey},p.prototype.getPrivateKeyString=function(){return i.bufferToHex(this.getPrivateKey())},p.prototype.getPublicKey=function(){return this.pubKey},p.prototype.getPublicKeyString=function(){return i.bufferToHex(this.getPublicKey())},p.prototype.getAddress=function(){return i.publicToAddress(this.pubKey)},p.prototype.getAddressString=function(){return i.bufferToHex(this.getAddress())},p.prototype.getChecksumAddressString=function(){return i.toChecksumAddress(this.getAddressString())},p.prototype.toV3=function(t,e){l(this._privKey,\"This is a public key only wallet\");var n,r=(e=e||{}).salt||s.randomBytes(32),u=e.iv||s.randomBytes(16),h=e.kdf||\"scrypt\",p={dklen:e.dklen||32,salt:r.toString(\"hex\")};if(\"pbkdf2\"===h)p.c=e.c||262144,p.prf=\"hmac-sha256\",n=s.pbkdf2Sync(o.from(t),r,p.c,p.dklen,\"sha256\");else{if(\"scrypt\"!==h)throw new Error(\"Unsupported kdf\");p.n=e.n||262144,p.r=e.r||8,p.p=e.p||1,n=a(o.from(t),r,p.n,p.r,p.p,p.dklen)}var f=s.createCipheriv(e.cipher||\"aes-128-ctr\",n.slice(0,16),u);if(!f)throw new Error(\"Unsupported cipher\");var d=o.concat([f.update(this.privKey),f.final()]),g=i.sha3(o.concat([n.slice(16,32),o.from(d,\"hex\")]));return{version:3,id:c({random:e.uuid||s.randomBytes(16)}),address:this.getAddress().toString(\"hex\"),crypto:{ciphertext:d.toString(\"hex\"),cipherparams:{iv:u.toString(\"hex\")},cipher:e.cipher||\"aes-128-ctr\",kdf:h,kdfparams:p,mac:g.toString(\"hex\")}}},p.prototype.getV3Filename=function(t){return[\"UTC--\",(t?new Date(t):new Date).toJSON().replace(/:/g,\"-\"),\"--\",this.getAddress().toString(\"hex\")].join(\"\")},p.prototype.toV3String=function(t,e){return JSON.stringify(this.toV3(t,e))},p.fromPublicKey=function(t,e){return e&&(t=i.importPublic(t)),new p(null,t)},p.fromExtendedPublicKey=function(t){return l(\"xpub\"===t.slice(0,4),\"Not an extended public key\"),t=u.decode(t).slice(45),p.fromPublicKey(t,!0)},p.fromPrivateKey=function(t){return new p(t)},p.fromExtendedPrivateKey=function(t){l(\"xprv\"===t.slice(0,4),\"Not an extended private key\");var e=u.decode(t);return l(0===e[45],\"Invalid extended private key\"),p.fromPrivateKey(e.slice(46))},p.fromV1=function(t,e){l(\"string\"==typeof e);var n=\"object\"===(void 0===t?\"undefined\":r(t))?t:JSON.parse(t);if(\"1\"!==n.Version)throw new Error(\"Not a V1 wallet\");if(\"scrypt\"!==n.Crypto.KeyHeader.Kdf)throw new Error(\"Unsupported key derivation scheme\");var c=n.Crypto.KeyHeader.KdfParams,u=a(o.from(e),o.from(n.Crypto.Salt,\"hex\"),c.N,c.R,c.P,c.DkLen),f=o.from(n.Crypto.CipherText,\"hex\");if(i.sha3(o.concat([u.slice(16,32),f])).toString(\"hex\")!==n.Crypto.MAC)throw new Error(\"Key derivation failed - possibly wrong passphrase\");var d=h(s.createDecipheriv(\"aes-128-cbc\",i.sha3(u.slice(0,16)).slice(0,16),o.from(n.Crypto.IV,\"hex\")),f);return new p(d)},p.fromV3=function(t,e,n){l(\"string\"==typeof e);var c,u,f=\"object\"===(void 0===t?\"undefined\":r(t))?t:JSON.parse(n?t.toLowerCase():t);if(3!==f.version)throw new Error(\"Not a V3 wallet\");if(\"scrypt\"===f.crypto.kdf)u=f.crypto.kdfparams,c=a(o.from(e),o.from(u.salt,\"hex\"),u.n,u.r,u.p,u.dklen);else{if(\"pbkdf2\"!==f.crypto.kdf)throw new Error(\"Unsupported key derivation scheme\");if(\"hmac-sha256\"!==(u=f.crypto.kdfparams).prf)throw new Error(\"Unsupported parameters to PBKDF2\");c=s.pbkdf2Sync(o.from(e),o.from(u.salt,\"hex\"),u.c,u.dklen,\"sha256\")}var d=o.from(f.crypto.ciphertext,\"hex\");if(i.sha3(o.concat([c.slice(16,32),d])).toString(\"hex\")!==f.crypto.mac)throw new Error(\"Key derivation failed - possibly wrong passphrase\");var g=h(s.createDecipheriv(f.crypto.cipher,c.slice(0,16),o.from(f.crypto.cipherparams.iv,\"hex\")),d);return new p(g)},p.fromEthSale=function(t,e){l(\"string\"==typeof e);var n=\"object\"===(void 0===t?\"undefined\":r(t))?t:JSON.parse(t),a=o.from(n.encseed,\"hex\"),c=s.pbkdf2Sync(e,e,2e3,32,\"sha256\").slice(0,16),u=h(s.createDecipheriv(\"aes-128-cbc\",c,a.slice(0,16)),a.slice(16)),f=new p(i.sha3(u));if(f.getAddress().toString(\"hex\")!==n.ethaddr)throw new Error(\"Decoded key mismatch - possibly wrong passphrase\");return f},t.exports=p},function(t,e,n){var r=n(0),o=n(8),i=n(11),s=n(12),a=n(13),c=n(47),u=n(9),l=n(20),h=n(3),p=n(2),f=n(48),d=n(49),g=n(15),m=n(64),b=n(6),y=n(1).promisify;const k=n(5);function v(t){if(g.apply(this),this.options=t=this._applyDefaultOptions(t||{}),this.logger=t.logger||console,this.data=new d(t),null!=t.trie&&null!=t.db_path)throw new Error(\"Can't initialize a TestRPC with a db and a custom trie.\");this.pending_transactions=[],this.blockGasLimit=t.gasLimit,this.defaultTransactionGasLimit=t.defaultTransactionGasLimit,this.timeAdjustment=0}const x={gasLimit:\"0x6691b7\",defaultTransactionGasLimit:\"0x15f90\",time:null,debug:!1,hardfork:\"petersburg\",allowUnlimitedContractSize:!1};v.prototype=Object.create(g.prototype),v.prototype.constructor=v,v.prototype._applyDefaultOptions=function(t){return b.merge(t,x,Object.assign({},t))},v.prototype.initialize=function(t,e){var n=this;this.data.initialize(function(r){if(r)return e(r);n.latestBlock(function(r,o){if(r)return e(r);var i=n.options,s=null;if(o&&(s=o.header.stateRoot),n.stateTrie=n.createStateTrie(n.data.trie_db,s),n.vm=i.vm||n.createVMFromStateTrie(n.stateTrie,!0),i.time&&n.setTime(i.time),o)return n.emit(\"block\",o),e();n.createGenesisBlock(function(r,o){if(r)return e(r);t=t||[],n.vm.stateManager.checkpoint(()=>{p.eachSeries(t,function(t,e){n.vm.stateManager.putAccount(h.toBuffer(t.address),t.account,e)},function(t){if(t)return e(t);n.vm.stateManager.commit(()=>{n.putBlock(o,[],[],e)})})})})})})},v.prototype.createVMFromStateTrie=function(t,e){const n=this,o=new c({state:t,blockchain:{getBlock:function(t,e){try{t=r.number(t)}catch(t){}n.getBlock(t,e)}},activatePrecompiles:e||!1,hardfork:n.options.hardfork,allowUnlimitedContractSize:n.options.allowUnlimitedContractSize});return!0===n.options.debug&&o.on(\"step\",function(t){var e=t.opcode.name,o=t.opcode.in;if(o){var i=t.stack.slice(-o).map(t=>r.hex(t)).join(\" \");n.logger.log(`${e} ${i}`)}else n.logger.log(e)}),o},v.prototype.createStateTrie=function(t,e){return new l(t,e)},v.prototype.createGenesisBlock=function(t){this.createBlock(t)},v.prototype.latestBlock=function(t){this.data.blocks.last(function(e,n){if(e)return t(e);t(null,n)})},v.prototype.getEffectiveBlockNumber=function(t,e){return\"string\"!=typeof t&&(t=r.hex(t)),t.indexOf(\"0x\")>=0?e(null,r.number(t)):\"latest\"===t||\"pending\"===t?this.getHeight(e):\"earliest\"===t?e(null,0):void 0},v.prototype.getBlock=function(t,e){var n=this;if(\"string\"!=typeof t&&(t=r.hex(t)),t.indexOf(\"0x\")>=0){var o=t;if(!(o.length>40))return this.data.blocks.get(r.number(o),e);this.data.blockHashes.get(r.hex(o),function(t,r){return t?e(t):n.data.blocks.get(r,e)})}else{if(\"latest\"===t||\"pending\"===t)return this.latestBlock(e);if(\"earliest\"===t)return this.data.blocks.first(e);process.nextTick(e,new Error('Invalid `blockNumber`: \"'+t+'\"'))}},v.prototype.putBlock=function(t,e,n,o){var i=this;t.header.stateRoot=this.stateTrie.root,this.data.blocks.length(function(s,a){if(s)return o(s);var c=[i.data.blocks.push.bind(i.data.blocks,t),i.data.blockLogs.push.bind(i.data.blockLogs,e),i.data.blockHashes.set.bind(i.data.blockHashes,r.hex(t.hash()),a)];t.transactions.forEach(function(t,e){var o=r.hex(t.hash());c.push(i.data.transactions.set.bind(i.data.transactions,o,t),i.data.transactionReceipts.set.bind(i.data.transactionReceipts,o,n[e]))}),p.parallel(c,(e,n)=>{e||i.emit(\"block\",t),o(e,n)})})},v.prototype.popBlock=function(t){var e=this;this.data.blocks.last(function(n,o){if(n)return t(n);if(null==o)return t(null,null);var i=[],s=r.hex(o.hash());o.transactions.forEach(function(t){var n=r.hex(t.hash());i.push(e.data.transactions.del.bind(e.data.transactions,n),e.data.transactionReceipts.del.bind(e.data.transactionReceipts,n))}),i.push(e.data.blockLogs.pop.bind(e.data.blockLogs),e.data.blockHashes.del.bind(e.data.blockHashes,s),e.data.blocks.pop.bind(e.data.blocks)),p.series(i,function(n){if(n)return t(n);e.data.blocks.last(function(n,r){if(n)return t(n);e.vm.stateManager.setStateRoot(r.header.stateRoot,function(n){n||(e.vm.stateManager._storageTries={}),t(n,o)})})})})},v.prototype.clearPendingTransactions=function(){this.pending_transactions=[]},v.prototype.createBlock=function(t,e){var n=this;\"function\"==typeof t&&(e=t,t=null);var o=new i;!function(e){if(t)return e(null,t);n.latestBlock(e)}(function(t,i){if(t)return e(t);var s=null!=i?r.number(i.header.number):-1;o.header.gasLimit=n.blockGasLimit,o.header.number=r.hex(s+1),o.header.timestamp=r.hex(n.currentTime()),null!=i&&(o.header.parentHash=r.hex(i.hash())),e(null,o)})},v.prototype.getQueuedNonce=function(t,e){var n=null,i=r.buffer(t);if(this.pending_transactions.forEach(function(t){if(t.from.equals(i)){var e=new k(t.nonce);(null===n||e.gt(n))&&(n=e)}}),null!=n)return e(null,n.iaddn(1).toArrayLike(Buffer));this.stateTrie.get(i,function(t,n){if(t)return e(t);var r=new o(n);e(null,0===r.nonce.length?Buffer.from([0]):r.nonce)})},v.prototype.queueTransaction=function(t){this.pending_transactions.push(t)},v.prototype.sortByPriceAndNonce=function(){var t={};this.pending_transactions.forEach(e=>{const n=e.from.toString(\"hex\"),r=t[n];r?r.push(e):t[n]=[e]});var e=function(t,e){return parseInt(r.hex(t.nonce),16)-parseInt(r.hex(e.nonce),16)};Object.keys(t).forEach(n=>{t[n].sort(e)});var n=new f(function(t,e){return parseInt(r.hex(e.gasPrice),16)-parseInt(r.hex(t.gasPrice),16)});Object.keys(t).forEach(e=>{n.push(t[e].shift())});const o=[];for(;n.size()>0;){const e=n.pop();let r=e.from.toString(\"hex\");t[r].length>0&&n.push(t[r].shift()),o.push(e)}this.pending_transactions=o},v.prototype.processCall=function(t,e,n){var r=this,o=function(t,e,o){if(e)return n(e);r.createBlock(o,function(e,i){if(e)return n(e);i.transactions.push(t);var s={tx:t,block:i,skipBalance:!0,skipNonce:!0},a=r.createStateTrie(r.data.trie_db,o.header.stateRoot);r.createVMFromStateTrie(a).runTx(s,function(r,o){if(r&&r instanceof Error==!1&&(r=new Error(\"VM error: \"+r)),r)return n(r,e);r=u.fromResults([t],{results:[o]}),n(r,o)})})};\"latest\"===e?r.latestBlock(o.bind(null,t)):r.getBlock(e,o.bind(null,t))},v.prototype.estimateGas=function(t,e,n){var r=this,o=function(t,e,o){if(e)return n(e);r.createBlock(o,function(e,i){if(e)return n(e);i.transactions.push(t);var s={tx:t,block:i,skipBalance:!0,skipNonce:!0},a=r.createStateTrie(r.data.trie_db,o.header.stateRoot),c=r.createVMFromStateTrie(a);m(c,s,e,n)})};\"latest\"===e?r.latestBlock(o.bind(null,t)):r.getBlock(e,o.bind(null,t))},v.prototype.processBlock=function(t,e,n,o){var i=this;\"function\"==typeof n&&(o=n,n=!0),t.runBlock({block:e,generate:!0,skipBlockValidation:!0},async function(t,c){if(t&&t instanceof Error==!1&&(t=new Error(\"VM error: \"+t)),t)return void o(t);t=u.fromResults(e.transactions,c);var p=[],f=[],d=0;c.results.forEach(function(t){d+=r.number(t.gasUsed)}),e.header.gasUsed=h.toBuffer(r.hex(d));const g=new l,m=new l,b=[],k=(t,e,n)=>y(t.put.bind(t))(e,n);for(var v=0;v<c.receipts.length;v++){var x=c.results[v],_=c.receipts[v],w=e.transactions[v],B=w.hash(),S=[];if(1===x.vm.exception)for(var T=0;T<_.logs.length;T++){for(var E=_.logs[T],N=r.hex(E[0]),O=[],C=0;C<E[1].length;C++)O.push(r.hex(E[1][C]));var L=r.hex(E[2]),H=new s({logIndex:r.hex(T),transactionIndex:r.hex(v),transactionHash:B,block:e,address:N,data:L,topics:O,type:\"mined\"});p.push(H),S.push(H)}let t=new a(w,e,S,x.gasUsed.toArrayLike(Buffer),_.gasUsed,x.createdAddress,_.status,r.hex(_.bitvector));f.push(t);const n=[_.status,_.gasUsed,_.bitvector,_.logs],o=h.rlp.encode(n),i=h.rlp.encode(v);b.push(k(g,i,w.serialize())),b.push(k(m,i,o))}function R(n){if(n)return o(n);o(t,e.transactions,c)}await Promise.all(b),e.header.transactionsTrie=h.toBuffer(g.root),e.header.receiptTrie=h.toBuffer(m.root),n?i.putBlock(e,p,f,R):R()})},v.prototype.processNextBlock=function(t,e){var n=this;\"function\"==typeof t&&(e=t,t=void 0),n.sortByPriceAndNonce();for(var o=[],i=0,s=r.number(n.blockGasLimit);n.pending_transactions.length>0;){var a=n.pending_transactions[0],c=r.number(a.gasLimit);if(!(i+c<=s))break;i+=c,n.pending_transactions.shift(),o.push(a)}if(0===o.length&&n.pending_transactions.length>0){return e(\"Unexpected error condition: next transaction exceeds block gas limit\")}this.createBlock(function(i,s){if(i)return e(i);t&&(n.data.blocks.last(function(o,i){if(o)return e(o);i&&r.number(i.header.timestamp)>t&&n.logger.log(\"Waring: Setting the block timestamp (\"+t+\") that is earlier than the parent block one.\")}),s.header.timestamp=r.hex(t),n.setTime(new Date(1e3*t))),Array.prototype.push.apply(s.transactions,o),n.processBlock(n.vm,s,!0,e)})},v.prototype.processTransactionTrace=async function(t,e,n){const o=this,i=r.hex(t);let s,a=\"\",c=null,u={currentDepth:-1,stack:[]},l={gas:0,returnValue:\"\",structLogs:[]};function h(t,n){const i=r.number(t.gasLeft),a=r.number(c.gasLimit)-i-l.gas;l.gas+=a;let h=null;if(!e.disableMemory&&(h=(h=Buffer.from(t.memory).toString(\"hex\")).match(/.{1,64}/g)||[]).length>0){const t=h[h.length-1];t.length<64&&(h[h.length-1]=t+new Array(64-t.length+1).join(\"0\"))}let p=null;e.disableStack||(p=t.stack.map(t=>r.rpcDataHexString(t,64).replace(\"0x\",\"\")));let f={depth:t.depth,error:\"\",gas:i,gasCost:a,memory:h,op:t.opcode.name,pc:t.pc,stack:p,storage:null};e.disableStorage?(l.structLogs.push(f),n()):f=o.processStorageTrace(f,u,t,s,function(t,e){if(t)return n(t);l.structLogs.push(e),n()})}this.getTransactionReceipt(i,function(t,e){if(t)return n(t);if(!e)return n(new Error(\"Unknown transaction \"+i));let u=e.block;o.getBlock(u.header.parentHash,function(t,e){if(t)return n(t);var p=o.createStateTrie(o.data.trie_db,e.header.stateRoot);s=o.createVMFromStateTrie(p),o.createBlock(e,function(t,e){if(t)return n(t);for(var p=0;p<u.transactions.length;p++){var f=u.transactions[p];if(e.transactions.push(f),r.hex(f.hash())===i)break}function d(t){c=t,(a=r.hex(t.hash()))===i&&s.on(\"step\",h)}function g(){a===i&&m()}function m(){s.removeListener(\"step\",h),s.removeListener(\"beforeTx\",d),s.removeListener(\"afterTx\",g)}s.on(\"beforeTx\",d),s.on(\"afterTx\",g),o.processBlock(s,e,!1,function(t){t&&0===t.message.indexOf(\"VM Exception\")&&(t=null),m(),n(t,l)})})})})},v.prototype.processStorageTrace=function(t,e,n,o,i){var s,a,c=n.opcode.name,u=n.opcode.in,l=n.stack.slice(-u).map(t=>r.hex(t));switch(e.currentDepth>n.depth&&e.stack.pop(),e.currentDepth<n.depth&&e.stack.push({}),e.currentDepth=n.depth,c){case\"SSTORE\":s=r.rpcDataHexString(l[1],64).replace(\"0x\",\"\"),a=r.rpcDataHexString(l[0],64).replace(\"0x\",\"\"),t.storage=Object.assign({},e.stack[e.currentDepth]),i(null,t),e.stack[e.currentDepth][s]=a;break;case\"SLOAD\":s=r.rpcDataHexString(l[0],64).replace(\"0x\",\"\"),o.stateManager.getContractStorage(n.address,\"0x\"+s,function(n,o){if(n)return i(n);a=r.rpcDataHexString(o,64).replace(\"0x\",\"\"),e.stack[e.currentDepth][s]=a,t.storage=Object.assign({},e.stack[e.currentDepth]),i(null,t)});break;default:t.storage=Object.assign({},e.stack[e.currentDepth]),i(null,t)}},v.prototype.getAccount=function(t,e,n){var r=this;this.getBlock(e,function(e,i){if(e)return n(e);var s=r.stateTrie,a=s.root;r.stateTrie.root=i.header.stateRoot,s.get(h.toBuffer(t),function(t,e){if(s.root=a,t)return n(t);var r=new o(e);n(null,r)})})},v.prototype.getNonce=function(t,e,n){this.getAccount(t,e,function(t,e){if(t)return n(t);n(null,e.nonce)})},v.prototype.getBalance=function(t,e,n){this.getAccount(t,e,function(t,e){if(t)return n(t);n(null,e.balance)})},v.prototype.getStorage=function(t,e,n,r){var i=this;this.getBlock(n,function(n,s){if(n)return r(n);var a=i.stateTrie,c=a.root;i.stateTrie.root=s.header.stateRoot,a.get(h.toBuffer(t),function(t,n){if(null!=t)return a.root=c,r(t);var i=new o(n);a.root=i.stateRoot,a.get(h.setLengthLeft(h.toBuffer(e),32),function(t,e){if(a.root=c,null!=t)return r(t);r(null,e)})})})},v.prototype.getCode=function(t,e,n){var r=this;this.getBlock(e,function(e,i){if(e)return n(e);var s=r.stateTrie,a=s.root;r.stateTrie.root=i.header.stateRoot,s.get(h.toBuffer(t),function(t,e){if(null!=t)return s.root=a,n(t);new o(e).getCode(s,function(t,e){if(s.root=a,t)return n(t);n(null,e)})})})},v.prototype.getTransaction=function(t,e){t=r.hex(t),this.data.transactions.get(t,function(t,n){if(t)return t.notFound?e(null,null):e(t);e(null,n)})},v.prototype.getTransactionReceipt=function(t,e){t=r.hex(t);const n=this.pending_transactions;for(var o=0;o<n.length;o++){if(t===r.hex(n[o].hash()))return e(null,{tx:n[o]})}this.data.transactionReceipts.get(t,function(t,n){if(t)return t.notFound?e(null,null):e(t);e(t,n)})},v.prototype.getBlockLogs=function(t,e){var n=this;this.getEffectiveBlockNumber(t,function(t,r){if(t)return e(t);n.data.blockLogs.get(r,e)})},v.prototype.getHeight=function(t){this.data.blocks.length(function(e,n){if(e)return t(e);t(null,n-1)})},v.prototype.currentTime=function(){return((new Date).getTime()/1e3|0)+this.timeAdjustment},v.prototype.increaseTime=function(t){return t<0&&(t=0),this.timeAdjustment+=t,this.timeAdjustment},v.prototype.setTime=function(t){var e=(new Date).getTime()/1e3|0,n=t.getTime()/1e3|0;this.timeAdjustment=n-e},v.prototype.close=function(t){this.data.close(t)},t.exports=v},function(t,e){t.exports=require(\"merkle-patricia-tree\")},function(t,e){t.exports=require(\"level-sublevel\")},function(t,e,n){var r=n(10);t.exports={encode:function(t,e){e(null,t.encode())},decode:function(t,e){const n={hash:t.hash,nonce:t.nonce,value:t.value,to:t.to,from:t.from,gasLimit:t.gas||t.gasLimit,gasPrice:t.gasPrice,data:t.data,v:t.v,r:t.r,s:t.s},o=void 0===t._type?r.types.fake:t._type;e(null,r.fromJSON(n,o))}}},function(t,e,n){function r(t){Error.captureStackTrace(this,this.constructor),this.name=this.constructor.name,this.message=t}(0,n(1).inherits)(r,Error),t.exports=r},function(t,e,n){var r=n(0);t.exports={toJSON:function(t,e){return{number:r.rpcQuantityHexString(t.header.number),hash:r.hex(t.hash()),parentHash:r.hex(t.header.parentHash),mixHash:r.hex(t.header.mixHash),nonce:r.rpcDataHexString(r.hex(t.header.nonce),16),sha3Uncles:r.hex(t.header.uncleHash),logsBloom:r.hex(t.header.bloom),transactionsRoot:r.hex(t.header.transactionsTrie),stateRoot:r.hex(t.header.stateRoot),receiptsRoot:r.hex(t.header.receiptTrie),miner:r.hex(t.header.coinbase),difficulty:r.rpcQuantityHexString(t.header.difficulty),totalDifficulty:r.rpcQuantityHexString(t.header.difficulty),extraData:r.rpcDataHexString(t.header.extraData),size:r.hex(1e3),gasLimit:r.rpcQuantityHexString(t.header.gasLimit),gasUsed:r.rpcQuantityHexString(t.header.gasUsed),timestamp:r.rpcQuantityHexString(t.header.timestamp),transactions:t.transactions.map(function(n){return e?n.toJsonRpc(t):r.hex(n.hash())}),uncles:[]}}}},function(t,e,n){n(7);const r=n(17),o=n(81);t.exports={server:function(t){return o.create(t)},provider:function(t){return new r(t)},_webpacked:!0}},function(t,e){t.exports=require(\"web3-provider-engine\")},function(t,e){t.exports=require(\"web3-provider-engine/subproviders/subscriptions\")},function(t,e,n){var r=n(4);function o(){this.methods={eth_call:!0,eth_getStorageAt:!0,eth_sendTransaction:!0,eth_sendRawTransaction:!0,eth_newBlockFilter:!0,eth_getFilterChanges:!0,eth_getFilterLogs:!0},this.queue=[],this.isWorking=!1}(0,n(1).inherits)(o,r),t.exports=o,o.prototype.handleRequest=function(t,e,n){if(!0!==t.external||!0!==this.methods[t.method])return e();this.queue.push([t,e]),!1===this.isWorking&&this.processNext()},o.prototype.processNext=function(){var t=this;0!==this.queue.length?(this.isWorking=!0,(0,this.queue.shift()[1])(function(e,n,r){if(e)return r(e);r(),t.processNext()})):this.isWorking=!1}},function(t,e,n){var r=n(4),o=n(1).inherits,i=n(2),s=n(0);function a(){this.watching={}}o(a,r),t.exports=a,a.prototype.handleRequest=function(t,e,n){return\"eth_newBlockFilter\"===t.method?this.handleNewBlockFilter(t,e,n):\"eth_getFilterChanges\"===t.method?this.handleGetFilterChanges(t,e,n):void e()},a.prototype.handleNewBlockFilter=function(t,e,n){var r=this;e(function(t,e,n){if(t)return n();r.watching[e]=!0,n()})},a.prototype.handleGetFilterChanges=function(t,e,n){var r=this,o=t.params[0];if(!this.watching[o])return e();e(function(t,e,n){if(t)return n();var a,c,u;i.series([function(t){0!==e.length?(a=e[0],t()):r.emitPayload({method:\"eth_blockNumber\"},function(e,n){if(e)return t(e);u=s.number(n.result),t()})},function(t){if(u)return t();r.emitPayload({method:\"eth_getBlockByHash\",params:[a,!1]},function(e,n){if(e)return t(e);u=s.number(n.result.number),t()})},function(t){if(0===(u=s.number(u)))return c=void 0,t();u-=1,r.emitPayload({method:\"eth_getBlockByNumber\",params:[u,!1]},function(e,n){if(e)return t(e);c=n.result.hash,t()})}],function(t){c&&(e[0]=c),delete r.watching[o],n()})})}},function(t,e,n){var r=n(4);function o(){}(0,n(1).inherits)(o,r),t.exports=o,o.prototype.handleRequest=function(t,e,n){if(\"eth_estimateGas\"!==t.method&&\"eth_call\"!==t.method)return e();var r=t.params[0];null==r.from?this.emitPayload({method:\"eth_coinbase\"},function(t,o){if(t)return n(t);var i=o.result;r.from=i,e()}):e()}},function(t,e,n){var r=n(3),o=n(1).inherits,i=n(32),s=n(0),a=n(23),c=n(24),u=n(79);const{BlockOutOfRangeError:l}=n(14);function h(t,e){var n=this;this.state=t.state||new i(t,e),this.options=t,this.initialized=!1,this.initialization_error=null,this.post_initialization_callbacks=[],this.state.initialize(function(t){t&&(n.initialization_error=t),n.initialized=!0;var e=n.post_initialization_callbacks;n.post_initialization_callbacks=[],e.forEach(function(t){setImmediate(function(){t(n.initialization_error,n.state)})})})}o(h,n(4)),h.prototype.waitForInitialization=function(t){!1===this.initialized?this.post_initialization_callbacks.push(t):t(this.initialization_error,this.state)},h.prototype.handleRequest=function(t,e,n){if(null!=this.initialization_error)return n(this.initialization_error);if(!1!==this.initialized){var r=this[t.method];if(null==r)return n(new Error(\"Method \"+t.method+\" not supported.\"));var o=t.params||[],i=[].concat(o),s=!1;if(this.requiresDefaultBlockParameter(t.method)&&i.length<r.length-1&&(i.push(\"latest\"),s=!0),i.push(n),i.length>r.length||void 0!==r.minLength&&i.length<r.minLength||void 0===r.minLength&&i.length<r.length){var a=`Incorrect number of arguments. Method '${t.method}' requires `;return r.minLength?a+=`between ${r.minLength-1} and ${r.length-1} arguments. `:a+=`exactly ${r.length-1} arguments. `,a+=s?\"Including the implicit block argument, r\":\"R\",a+=`equest specified ${i.length-1} arguments: ${JSON.stringify(i)}.`,n(new Error(a))}r.apply(this,i)}else this.waitForInitialization(this.getDelayedHandler(t,e,n))},h.prototype.getDelayedHandler=function(t,e,n){var r=this;return function(o,i){o&&n(o),r.handleRequest(t,e,n)}},h.prototype.requiresDefaultBlockParameter=function(t){return!0==={eth_getBalance:!0,eth_getCode:!0,eth_getTransactionCount:!0,eth_getStorageAt:!0,eth_call:!0,eth_estimateGas:!0}[t]},h.prototype.eth_accounts=function(t){t(null,Object.keys(this.state.accounts))},h.prototype.eth_blockNumber=function(t){this.state.blockNumber(function(e,n){if(e)return t(e);t(null,s.hex(n))})},h.prototype.eth_coinbase=function(t){t(null,this.state.coinbase)},h.prototype.eth_mining=function(t){t(null,this.state.is_mining)},h.prototype.eth_hashrate=function(t){t(null,\"0x0\")},h.prototype.eth_gasPrice=function(t){t(null,r.addHexPrefix(this.state.gasPrice()))},h.prototype.eth_getBalance=function(t,e,n){this.state.getBalance(t,e,n)},h.prototype.eth_getCode=function(t,e,n){this.state.getCode(t,e,n)},h.prototype.eth_getBlockByNumber=function(t,e,n){this.state.blockchain.getBlock(t,function(t,r){if(t)return t instanceof l?n(null,null):n(t);n(null,c.toJSON(r,e))})},h.prototype.eth_getBlockByHash=function(t,e,n){this.eth_getBlockByNumber.apply(this,arguments)},h.prototype.eth_getBlockTransactionCountByNumber=function(t,e){this.state.blockchain.getBlock(t,function(t,n){if(t)return t instanceof l?e(null,null):e(t);e(null,s.rpcQuantityHexString(n.transactions.length))})},h.prototype.eth_getBlockTransactionCountByHash=function(t,e){this.eth_getBlockTransactionCountByNumber.apply(this,arguments)},h.prototype.eth_getTransactionReceipt=function(t,e){this.state.getTransactionReceipt(t,function(t,n){if(t)return e(t);var r=null;n&&n.block&&(r=n.toJSON()),e(null,r)})},h.prototype.eth_getTransactionByHash=function(t,e){this.state.getTransactionReceipt(t,function(t,n){if(t)return e(t);var r=null;n&&(n.block?r=n.tx.toJsonRpc(n.block):(n.block={transactions:[],hash:()=>null,header:{number:null}},r=n.tx.toJsonRpc(n.block))),e(null,r)})},h.prototype.eth_getTransactionByBlockHashAndIndex=function(t,e,n){e=s.number(e),this.state.getBlock(t,function(t,r){if(t)return t.notFound?n(null,null):n(t);if(e>=r.transactions.length)return n(new Error(\"Transaction at index \"+s.hex(e)+\" does not exist in block.\"));var o=r.transactions[e].toJsonRpc(r);n(null,o)})},h.prototype.eth_getTransactionByBlockNumberAndIndex=function(t,e,n){this.eth_getTransactionByBlockHashAndIndex(t,e,n)},h.prototype.eth_getTransactionCount=function(t,e,n){this.state.getTransactionCount(t,e,(t,e)=>t instanceof l?n(null,null):n(t,e))},h.prototype.eth_sign=function(t,e,n){var r,o;try{r=this.state.sign(t,e)}catch(t){o=t}n(o,r)},h.prototype.eth_signTypedData=function(t,e,n){var r,o;try{r=this.state.signTypedData(t,e)}catch(t){o=t}n(o,r)},h.prototype.eth_sendTransaction=function(t,e){this.state.queueTransaction(\"eth_sendTransaction\",t,null,e)},h.prototype.eth_sendRawTransaction=function(t,e){let n;if(t&&(n=s.buffer(t)),void 0===n)throw new a(\"rawTx must be a string, JSON-encoded Buffer, or Buffer.\");this.state.queueRawTransaction(n,e)},h.prototype.eth_call=function(t,e,n){t.gas||(t.gas=this.state.blockchain.blockGasLimit),this.state.queueTransaction(\"eth_call\",t,e,n)},h.prototype.eth_estimateGas=function(t,e,n){t.gas||(t.gas=this.state.blockchain.blockGasLimit),this.state.queueTransaction(\"eth_estimateGas\",t,e,n)},h.prototype.eth_getStorageAt=function(t,e,n,r){this.state.queueStorage(t,e,n,r)},h.prototype.eth_newBlockFilter=function(t){var e=r.addHexPrefix(r.intToHex(this.state.latestFilterId));this.state.latestFilterId+=1,t(null,e)},h.prototype.eth_getFilterChanges=function(t,e){var n=this.state.latestBlock().hash().toString(\"hex\");this.state.mine(),e(null,[n])},h.prototype.eth_getLogs=function(t,e){this.state.getLogs(t,e)},h.prototype.eth_uninstallFilter=function(t,e){e(null,!0)},h.prototype.eth_protocolVersion=function(t){t(null,\"63\")},h.prototype.bzz_hive=function(t){t(null,[])},h.prototype.bzz_info=function(t){t(null,[])},h.prototype.shh_version=function(t){t(null,\"2\")},h.prototype.eth_getCompilers=function(t){t(null,[])},h.prototype.eth_syncing=function(t){t(null,!1)},h.prototype.net_listening=function(t){t(null,!0)},h.prototype.net_peerCount=function(t){t(null,0)},h.prototype.web3_clientVersion=function(t){t(null,\"EthereumJS TestRPC/v\"+u.version+\"/ethereum-js\")},h.prototype.web3_sha3=function(t,e){e(null,s.hex(r.sha3(t)))},h.prototype.net_version=function(t){t(null,this.state.net_version+\"\")},h.prototype.miner_start=function(t,e){e||\"function\"!=typeof t||(e=t,t=null),this.state.startMining(function(t){e(t,!0)})},h.prototype.miner_start.minLength=1,h.prototype.miner_stop=function(t){this.state.stopMining(function(e){t(e,!0)})},h.prototype.rpc_modules=function(t){t(null,{eth:\"1.0\",net:\"1.0\",rpc:\"1.0\",web3:\"1.0\",evm:\"1.0\",personal:\"1.0\"})},h.prototype.personal_listAccounts=function(t){t(null,Object.keys(this.state.personal_accounts))},h.prototype.personal_newAccount=function(t,e){var n=this.state.createAccount({generate:!0});this.state.accounts[n.address.toLowerCase()]=n,this.state.personal_accounts[n.address.toLowerCase()]=!0,this.state.account_passwords[n.address.toLowerCase()]=t,e(null,n.address)},h.prototype.personal_importRawKey=function(t,e,n){var r=this.state.createAccount({secretKey:t});this.state.accounts[r.address.toLowerCase()]=r,this.state.personal_accounts[r.address.toLowerCase()]=!0,this.state.account_passwords[r.address.toLowerCase()]=e,n(null,r.address)},h.prototype.personal_lockAccount=function(t,e){if(!0!==this.state.personal_accounts[t.toLowerCase()]){return e(\"Account not found\")}delete this.state.unlocked_accounts[t.toLowerCase()],e(null,!0)},h.prototype.personal_unlockAccount=function(t,e,n,r){if(!0!==this.state.personal_accounts[t.toLowerCase()]){return r(\"Account not found\")}var o=this.state.account_passwords[t.toLowerCase()];if(void 0!==o&&o!==e){return r(\"Invalid password\")}this.state.unlocked_accounts[t.toLowerCase()]=!0,r(null,!0)},h.prototype.personal_sendTransaction=function(t,e,n){if(null!=t.from){var o=r.addHexPrefix(t.from).toLowerCase(),i=this;i.personal_unlockAccount(o,e,null,function(e){if(e)return n(e);i.state.queueTransaction(\"eth_sendTransaction\",t,null,function(t,e){i.state.unlocked_accounts[o.toLowerCase()]=!1,n(t,e)})})}else{n(\"Sender not found\")}},h.prototype.evm_snapshot=function(t){this.state.snapshot(t)},h.prototype.evm_revert=function(t,e){this.state.revert(t,e)},h.prototype.evm_increaseTime=function(t,e){e(null,this.state.blockchain.increaseTime(t))},h.prototype.evm_setTime=function(t,e){e(null,this.state.blockchain.setTime(t))},h.prototype.evm_mine=function(t,e){\"function\"==typeof t&&(e=t,t=void 0),this.state.processBlock(t,function(t){if(t)return e(t);e(t,\"0x0\")})},h.prototype.evm_mine.minLength=1,h.prototype.debug_traceTransaction=function(t,e,n){\"function\"==typeof e&&(n=e,e=[]),this.state.queueTransactionTrace(t,e,n)},h.prototype.eth_getUncleCountByBlockHash=function(t,e){e(null,\"0x0\")},h.prototype.eth_getUncleCountByBlockNumber=function(t,e){e(null,\"0x0\")},h.prototype.eth_getUncleByBlockHashAndIndex=function(t,e,n){n(null,{})},h.prototype.eth_getUncleByBlockNumberAndIndex=function(t,e,n){n(null,{})},h.prototype.eth_getWork=function(t,e){e(null,[])},h.prototype.eth_submitWork=function(t,e,n,r){r(null,!1)},h.prototype.eth_submitHashrate=function(t,e,n){n(null,!1)},h.prototype.db_putString=function(t,e,n,r){r(null,!1)},h.prototype.db_getString=function(t,e,n){n(null,\"\")},h.prototype.db_putHex=function(t,e,n,r){r(null,!1)},h.prototype.db_getHex=function(t,e,n){n(null,\"0x00\")},h.prototype.shh_post=function(t,e,n,r,o,i,s){s(null,!1)},h.prototype.shh_newIdentity=function(t){t(null,\"0x00\")},h.prototype.shh_hasIdentity=function(t,e){e(null,!1)},h.prototype.shh_newGroup=function(t){t(null,\"0x00\")},h.prototype.shh_addToGroup=function(t,e){e(null,!1)},h.prototype.shh_newFilter=function(t,e,n){n(null,!1)},h.prototype.shh_uninstallFilter=function(t,e){e(null,!1)},h.prototype.shh_getFilterChanges=function(t,e){e(null,[])},h.prototype.shh_getMessages=function(t,e){e(null,!1)},t.exports=h},function(t,e,n){var r=n(8),o=n(9),i=n(10),s=n(3),a=n(38),c=n(39),u=n(18),l=n(45),h=n(2),p=n(19),f=n(65),d=n(16),g=n(77),m=n(6);const{BlockOutOfRangeError:b}=n(14),y=n(5),k=Buffer.from([0]);var v=n(0),x=n(78),_=n(23);function w(t,e){this.options=t=this._applyDefaultOptions(t||{}),t.fork?this.blockchain=new f(t):this.blockchain=new p(t),this.vm=this.blockchain.vm,this.stateTrie=this.blockchain.stateTrie,this.accounts={},this.secure=!!t.secure,this.account_passwords={},this.personal_accounts={},this.total_accounts=t.total_accounts,this.coinbase=null,this.latest_filter_id=1,this.action_queue=[],this.action_processing=!1,this.snapshots=[],this.logger=t.logger,this.net_version=t.network_id,this.mnemonic=t.mnemonic,this.wallet=l.fromMasterSeed(c.mnemonicToSeed(this.mnemonic)),this.wallet_hdpath=t.hdPath,this.gasPriceVal=v.rpcQuantityHexString(t.gasPrice),this.is_mining=!0,this.blockTime=t.blockTime,this.is_mining_on_interval=!!t.blockTime,this.mining_interval_timeout=null,this._provider=e}const B={total_accounts:10,gasPrice:\"0x77359400\",default_balance_ether:100,unlocked_accounts:[],hdPath:\"m/44'/60'/0'/0/\"};w.prototype._applyDefaultOptions=function(t){if(t.seed||(t.seed=x.randomAlphaNumericString(10,a())),!t.mnemonic){let e=x.randomBytes(16,a(t.seed));t.mnemonic=c.entropyToMnemonic(e.toString(\"hex\"))}return t.fork||t.network_id||(t.network_id=(new Date).getTime()),m.merge(t,B,Object.assign({},t))},w.prototype.initialize=function(t){var e=this,n=[];let r=v.hex(d.utils.toWei(e.options.default_balance_ether.toString(),\"ether\"));if(e.options.accounts)n=e.options.accounts.map(e.createAccount.bind(e));else{if(!e.total_accounts)return t(new Error(\"Cannot initialize chain: either options.accounts or options.total_accounts must be specified\"));for(var o=0;o<e.total_accounts;o++)n.push(e.createAccount({index:o,balance:r}))}e.coinbase=v.hex(n[0].address),e.accounts={},n.forEach(function(t){e.accounts[t.address]=t,e.personal_accounts[t.address.toLowerCase()]=!0}),e.unlocked_accounts=e.options.unlocked_accounts.reduce(function(t,e){if(0!==(e+\"\").indexOf(\"0x\")){let t=parseInt(e),r=n[t];if(!r)throw new Error(`Account at index ${t} not found. Max index available is ${n.length-1}.`);e=r.address.toLowerCase()}return t[e.toLowerCase()]=!0,t},{}),e.secure||n.forEach(function(t){e.unlocked_accounts[t.address.toLowerCase()]=t}),e.blockchain.initialize(n,function(n){if(n)return t(n);e.net_version||(e.net_version=e.blockchain.forkVersion),e.is_mining_on_interval&&e.mineOnInterval(),t()})},w.prototype._minerCancellationToken=null,w.prototype.mineOnInterval=function(){if(clearTimeout(this.mining_interval_timeout),null!==this._minerCancellationToken&&(this._minerCancellationToken.cancelled=!0),!this.is_mining)return void this.logger.log(\"Warning: mineOnInterval called when miner was stopped\");const t={cancelled:!1};this._minerCancellationToken=t;const e=this.mining_interval_timeout=setTimeout(this._provider.send.bind(this._provider),1e3*this.blockTime,{method:\"evm_mine\"},()=>{t.cancelled||this.mineOnInterval.bind(this)()});\"function\"==typeof e.unref&&e.unref()},w.prototype.createAccount=function(t,e){var n;if(t.generate)n=u.generate().getPrivateKey();else if(t.secretKey)n=s.toBuffer(v.hex(t.secretKey));else{var o=void 0===t.index?e:t.index;n=this.wallet.derivePath(this.wallet_hdpath+o).getWallet().getPrivateKey()}var i=s.privateToPublic(n),a=s.publicToAddress(i),c=new r;return c.balance=v.hex(t.balance),{secretKey:n,publicKey:i,address:v.hex(a).toLowerCase(),account:c}},w.prototype.blockNumber=function(t){return this.blockchain.getHeight(t)},w.prototype.gasPrice=function(){return this.gasPriceVal},w.prototype.getBalance=function(t,e,n){this.blockchain.getBalance(t,e,function(t,e){e&&(e=v.rpcQuantityHexString(e)),n(t,e)})},w.prototype.getTransactionCount=function(t,e,n){this.blockchain.getNonce(t,e,function(t,e){e&&(e=v.rpcQuantityHexString(e)),n(t,e)})},w.prototype.getCode=function(t,e,n){this.blockchain.getCode(t,e,function(t,e){e&&(e=v.hex(e)),n(t,e)})},w.prototype.queueRawTransaction=function(t,e){const n=new i(t,i.types.signed),r=v.hex(n.from).toLowerCase();this._queueTransaction(\"eth_sendRawTransaction\",n,r,null,e)},w.prototype.queueStorage=function(t,e,n,r){this.action_queue.push({method:\"eth_getStorageAt\",address:s.addHexPrefix(t),position:s.addHexPrefix(e),block:n,callback:r}),this.processNextAction()},w.prototype.queueTransaction=function(t,e,n,r){const o=e.from?v.hex(e.from).toLowerCase():null;if(null==o)return void r(new _(\"from not found; is required\"));if(e.to&&\"string\"!=typeof e.to)return r(new _(\"Invalid to address\"));const s=this.accounts.hasOwnProperty(o);if(\"eth_sendTransaction\"===t&&!this.unlocked_accounts.hasOwnProperty(o)){return r(new _(s?\"signer account is locked\":\"sender account not recognized\"))}let a,c=i.types.none;s&&\"eth_call\"!==t||(c|=i.types.fake);try{a=i.fromJSON(e,c),this._setTransactionDefaults(a)}catch(t){return void r(t)}this._queueTransaction(t,a,o,n,r)},w.prototype._setTransactionDefaults=function(t){0===t.gasLimit.length&&(t.gasLimit=s.toBuffer(this.blockchain.defaultTransactionGasLimit)),0===t.gasPrice.length&&(t.gasPrice=s.toBuffer(this.gasPriceVal)),0===t.value.length&&(t.value=Buffer.from([0])),(0===t.to.length||t.to.equals(k))&&(t.to=Buffer.allocUnsafe(0))},w.prototype._queueTransaction=function(t,e,n,r,o){if(!(e instanceof i))throw new _(\"tx must be of type Transaction\");if(v.number(e.gasLimit)>v.number(this.blockchain.blockGasLimit))return o(new _(\"Exceeds block gas limit\"));this.action_queue.push({method:t,from:n,tx:e,callback:o,blockNumber:r}),this.processNextAction()},w.prototype.queueTransactionTrace=function(t,e,n){this.action_queue.push({method:\"debug_traceTransaction\",hash:v.hex(t),params:e,callback:n}),this.processNextAction()},w.prototype.processNextAction=function(t){var e=this;if(!0===t||!0!==this.action_processing&&0!==this.action_queue.length){var n=this.action_queue.shift();this.action_processing=!0;var r=function(t,r){n.callback(t,r),e.action_queue.length>0?e.processNextAction(!0):e.action_processing=!1};if(\"function\"==typeof n.method){var o=n.method();return r(null,o)}\"eth_getStorageAt\"===n.method?this.blockchain.getStorage(n.address,n.position,n.block,function(t,e){if(t)return r(t);e&&(e=s.rlp.decode(e)),e=v.hex(e||0),r(null,e)}):\"debug_traceTransaction\"===n.method?this.blockchain.processTransactionTrace(n.hash,n.params,r):\"eth_sendTransaction\"===n.method||\"eth_sendRawTransaction\"===n.method?this.processTransaction(n.from,n.tx,r):\"eth_call\"===n.method?this.processCall(n.from,n.tx,n.blockNumber,r):\"eth_estimateGas\"===n.method&&this.processGasEstimate(n.from,n.tx,n.blockNumber,r)}},w.prototype.sign=function(t,e){var n=this.accounts[v.hex(t).toLowerCase()];if(!n)throw new Error(\"cannot sign data; no private key\");var r=n.secretKey,o=v.buffer(e,\"hex\"),i=s.hashPersonalMessage(o),a=s.ecsign(i,Buffer.from(r));return s.toRpcSig(a.v,a.r,a.s)},w.prototype.signTypedData=function(t,e){var n=this.accounts[v.hex(t).toLowerCase()];if(!n)throw new Error(\"cannot sign data; no private key\");if(!e.types)throw new Error(\"cannot sign data; types missing\");if(!e.types.EIP712Domain)throw new Error(\"cannot sign data; EIP712Domain definition missing\");if(!e.domain)throw new Error(\"cannot sign data; domain missing\");if(!e.primaryType)throw new Error(\"cannot sign data; primaryType missing\");if(!e.message)throw new Error(\"cannot sign data; message missing\");return g.signTypedData(n.secretKey,{data:e})},w.prototype.printTransactionReceipt=function(t,e,n){var r=this;r.blockchain.getTransactionReceipt(t,function(o,i){if(o)return n(o);r.blockchain.latestBlock(function(o,s){if(o)return n(o);i=i.toJSON(),r.logger.log(\"\"),r.logger.log(\"  Transaction: \"+t),null!=i.contractAddress&&r.logger.log(\"  Contract created: \"+i.contractAddress),r.logger.log(\"  Gas usage: \"+parseInt(i.gasUsed,16)),r.logger.log(\"  Block Number: \"+parseInt(i.blockNumber,16)),r.logger.log(\"  Block Time: \"+new Date(1e3*v.number(s.header.timestamp)).toString()),e&&(r.logger.log(\"  Runtime Error: \"+e.error),e.reason&&r.logger.log(\"  Revert reason: \"+e.reason)),r.logger.log(\"\"),n(null,t)})})},w.prototype.processBlock=function(t,e){var n=this;\"function\"==typeof t&&(e=t,t=null),n.blockchain.processNextBlock(t,function(t,r,i){if(t&&t instanceof o==!1)return e(t,r,i);h.eachSeries(r,function(e,r){var o=v.hex(e.hash()),i=null==t?{results:{}}:t;n.printTransactionReceipt(o,i.results[o],r)},e(t,r,i))})},w.prototype.processBlocks=function(t,e){var n=this;\"function\"==typeof t&&(e=t,t=null);var r=null,i=0;h.whilst(function(){return null==t?n.blockchain.pending_transactions.length>0:i<t},function(t){n.processBlock(function(e,n,s){if(i+=1,e){if(e instanceof o==!1)return t(e);null==r?r=e:r.combine(e)}t()})},function(t){e(t||r)})},w.prototype.processCall=function(t,e,n,r){var o=this;o.createTransactionWithCorrectNonce(e,t,function(t,e){if(t)return r(t);o.blockchain.processCall(e,n,function(t,e){if(t)return t instanceof b?r(null,null):r(t);var n=\"0x\";return!e.error&&e.vm.return?n=v.hex(e.vm.return):e.error&&o.logger.log(`Error processing call: ${e.error}`),r(null,n)})})},w.prototype.processGasEstimate=function(t,e,n,r){var o=this;o.createTransactionWithCorrectNonce(e,t,function(t,e){if(t)return r(t);o.blockchain.estimateGas(e,n,function(t,e){if(t)return r(t);var n=\"0x\";return e.error?o.logger.log(`Error calculating gas estimate: ${e.error}`):n=e.gasRefund?v.hex(e.gasEstimate.add(e.gasRefund)):v.hex(e.gasEstimate),r(null,n)})})},w.prototype.processTransaction=function(t,e,n){var r=this;r.createTransactionWithCorrectNonce(e,t,function(t,e){if(t)return n(t);r.blockchain.queueTransaction(e);var o=v.hex(e.hash());if(!1===r.is_mining||r.is_mining_on_interval)return n(null,o);r.processBlocks(function(t){if(t)return n(t);n(null,o)})})},w.prototype.getTransactionReceipt=function(t,e){this.blockchain.getTransactionReceipt(t,function(t,n){if(t&&t.notFound)return e(null,null);e(t,n)})},w.prototype.getBlock=function(t,e){this.blockchain.getBlock(t,e)},w.prototype.getLogs=function(t,e){var n=this,r=t.address&&(Array.isArray(t.address)?t.address:[t.address]);r=r&&r.map(function(t){return t.toLowerCase()});var o=t.topics||[];h.parallel({fromBlock:this.blockchain.getEffectiveBlockNumber.bind(this.blockchain,t.fromBlock||\"latest\"),toBlock:this.blockchain.getEffectiveBlockNumber.bind(this.blockchain,t.toBlock||\"latest\"),latestBlock:this.blockchain.getEffectiveBlockNumber.bind(this.blockchain,\"latest\")},function(t,i){if(t)return e(t);var s=i.fromBlock,a=i.toBlock,c=i.latestBlock;a>c&&(a=c);var u=[],l=s;h.whilst(function(){return l<=a},function(t){n.blockchain.getBlockLogs(l,function(e,n){if(e)return t(e);var i=r?n.filter(function(t){return r.indexOf(t.address.toLowerCase())>-1}):n;i=i.filter(function(t){for(var e=!0,n=0;n<o.length;n++){var r=o[n],i=t.topics[n];if(null!=r){var s=Array.isArray(r)?r.includes(i):r===i;if(n>=t.topics.length||!s){e=!1;break}}}return e}),u.push.apply(u,i),l+=1,t()})},function(t){if(t)return e(t);u=u.map(function(t){return t.toJSON()}),e(t,u)})})},w.prototype.snapshot=function(t){var e=this;this.blockchain.getHeight(function(n,r){if(n)return t(n);e.snapshots.push({blockNumber:r,timeAdjustment:e.blockchain.timeAdjustment}),e.logger.log(\"Saved snapshot #\"+e.snapshots.length),t(null,v.hex(e.snapshots.length))})},w.prototype.revert=function(t,e){var n=this;if(t=s.bufferToInt(t),this.logger.log(\"Reverting to snapshot #\"+t),t>this.snapshots.length)return e(null,!1),!1;t-=1;var r=this.snapshots[t].timeAdjustment;h.whilst(function(){return n.snapshots.length>t},function(t){var e=n.snapshots.pop();h.during(function(t){n.blockchain.getHeight(function(n,r){if(n)return t(n);t(null,r>e.blockNumber)})},function(t){n.blockchain.popBlock(function(e){if(e)return t(e);t()})},t)},function(t){if(t)return e(t);n.blockchain.clearPendingTransactions(),n.blockchain.timeAdjustment=r,e(null,!0)})},w.prototype.hasContractCode=function(t,e){this.vm.stateManager.getContractCode(t,function(t,n){null!=t?e(t,!1):e(null,!0)})},w.prototype.startMining=function(t){if(this.is_mining)return process.nextTick(t),void this.logger.log(\"Warning: startMining called when miner was already started\");this.is_mining=!0,this.is_mining_on_interval?(this.mineOnInterval(),process.nextTick(t)):this.processBlocks(t)},w.prototype.stopMining=function(t){this.is_mining?(this._minerCancellationToken&&(this._minerCancellationToken.cancelled=!0,this._minerCancellationToken=null),this.is_mining=!1,clearTimeout(this.mining_interval_timeout),this.mining_interval_timeout=null):this.logger.log(\"Warning: stopMining called when miner was already stopped\"),t&&process.nextTick(t)},w.prototype.isUnlocked=function(t){return null!=this.unlocked_accounts[t.toLowerCase()]},w.prototype.createTransactionWithCorrectNonce=function(t,e,n){this.blockchain.getQueuedNonce(e,(r,o)=>{if(r)return n(r);const i=(t,e)=>{if(t.validateNonce(e))return Promise.resolve(t);{const n=new y(e).toString(10),r=new y(t.nonce).toString(10);return Promise.reject(new _(`the tx doesn't have the correct nonce. account has nonce of: ${n} tx has nonce of: ${r}`))}},s=t=>n(null,t);if(t.isSigned())i(t,o).then(s).catch(n);else{const r=t=>{if(!t.isFake()&&!t.isSigned()){const n=this.accounts[e];n&&t.sign(n.secretKey)}return Promise.resolve(t)};0===t.nonce.length?(t.nonce=o,r(t).then(s)):i(t,o).then(r).then(s).catch(n)}})},t.exports=w},function(t,e){t.exports=require(\"ethereumjs-abi\")},function(t,e){t.exports=require(\"ethereumjs-tx\")},function(t,e){t.exports=require(\"ethereumjs-tx/fake\")},function(t,e){t.exports=require(\"assert\")},function(t,e){t.exports=require(\"rlp\")},function(t,e){t.exports=require(\"seedrandom\")},function(t,e){t.exports=require(\"bip39\")},function(t,e){t.exports=require(\"safe-buffer\")},function(t,e){t.exports=require(\"crypto\")},function(t,e){t.exports=require(\"scrypt.js\")},function(t,e){t.exports=require(\"uuid/v4\")},function(t,e){t.exports=require(\"bs58check\")},function(t,e,n){\"use strict\";var r=n(46),o=n(18);function i(){}function s(t){var e=new i;return e._hdkey=t,e}i.fromMasterSeed=function(t){return s(r.fromMasterSeed(t))},i.fromExtendedKey=function(t){return s(r.fromExtendedKey(t))},i.prototype.privateExtendedKey=function(){if(!this._hdkey.privateExtendedKey)throw new Error(\"This is a public key only wallet\");return this._hdkey.privateExtendedKey},i.prototype.publicExtendedKey=function(){return this._hdkey.publicExtendedKey},i.prototype.derivePath=function(t){return s(this._hdkey.derive(t))},i.prototype.deriveChild=function(t){return s(this._hdkey.deriveChild(t))},i.prototype.getWallet=function(){return this._hdkey._privateKey?o.fromPrivateKey(this._hdkey._privateKey):o.fromPublicKey(this._hdkey._publicKey,!0)},t.exports=i},function(t,e){t.exports=require(\"hdkey\")},function(t,e){t.exports=require(\"ethereumjs-vm\")},function(t,e){t.exports=require(\"heap\")},function(t,e,n){var r=n(50),o=n(51),i=n(52),s=n(53),a=n(54),c=n(58),u=n(22),l=n(59),h=n(60),p=n(61),f=n(62),d=n(63);function g(t){this.options=t,this.directory=null}g.prototype.initialize=function(t){var e=this;function n(n,i){if(n)return t(n);e.db=i,e.blocks=new r(\"blocks\",e.db,l),e.blockLogs=new r(\"blockLogs\",e.db,new p(e)),e.blockHashes=new o(\"blockHashes\",e.db),e.transactions=new o(\"transactions\",e.db,u),e.transactionReceipts=new o(\"transactionReceipts\",e.db,new f(e)),e.trie_db=new o(\"trie_db\",e.db,h,h),t()}!function(t){e.options.db_path?t(null,e.options.db_path):d.dir(t)}(function(r,o){if(r)return t(r);const u={valueEncoding:\"json\"};if(e.options.db){const t=e.options.db;i(t,u,n)}else{e.directory=o;const t=s(c(o,a).maxSize(100),u);i(t,{},n)}})},g.prototype.close=function(t){t()},t.exports=g},function(t,e,n){var r=n(21);const{LevelUpOutOfRangeError:o,BlockOutOfRangeError:i}=n(14);function s(t,e,n){this.db=r(e),this.db=this.db.sublevel(t),this.name=t,this.serializer=n||{encode:function(t,e){e(null,t)},decode:function(t,e){e(null,t)}}}s.prototype.length=function(t){this.db.get(\"length\",function(e,n){if(e)return e.notFound?t(null,0):t(e);t(null,n)})},s.prototype._get=function(t,e){var n=this;this.db.get(t,function(t,r){if(t)return e(t);n.serializer.decode(r,e)})},s.prototype._put=function(t,e,n){var r=this;this.serializer.encode(e,function(e,o){if(e)return n(e);r.db.put(t,o,n)})},s.prototype.get=function(t,e){var n=this;this.length(function(r,s){if(r)return e(r);if(t>=s){let r=\"blocks\"===n.name?new i(t,s):new o(n.name,t,s);return e(r)}n._get(t,e)})},s.prototype.push=function(t,e){var n=this;this.length(function(r,o){if(r)return e(r);n._put(o+\"\",t,function(t){if(t)return e(t);n.db.put(\"length\",o+1,e)})})},s.prototype.pop=function(t){var e=this;this.length(function(n,r){if(n)return t(n);var o=r-1;e._get(o+\"\",function(n,r){if(n)return t(n);e.db.del(o+\"\",function(n){if(n)return t(n);e.db.put(\"length\",o,function(e){if(e)return t(e);t(null,r)})})})})},s.prototype.last=function(t){var e=this;this.length(function(n,r){return n?t(n):0===r?t(null,null):void e._get(r-1+\"\",t)})},s.prototype.first=function(t){this._get(\"0\",t)},t.exports=s},function(t,e,n){var r=n(21),o=n(2);function i(t,e,n,o,i){this.db=r(e,i),this.db=this.db.sublevel(t),this.name=t,this.valueserializer=n||{encode:function(t,e){e(null,t)},decode:function(t,e){e(null,t)}},this.keyserializer=o||{encode:function(t,e){e(null,t)},decode:function(t,e){e(null,t)}}}i.prototype.get=function(t,e,n){var r=this;\"function\"==typeof e&&(n=e,e={}),this.keyserializer.encode(t,function(t,e){if(t)return n(t);r.db.get(e,function(t,e){if(t)return n(t);r.valueserializer.decode(e,function(t,e){if(t)return n(t);n(null,e)})})})},i.prototype.put=function(t,e,n,r){var o=this;\"function\"==typeof n&&(r=n,n={}),this.keyserializer.encode(t,function(t,n){if(t)return r(t);o.valueserializer.encode(e,function(t,e){if(t)return r(t);o.db.put(n,e,r)})})},i.prototype.set=i.prototype.put,i.prototype.del=function(t,e){var n=this;this.keyserializer.encode(t,function(t,r){if(t)return e(t);n.db.del(r,e)})},i.prototype.batch=function(t,e,n){var r=this;o.each(t,function(t,n){\"put\"===t.type?r.put(t.key,t.value,e,n):\"del\"===t.type?r.del(t.key,n):n(new Error(\"Unknown batch type\",t.type))},function(t){if(t)return n(t);n()})},i.prototype.isOpen=function(){return!0},t.exports=i},function(t,e){t.exports=require(\"levelup\")},function(t,e){t.exports=require(\"encoding-down\")},function(t,e,n){var r=n(1),o=n(55).AbstractLevelDOWN,i=n(2),s=n(56),a=n(57);function c(t){this.location=t,o.call(this,t)}r.inherits(c,o),c.prototype._open=function(t,e){e(null,this)},c.prototype._put=function(t,e,n,r){s.writeFile(a.join(this.location,t),e,\"utf8\",r)},c.prototype._get=function(t,e,n){s.readFile(a.join(this.location,t),\"utf8\",function(t,e){if(t)return n(new Error(\"NotFound\"));n(null,e)})},c.prototype._del=function(t,e,n){s.unlink(a.join(this.location,t),function(t){if(t)return t.message.indexOf(\"ENOENT\")>=0?n():n(t);n()})},c.prototype._batch=function(t,e,n){var r=this;i.each(t,function(t,n){\"put\"===t.type?r.put(t.key,t.value,e,n):\"del\"===t.type?r.del(t.key,e,n):n(new Error(\"Unknown batch type\",t.type))},function(t){if(t)return n(t);n()})},t.exports=function(t){return new c(t)}},function(t,e){t.exports=require(\"abstract-leveldown\")},function(t,e){t.exports=require(\"fs\")},function(t,e){t.exports=require(\"path\")},function(t,e){t.exports=require(\"cachedown\")},function(t,e,n){var r=n(22),o=n(2),i=n(11);t.exports={encode:function(t,e){var n=t.toJSON(!0);o.map(t.transactions,function(t,e){r.encode(t,e)},function(t,r){if(t)return e(t);n.transactions=r,e(null,n)})},decode:function(t,e){var n=t.transactions;t.transactions=[];var s=new i(t);o.eachSeries(n,function(t,e){r.decode(t,function(t,n){if(t)return e(t);s.transactions.push(n),e()})},function(t){if(t)return e(t);e(null,s)})}}},function(t,e,n){var r=n(3),o=n(0);t.exports={encode:function(t,e){e(null,o.hex(t))},decode:function(t,e){e(null,r.toBuffer(t))}}},function(t,e,n){var r=n(12),o=n(2);function i(t){this.database=t}i.prototype.encode=function(t,e){e(null,t=t.map(function(t){return t.toJSON()}))},i.prototype.decode=function(t,e){var n=this;if(0===t.length)return e(null,[]);this.database.blockHashes.get(t[0].blockHash,function(i,s){if(i)return e(i);n.database.blocks.get(s,function(n,i){if(n)return e(n);o.map(t,function(t,e){e(null,new r({block:i,logIndex:t.logIndex,transactionIndex:t.transactionIndex,transactionHash:t.transactionHash,address:t.address,data:t.data,topics:t.topics,type:t.type}))},function(t,n){if(t)return e(t);e(null,n)})})})},t.exports=i},function(t,e,n){var r=n(13),o=n(2);function i(t){this.database=t}i.prototype.encode=function(t,e){e(null,t.toJSON())},i.prototype.decode=function(t,e){var n=this,i=t.transactionHash.toLowerCase();this.database.transactions.get(t.transactionHash,function(s,a){if(s)return e(s);n.database.blockHashes.get(t.blockHash,function(s,c){if(s)return e(s);o.parallel({block:n.database.blocks.get.bind(n.database.blocks,c),logs:n.database.blockLogs.get.bind(n.database.blockLogs,c)},function(n,o){if(n)return e(n);e(null,new r(a,o.block,o.logs.filter(t=>t.transactionHash.toLowerCase()===i),t.gasUsed,t.cumulativeGasUsed,t.contractAddress,t.status,t.logsBloom))})})})},t.exports=i},function(t,e){t.exports=require(\"tmp\")},function(t,e,n){const r=n(5);t.exports=((t,e,n,i)=>{const s=o();t.on(\"step\",s.collect),t.runTx(e,function(t,o){const a=s.ops.length;if(t)return t instanceof Error==!1&&(t=new Error(\"VM error: \"+t)),i(t,n);if(s.success()&&a&&a-1!==s.lowestGasIndex()){const t=(null!=e.tx.data?Array.from(e.tx.data):[]).reduce((t,e)=>t+(0===e?4:68),21e3),n=h(0,s.ops.length-1,s.sysOpIndex())+t;o.gasEstimate=new r(n)}else{let t=o.gasUsed;if(a){const e=s.lastSVT();if(s.success()&&e>0){const n=s.ops[e].gasLeft.sub(s.ops[s.ops.length-1].gasLeft),o=new r(2300);t=t.add(new r(n.lt(o)?o.sub(n):0))}}o.gasEstimate=t}i(t,o)});const a=(t,e)=>{const n=s.lastSVT();if(n>t&&n<e){const r=s.ops[t].gasLeft-s.ops[n].gasLeft;let o;if(s.ops[n].depth){const t=s.ops[n].gasLeft-s.ops[e-1].gasLeft;o=t<2300?2300-t:t}else{const t=s.ops[n].gasLeft-s.ops[e].gasLeft;o=t<2300?2300:t}return r+o}return s.ops[t].gasLeft-s.ops[e].gasLeft},c=t=>{let e=s.ops[t].depth;const n=s.findIndex(t);let r=n,o=n;const i=s.systemOps.length;for(;o<i&&s.systemOps[o][1]>=e;)++o;for(;r&&s.systemOps[r][1]>=e;)--r;return{parentBegin:s.systemOps[r][0],parentEnd:s.systemOps[o-1][0]+1}},u=t=>parseInt(`0x${t.gasLeft.toString(\"hex\")}`),l=t=>2300===t.gasLeft,h=(t,e,n=null)=>{if(n)n=s.systemOps[n][0];else if((n=((t,e)=>{let n=1/0,r=e;for(let o=t;o<=e;o++)s.ops[o].gasLeft<=n&&(r=o,n=s.ops[o].gasLeft);return r})(t,e))===e)return a(t,e);const{rootBegin:r,rootEnd:o}=(t=>{const e=s.findIndex(t);let n=e,r=e;const o=s.systemOps.length;for(;n&&s.systemOps[n][1];)--n;for(;r<o&&s.systemOps[r][1];)++r;return{rootBegin:s.systemOps[n][0],rootEnd:s.systemOps[r-1][0]+1}})(n);let{parentBegin:i,parentEnd:p}=c(n),f=0;for(;r!==i&&o!==p;){const t=s.ops[i],e=t.opcode.fee,o=a(i,p)-e,d=o+Math.floor(o/63),g=d-o;f=d+e;const m=s.findIndex(n)+1,b=i,y=p;({parentBegin:i,parentEnd:p}=c(s.systemOps[m][0])),n=p-1,f+=u(s.ops[i+1])-u(s.ops[b]);const k=u(s.ops[p-1])-u(s.ops[p])+u(s.ops[i])-s.ops[i].opcode.fee-u(s.ops[i+1]),v=h(y,n)+k;let x=g;\"CALL\"===t.opcode.name&&l(s.ops[r+1])&&(x=2300),x<v&&(f=0)}const d=s.ops[r],g=d.opcode.fee;f||(f=a(r,o)-g);const m=f+Math.floor(f/63);let b=m+g;b+=a(t,r);const y=m-f,k=h(o,e);return\"CALL\"===d.opcode.name&&l(s.ops[r+1])?b-k:y>k?b:(b-=y)+k}});const o=()=>{const t=[],e=[],n=[],r=t=>[\"CALL\",\"DELEGATECALL\",\"STATICCALL\",\"CALLCODE\"].includes(t),o=t=>[\"STOP\",\"RETURN\",\"REVERT\",\"INVALID\",\"SELFDESTRUCT\"].includes(t),i={};let s,a=1/0,c=0,u=!1,l=0;return{collect:h=>{const p=h.gasLeft.toNumber();a>p&&(a=p,c=e.length,s=t.length),u&&(h.depth===l&&n.push(e.length),u=!1),r(h.opcode.name)?(u=!0,l=h.depth,i[e.length]=t.length,t.push([e.length,h.depth,h.opcode.name])):((t=>[\"CREATE\"].includes(t))(h.opcode.name)||o(h.opcode.name))&&(i[e.length]=t.length,t.push([e.length,h.depth,h.opcode.name])),e.push(h)},findIndex:t=>i[t],lowestGasIndex:()=>c,sysOpIndex:()=>s,lastSVT:()=>n.length?n[n.length-1]:-1,success:()=>!e.length||o(e[e.length-1].opcode.name),ops:e,systemOps:t,simpleValueTransfers:n,isTerminator:o,isCall:r}}},function(t,e,n){var r=n(19),o=n(8),i=n(11),s=n(12),a=n(13),c=n(3),u=n(66),l=n(16),h=n(0),p=n(10),f=n(2),d=n(5);function g(t){if(this.options=t||{},null==t.fork)throw new Error(\"ForkedBlockchain must be passed a fork parameter.\");if(this.fork=t.fork,this.forkBlockNumber=t.fork_block_number,this.forkVersion=null,\"string\"==typeof this.fork){if(this.fork.indexOf(\"@\")>=0){var e=this.fork.split(\"@\");this.fork=e[0],this.forkBlockNumber=parseInt(e[1])}this.fork=new l.providers.HttpProvider(this.fork)}this.time=t.time,this.storageTrieCache={},r.call(this,t),this.createVMFromStateTrie=function(){var t=r.prototype.createVMFromStateTrie.apply(this,arguments);return this.patchVM(t),t},this.web3=new l(this.fork)}(0,n(1).inherits)(g,r),g.prototype.initialize=function(t,e){var n=this;this.web3.eth.net.getId(function(o,i){if(o)return e(o);n.forkVersion=i,r.prototype.initialize.call(n,t,e)})},g.prototype.patchVM=function(t){const e=t.stateManager._trie,n=this.getLookupAccount(e);t.stateManager._cache._lookupAccount=n,t.stateManager._lookupStorageTrie=this.getLookupStorageTrie(e,n),t.stateManager.getContractCode=this.getCode.bind(this)},g.prototype.createStateTrie=function(t,e){return new u(t,e,{fork:this.fork,forkBlockNumber:this.forkBlockNumber,blockchain:this})},g.prototype.createGenesisBlock=function(t){var e=this,n=this.forkBlockNumber||\"latest\";e.web3.eth.getBlock(n,function(r,o){if(r)return t(r);!e.time&&e.forkBlockNumber&&(e.time=e.options.time=new Date(1e3*h.number(o.timestamp)),e.setTime(e.time)),n=h.hex(o.number),e.forkBlockNumber=e.options.fork_block_number=n,e.stateTrie.forkBlockNumber=e.stateTrie.options.forkBlockNumber=n,e.createBlock(function(e,n){if(e)return t(e);n.header.number=c.toBuffer(h.number(o.number)+1),n.header.parentHash=c.toBuffer(o.hash),t(null,n)})})},g.prototype.getLookupStorageTrie=function(t,e){return e=e||this.getLookupAccount(t),(n,r)=>{const o=t.copy();o.address=n,e(n,(t,e)=>{if(t)return r(t);o.root=e.stateRoot,r(null,o)})}},g.prototype.isFallbackBlock=function(t,e){var n=this;n.getEffectiveBlockNumber(t,function(t,r){if(t)return e(t);e(null,r<=h.number(n.forkBlockNumber))})},g.prototype.isBlockHash=function(t){return\"string\"==typeof t&&0===t.indexOf(\"0x\")&&t.length>42||Buffer.isBuffer(t)&&t.byteLength>20},g.prototype.isFallbackBlockHash=function(t,e){if(!this.isBlockHash(t))return e(null,!1);Buffer.isBuffer(t)&&(t=h.hex(t)),this.data.blockHashes.get(t,function(t,n){if(t)return t.notFound?e(null,!0):e(t);e(null,!1)})},g.prototype.getFallbackBlock=function(t,e){this.web3.eth.getBlock(t,!0,function(t,n){if(t)return e(t);if(null==n)return e();var r=new i;r.header.parentHash=c.toBuffer(n.parentHash),r.header.uncleHash=c.toBuffer(n.sha3Uncles),r.header.coinbase=c.toBuffer(n.miner),r.header.stateRoot=c.toBuffer(n.stateRoot),r.header.transactionsTrie=c.toBuffer(n.transactionsRoot),r.header.receiptTrie=c.toBuffer(n.receiptsRoot),r.header.bloom=c.toBuffer(n.logsBloom),r.header.difficulty=c.toBuffer(\"0x\"+n.totalDifficulty.toString(16)),r.header.number=c.toBuffer(n.number),r.header.gasLimit=c.toBuffer(n.gasLimit),r.header.gasUsed=c.toBuffer(n.gasUsed),r.header.timestamp=c.toBuffer(n.timestamp),r.header.extraData=c.toBuffer(n.extraData),(n.transactions||[]).forEach(function(t,e){r.transactions.push(p.fromJSON(t,p.types.real))}),r.hash=function(){return c.toBuffer(n.hash)},e(null,r)})},g.prototype.getBlock=function(t,e){let n;const o=this.isBlockHash(t);(n=o?this.isFallbackBlockHash:this.isFallbackBlock).call(this,t,(n,i)=>{if(n)return e(n);if(i)return this.getFallbackBlock(t,e);const s=r.prototype.getBlock.bind(this);o?s(t,e):this.getRelativeBlockNumber(t,(t,n)=>{if(t)return e(t);s(n,e)})})},g.prototype.getStorage=function(t,e,n,r){this.getLookupStorageTrie(this.stateTrie)(t,(t,o)=>{if(t)return r(t);this.getEffectiveBlockNumber(n,(t,n)=>{if(t)return r(t);o.get(e,n,r)})})},g.prototype.getCode=function(t,e,n){var o=this;\"function\"==typeof e&&(n=e,e=\"latest\"),e||(e=\"latest\"),this.getEffectiveBlockNumber(e,function(i,s){if(i)return n(i);e=s,o.stateTrie.keyExists(t,function(i,s){if(i)return n(i);s&&e>h.number(o.forkBlockNumber)?r.prototype.getCode.call(o,t,e,n):(e>h.number(o.forkBlockNumber)&&(e=\"latest\"),o.fetchCodeFromFallback(t,e,function(t,e){e&&(e=c.toBuffer(e)),n(t,e)}))})})},g.prototype.getLookupAccount=function(t){return(e,n)=>{t.keyExists(e,(r,i)=>{if(r)return n(r);i?t.get(e,(t,e)=>{if(t)return n(t);const r=new o(e);n(null,r)}):this.fetchAccountFromFallback(e,h.number(this.forkBlockNumber),n)})}},g.prototype.getAccount=function(t,e,n){var o=this;\"function\"==typeof e&&(n=e,e=\"latest\"),this.getEffectiveBlockNumber(e,function(i,s){if(i)return n(i);e=s,o.stateTrie.keyExists(t,function(i,s){if(i)return n(i);s&&e>h.number(o.forkBlockNumber)?r.prototype.getAccount.call(o,t,e,function(t,e){if(t)return n(t);n(null,e)}):o.fetchAccountFromFallback(t,e,n)})})},g.prototype.getTransaction=function(t,e){var n=this;r.prototype.getTransaction.call(this,t,function(r,o){return r?e(r):null!=o?e(null,o):void n.web3.eth.getTransaction(t,function(t,n){if(t)return e(t);n&&(n=p.fromJSON(n,p.types.signed)),e(null,n)})})},g.prototype.getTransactionReceipt=function(t,e){var n=this;r.prototype.getTransactionReceipt.call(this,t,function(r,o){return r?e(r):o?e(null,o):void n.web3.eth.getTransactionReceipt(t,function(r,o){return r?e(r):o?void f.parallel({tx:n.getTransaction.bind(n,t),block:n.getBlock.bind(n,o.blockNumber)},function(t,n){if(t)return e(t);var r=o.logs.map(function(t){return new s(t)}),i=new a(n.tx,n.block,r,o.gasUsed,o.cumulativeGasUsed,o.contractAddress,o.status,h.hex(o.logsBloom));e(null,i)}):e()})})},g.prototype.fetchAccountFromFallback=function(t,e,n){var r=this;t=h.hex(t),f.parallel({code:this.fetchCodeFromFallback.bind(this,t,e),balance:this.fetchBalanceFromFallback.bind(this,t,e),nonce:this.fetchNonceFromFallback.bind(this,t,e)},function(t,e){if(t)return n(t);var i=e.code,s=e.balance,a=e.nonce,u=new o({nonce:a,balance:s});u.setCode(r.stateTrie,c.toBuffer(i),function(t){if(t)return n(t);n(null,u)})})},g.prototype.fetchCodeFromFallback=function(t,e,n){var r=this;t=h.hex(t),\"function\"==typeof e&&(n=e,e=this.forkBlockNumber),this.getSafeFallbackBlockNumber(e,function(e,o){if(e)return n(e);r.web3.eth.getCode(t,o,function(t,e){if(t)return n(t);e=\"0x\"+c.toBuffer(e).toString(\"hex\"),n(null,e)})})},g.prototype.fetchBalanceFromFallback=function(t,e,n){var r=this;t=h.hex(t),\"function\"==typeof e&&(n=e,e=this.forkBlockNumber),this.getSafeFallbackBlockNumber(e,function(e,o){if(e)return n(e);r.web3.eth.getBalance(t,o,function(t,e){if(t)return n(t);e=\"0x\"+new d(e).toString(16),n(null,e)})})},g.prototype.fetchNonceFromFallback=function(t,e,n){var r=this;t=h.hex(t),\"function\"==typeof e&&(n=e,e=this.forkBlockNumber),this.getSafeFallbackBlockNumber(e,function(e,o){if(e)return n(e);r.web3.eth.getTransactionCount(t,o,function(t,e){if(t)return n(t);e=\"0x\"+r.web3.utils.toBN(e).toString(16),n(null,e)})})},g.prototype.getHeight=function(t){this.latestBlock(function(e,n){if(e)return t(e);t(null,h.number(n.header.number))})},g.prototype.getRelativeBlockNumber=function(t,e){var n=this;this.getEffectiveBlockNumber(t,function(t,r){if(t)return e(t);e(null,r-h.number(n.forkBlockNumber)-1)})},g.prototype.getSafeFallbackBlockNumber=function(t,e){var n=h.number(this.forkBlockNumber);if(null==t)return e(null,n);this.getEffectiveBlockNumber(t,function(t,r){if(t)return e(t);r>n&&(r=n),e(null,r)})},g.prototype.getBlockLogs=function(t,e){var n=this;this.getEffectiveBlockNumber(t,function(o,i){if(o)return e(o);n.getRelativeBlockNumber(i,function(o,i){if(o)return e(o);i<0?n.getBlock(t,function(r,o){if(r)return e(r);n.web3.currentProvider.send({jsonrpc:\"2.0\",method:\"eth_getLogs\",params:[{fromBlock:h.hex(t),toBlock:h.hex(t)}],id:(new Date).getTime()},function(t,n){if(t)return e(t);var r=n.result.map(function(t){return t.block=o,new s(t)});e(null,r)})}):r.prototype.getBlockLogs.call(n,i,e)})})},t.exports=g},function(t,e,n){const r=n(20),o=n(67),i=n(68);var s=n(3),a=n(1).inherits,c=n(16),u=n(0);function l(t,e,n){o.call(this,t,e),this.options=n,this.address=n.address,this.forkBlockNumber=n.forkBlockNumber,this.blockchain=n.blockchain,this.fork=n.fork,this.web3=new c(this.fork)}function h(t,e,n){l.call(this,t,e,n),i(this)}a(l,o),l.prototype.get=function(t,e,n){var o=this;\"function\"==typeof e&&(n=e,e=o.forkBlockNumber),e=u.rpcQuantityHexString(e),t=s.toBuffer(t),this.keyExists(t,function(i,a){if(i)return n(i);a?r.prototype.get.call(o,t,function(t,e){n(t,e)}):null==o.address?o.blockchain.fetchAccountFromFallback(t,e,function(t,e){if(t)return n(t);n(null,e.serialize())}):(u.number(e)>u.number(o.forkBlockNumber)&&(e=o.forkBlockNumber),o.web3.eth.getStorageAt(u.hex(o.address),u.hex(t),e,function(t,e){if(t)return n(t);e=s.rlp.encode(e),n(null,e)}))})},l.prototype.keyExists=function(t,e){t=s.toBuffer(t),this.findPath(t,function(t,n,r,o){const i=n&&0===r.length;e(t,i)})},l.prototype.copy=function(){return new l(this.db,this.root,this.options)},a(h,l),h.prove=r.prove,h.verifyProof=r.verifyProof,t.exports=h},function(t,e){t.exports=require(\"merkle-patricia-tree/baseTrie\")},function(t,e){t.exports=require(\"merkle-patricia-tree/checkpoint-interface\")},function(t){t.exports={name:\"web3\",namespace:\"ethereum\",version:\"1.0.0-beta.35\",description:\"Ethereum JavaScript API\",repository:\"https://github.com/ethereum/web3.js/tree/master/packages/web3\",license:\"LGPL-3.0\",main:\"src/index.js\",types:\"index.d.ts\",bugs:{url:\"https://github.com/ethereum/web3.js/issues\"},keywords:[\"Ethereum\",\"JavaScript\",\"API\"],author:\"ethereum.org\",authors:[{name:\"Fabian Vogelsteller\",email:\"fabian@ethereum.org\",homepage:\"http://frozeman.de\"},{name:\"Marek Kotewicz\",email:\"marek@parity.io\",url:\"https://github.com/debris\"},{name:\"Marian Oancea\",url:\"https://github.com/cubedro\"},{name:\"Gav Wood\",email:\"g@parity.io\",homepage:\"http://gavwood.com\"},{name:\"Jeffery Wilcke\",email:\"jeffrey.wilcke@ethereum.org\",url:\"https://github.com/obscuren\"}],dependencies:{\"web3-bzz\":\"1.0.0-beta.35\",\"web3-core\":\"1.0.0-beta.35\",\"web3-eth\":\"1.0.0-beta.35\",\"web3-eth-personal\":\"1.0.0-beta.35\",\"web3-net\":\"1.0.0-beta.35\",\"web3-shh\":\"1.0.0-beta.35\",\"web3-utils\":\"1.0.0-beta.35\"}}},function(t,e){t.exports=require(\"web3-core\")},function(t,e){t.exports=require(\"web3-eth\")},function(t,e){t.exports=require(\"web3-net\")},function(t,e){t.exports=require(\"web3-eth-personal\")},function(t,e){t.exports=require(\"web3-shh\")},function(t,e){t.exports=require(\"web3-bzz\")},function(t,e){t.exports=require(\"web3-utils\")},function(t,e){t.exports=require(\"eth-sig-util\")},function(t,e){t.exports={randomBytes:function(t,e){for(var n=[],r=0;r<t;r++)n.push(255*e());return Buffer.from(n)},randomAlphaNumericString:function(t,e){const n=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";let r=\"\";for(var o=0;o<t;o++)r+=n.charAt(Math.floor((e||Math.random)()*n.length));return r}}},function(t){t.exports={name:\"ganache-core\",version:\"2.5.5\",main:\"./index.js\",engines:{node:\">=8.9.0\"},directories:{lib:\"./lib\"},scripts:{_mocha:\"mocha --check-leaks --recursive --globals _scratch --opts ./test/.mocharc\",nyc_mocha:\"nyc mocha --check-leaks --recursive --globals _scratch --opts ./test/.mocharc\",_lint:\"eslint --ignore-path .gitignore .\",build:\"webpack-cli --config ./webpack/node/core.webpack.config.js\",\"build-web\":\"webpack-cli --config ./webpack/web-experimental/core.webpack.config.js\",format:'prettier --write \"{lib,perf,test}/**/*.js\" && eslint --fix --ignore-path .gitignore .',prepublishOnly:\"npm run test && npm run build && npm run test-build && cp npm-shrinkwrap.json npm-shrinkwrap.json.bak && npm prune --only=prod\",postpublish:\"rm npm-shrinkwrap.json && mv npm-shrinkwrap.json.bak npm-shrinkwrap.json && npm ci\",test:\"npm run nyc_mocha\",\"test-build\":\"cross-env TEST_BUILD=node npm run _mocha\",\"test-web-experimental\":\"cross-env TEST_BUILD=web-experimental npm run _mocha\",coverage:\"nyc report --reporter=text-lcov | coveralls\"},dependencies:{\"abstract-leveldown\":\"3.0.0\",async:\"2.6.1\",bip39:\"2.5.0\",\"bn.js\":\"4.11.8\",cachedown:\"1.0.0\",clone:\"2.1.2\",debug:\"3.1.0\",\"encoding-down\":\"5.0.4\",\"eth-sig-util\":\"2.1.2\",\"ethereumjs-abi\":\"0.6.5\",\"ethereumjs-account\":\"2.0.5\",\"ethereumjs-block\":\"2.1.0\",\"ethereumjs-tx\":\"1.3.7\",\"ethereumjs-util\":\"5.2.0\",\"ethereumjs-vm\":\"2.6.0\",heap:\"0.2.6\",\"level-sublevel\":\"6.6.4\",levelup:\"3.1.1\",lodash:\"4.17.11\",\"merkle-patricia-tree\":\"2.3.1\",rlp:\"2.1.0\",seedrandom:\"2.4.4\",\"source-map-support\":\"0.5.9\",tmp:\"0.0.33\",\"web3-provider-engine\":\"14.1.0\",websocket:\"1.0.26\"},devDependencies:{\"assert-match\":\"^1.1.1\",browserfs:\"1.4.3\",coveralls:\"^3.0.2\",\"cross-env\":\"5.2.0\",eslint:\"5.7.0\",\"eslint-config-standard\":\"12.0.0\",\"eslint-plugin-import\":\"2.14.0\",\"eslint-plugin-node\":\"7.0.1\",\"eslint-plugin-promise\":\"4.0.1\",\"eslint-plugin-standard\":\"4.0.0\",\"ethereumjs-wallet\":\"0.6.2\",ethers:\"4.0.26\",husky:\"^1.1.3\",\"lint-staged\":\"^8.0.4\",memdown:\"^1.3.1\",mocha:\"5.2.0\",\"mocha-lcov-reporter\":\"^1.3.0\",\"number-to-bn\":\"1.7.0\",nyc:\"13.3.0\",pify:\"4.0.0\",portfinder:\"^1.0.18\",prettier:\"^1.14.3\",request:\"^2.88.0\",semver:\"5.6.0\",solc:\"0.4.24\",temp:\"0.8.3\",web3:\"1.0.0-beta.35\",webpack:\"4.17.1\",\"webpack-bundle-size-analyzer\":\"2.7.0\",\"webpack-cli\":\"3.1.0\"},optionalDependencies:{\"ethereumjs-wallet\":\"0.6.2\",web3:\"1.0.0-beta.35\"},repository:{type:\"git\",url:\"https://github.com/trufflesuite/ganache-core\"},license:\"MIT\",husky:{hooks:{\"pre-commit\":\"lint-staged\"}},\"lint-staged\":{\"*.js\":[\"prettier --write\",\"eslint --fix --ignore-path .gitignore\",\"git add\"]},eslintConfig:{root:!0,env:{node:!0,es6:!0},parserOptions:{ecmaVersion:8,sourceType:\"module\",ecmaFeatures:{impliedStrict:!0}},extends:\"standard\",rules:{\"brace-style\":[\"error\",\"1tbs\",{allowSingleLine:!1}],curly:[\"error\",\"all\"],\"max-len\":[\"error\",120,{ignoreRegExpLiterals:!0}],quotes:[\"error\",\"double\"],semi:[\"error\",\"always\"],\"space-before-function-paren\":[\"error\",\"never\"],\"wrap-iife\":[\"error\",\"outside\"]}},prettier:{printWidth:120,arrowParens:\"always\"}}},function(t,e,n){const r=n(15);var o=n(24);function i(t){if(t=t||{},r.apply(this),!t.blockchain)throw new Error(\"RpcBlockTracker - no blockchain specified.\");if(!t.blockchain.on)throw new Error(\"RpcBlockTracker - blockchain is not an EventEmitter.\");this._blockchain=t.blockchain,this.start=this.start.bind(this),this.stop=this.stop.bind(this),this.getTrackingBlock=this.getTrackingBlock.bind(this),this.awaitCurrentBlock=this.awaitCurrentBlock.bind(this),this._setCurrentBlock=this._setCurrentBlock.bind(this)}i.prototype=Object.create(r.prototype),i.prototype.constructor=i,i.prototype.getTrackingBlock=function(){return this._currentBlock},i.prototype.getCurrentBlock=function(){return this._currentBlock},i.prototype.awaitCurrentBlock=function(){const t=this;return this._currentBlock?this._currentBlock:new Promise(t=>this.once(\"block\",t)).then(()=>t._currentBlock)},i.prototype.start=function(t={}){return this._blockchain.on(\"block\",this._setCurrentBlock),Promise.resolve()},i.prototype.stop=function(){this._isRunning=!1,this._blockchain.removeListener(\"block\",this._setCurrentBlock)},i.prototype._setCurrentBlock=function(t){let e=o.toJSON(t,!0);if(this._currentBlock&&this._currentBlock.hash===e.hash)return;const n=this._currentBlock;this._currentBlock=e,this.emit(\"latest\",e),this.emit(\"sync\",{block:e,oldBlock:n}),this.emit(\"block\",e)},t.exports=i},function(t,e,n){n(7);var r=n(17),o=n(82),i=n(84),s=n(6);t.exports={create:function(t){var e=(t=c(t||{})).logger,n=new r(t),s=i(n,e);s.keepAliveTimeout=t.keepAliveTimeout;let a=0;const u={};s.on(\"connection\",t=>{let e=a++;u[e]=t,t.on(\"close\",()=>delete u[e])});var l=s.listen;s.listen=function(){var t=Array.prototype.slice.call(arguments),e=function(){};t.length>0&&(\"function\"==typeof t[t.length-1]&&(e=t.pop()));t.push(function(t){if(t)return e(t);s.provider.manager.waitForInitialization(e)}),l.apply(s,t)},s.provider=n,t.ws&&o(s,n,e);var h=s.close;return s.close=function(t){var e=Array.prototype.slice.call(arguments);h.apply(s,e),s.provider.close(function(e){if(e)return t(e);Object.keys(u).forEach(t=>{try{u[t].destroy()}catch(t){}})})},s}};const a={logger:{log:function(){}},ws:!0,keepAliveTimeout:5e3};var c=function(t){return s.merge({},a,t)}},function(t,e,n){var r=n(83),o=r.server;function i(t,e){const n=this;n.provider=t,n.logger=e,n.connectionsBySubscriptionId={},n.connections={},n.connectionCounter=0,n._updateSubscriptions=n._updateSubscriptions.bind(n),n.manageConnection=n.manageConnection.bind(n),n._logPayload=n._logPayload.bind(n),n._handleRequest=n._handleRequest.bind(n),t.on(\"data\",function(t,e){t||n._updateSubscriptions(e)})}t.exports=function(t,e,n){var r=new i(e,n),s=new o({httpServer:t,autoAcceptConnections:!0});return s.on(\"connect\",r.manageConnection),s},i.prototype.manageConnection=function(t){const e=this;t.id=++e.connectionCounter,e.connections[t.id]={connection:t,subscriptions:{}},t.on(\"message\",function(n){let o;try{if(\"utf8\"===n.type)o=JSON.parse(n.utf8Data);else{if(\"binary\"!==n.type)throw new Error(\"Invalid message type\");o=JSON.parse(n.binaryData.toString(\"utf8\").trim())}}catch(e){return void t.close(r.connection.CLOSE_REASON_UNPROCESSABLE_INPUT,e.message)}e._logPayload(o),e._handleRequest(t,o)}),t.on(\"close\",function(){Object.keys(e.connections[t.id].subscriptions).forEach(t=>{e.provider.send({jsonrpc:\"2.0\",method:\"eth_unsubscribe\",params:[t],id:(new Date).getTime()},function(n,r){n||delete e.connectionsBySubscriptionId[t]})}),delete e.connections[t.id]})},i.prototype._handleRequest=function(t,e){const n=this;switch(e.method){case\"eth_subscribe\":n.provider.send(e,function(e,r){!e&&r.result&&n.connections[t.id]&&(n.connections[t.id].subscriptions[r.result]=!0,n.connectionsBySubscriptionId[r.result]=n.connections[t.id]),t.send(JSON.stringify(r))});break;case\"eth_unsubscribe\":n.provider.send(e,function(r,o){r||o.error?t&&t.send&&t.send(JSON.stringify(o)):(n.connections[t.id]&&delete n.connections[t.id].subscriptions[e.params[0]],delete n.connectionsBySubscriptionId[e.params[0]],t.send(JSON.stringify(o)))});break;default:n.provider.send(e,function(e,n){t.send(JSON.stringify(n))})}},i.prototype._logPayload=function(t){const e=this;if(t instanceof Array)for(var n=0;n<t.length;n++){var r=t[n];e.logger.log(r.method)}else e.logger.log(t.method)},i.prototype._updateSubscriptions=function(t){const e=this.connectionsBySubscriptionId[t.params.subscription];e&&e.connection.send(JSON.stringify(t))}},function(t,e){t.exports=require(\"websocket\")},function(t,e,n){const r=n(85),{rpcError:o}=n(0);function i(t,e,n,r){t.writeHead(e,n),t.end(r)}t.exports=function(t,e){var n=r.createServer(function(n,r){var s=n.method,a=[];n.on(\"data\",function(t){a.push(t)}).on(\"end\",function(){a=Buffer.concat(a).toString();const c=function(t,e){const n={};return e.hasOwnProperty(\"origin\")&&(\"OPTIONS\"===t&&(n[\"Access-Control-Allow-Methods\"]=\"POST\",e.hasOwnProperty(\"access-control-request-headers\")&&(n[\"Access-Control-Allow-Headers\"]=e[\"access-control-request-headers\"]),n[\"Content-Length\"]=0,n[\"Access-Control-Max-Age\"]=600),n[\"Access-Control-Allow-Credentials\"]=!0,n[\"Access-Control-Allow-Origin\"]=e.origin),n}(s,n.headers);switch(s){case\"POST\":var u;try{u=JSON.parse(a)}catch(t){return c[\"Content-Type\"]=\"text/plain\",void i(r,400,c,\"400 Bad Request\")}if(u instanceof Array)for(var l=0;l<u.length;l++){var h=u[l];e.log(h.method)}else e.log(u.method);if(\"eth_subscribe\"===u.method||\"eth_unsubscribe\"===u.method){c[\"Content-Type\"]=\"application/json\",i(r,400,c,o(u.id,-32e3,\"notifications not supported\"));break}t.send(u,function(t,e){c[\"Content-Type\"]=\"application/json\",i(r,200,c,JSON.stringify(e))});break;case\"OPTIONS\":i(r,204,c);break;default:c[\"Content-Type\"]=\"text/plain\",i(r,400,c,\"400 Bad Request\")}})});return n.ganacheProvider=t,n}},function(t,e){t.exports=require(\"http\")}])});","extractedComments":[]}
var cov_n9lzmp7ij=function(){var path="/Users/Tyler/ganache-fork/ganache-core/lib/utils/forkedstoragetrie.js";var hash="3fc687715662b8516e31a466b0994386782357f1";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/Tyler/ganache-fork/ganache-core/lib/utils/forkedstoragetrie.js",statementMap:{"0":{start:{line:1,column:27},end:{line:1,column:58}},"1":{start:{line:2,column:17},end:{line:2,column:57}},"2":{start:{line:3,column:28},end:{line:3,column:80}},"3":{start:{line:4,column:12},end:{line:4,column:38}},"4":{start:{line:5,column:15},end:{line:5,column:39}},"5":{start:{line:6,column:11},end:{line:6,column:26}},"6":{start:{line:7,column:9},end:{line:7,column:27}},"7":{start:{line:9,column:0},end:{line:9,column:42}},"8":{start:{line:12,column:2},end:{line:12,column:32}},"9":{start:{line:14,column:2},end:{line:14,column:25}},"10":{start:{line:15,column:2},end:{line:15,column:33}},"11":{start:{line:16,column:2},end:{line:16,column:49}},"12":{start:{line:17,column:2},end:{line:17,column:39}},"13":{start:{line:18,column:2},end:{line:18,column:27}},"14":{start:{line:19,column:2},end:{line:19,column:34}},"15":{start:{line:23,column:0},end:{line:76,column:2}},"16":{start:{line:24,column:13},end:{line:24,column:17}},"17":{start:{line:27,column:2},end:{line:30,column:3}},"18":{start:{line:28,column:4},end:{line:28,column:27}},"19":{start:{line:29,column:4},end:{line:29,column:39}},"20":{start:{line:33,column:2},end:{line:33,column:53}},"21":{start:{line:35,column:2},end:{line:35,column:28}},"22":{start:{line:38,column:2},end:{line:75,column:5}},"23":{start:{line:39,column:4},end:{line:41,column:5}},"24":{start:{line:40,column:6},end:{line:40,column:27}},"25":{start:{line:43,column:4},end:{line:74,column:5}},"26":{start:{line:47,column:6},end:{line:49,column:9}},"27":{start:{line:48,column:8},end:{line:48,column:25}},"28":{start:{line:52,column:6},end:{line:73,column:7}},"29":{start:{line:53,column:8},end:{line:59,column:11}},"30":{start:{line:54,column:10},end:{line:56,column:11}},"31":{start:{line:55,column:12},end:{line:55,column:33}},"32":{start:{line:58,column:10},end:{line:58,column:46}},"33":{start:{line:61,column:8},end:{line:63,column:9}},"34":{start:{line:62,column:10},end:{line:62,column:45}},"35":{start:{line:64,column:8},end:{line:72,column:11}},"36":{start:{line:65,column:10},end:{line:67,column:11}},"37":{start:{line:66,column:12},end:{line:66,column:33}},"38":{start:{line:69,column:10},end:{line:69,column:42}},"39":{start:{line:71,column:10},end:{line:71,column:32}},"40":{start:{line:78,column:0},end:{line:85,column:2}},"41":{start:{line:79,column:2},end:{line:79,column:28}},"42":{start:{line:81,column:2},end:{line:84,column:5}},"43":{start:{line:82,column:19},end:{line:82,column:49}},"44":{start:{line:83,column:4},end:{line:83,column:26}},"45":{start:{line:87,column:0},end:{line:89,column:2}},"46":{start:{line:88,column:2},end:{line:88,column:69}},"47":{start:{line:91,column:0},end:{line:91,column:51}},"48":{start:{line:94,column:2},end:{line:94,column:54}},"49":{start:{line:95,column:2},end:{line:95,column:28}},"50":{start:{line:98,column:0},end:{line:98,column:51}},"51":{start:{line:99,column:0},end:{line:99,column:63}},"52":{start:{line:101,column:0},end:{line:101,column:35}}},fnMap:{"0":{name:"ForkedStorageBaseTrie",decl:{start:{line:11,column:9},end:{line:11,column:30}},loc:{start:{line:11,column:50},end:{line:20,column:1}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:23,column:38},end:{line:23,column:39}},loc:{start:{line:23,column:75},end:{line:76,column:1}},line:23},"2":{name:"(anonymous_2)",decl:{start:{line:38,column:22},end:{line:38,column:23}},loc:{start:{line:38,column:44},end:{line:75,column:3}},line:38},"3":{name:"(anonymous_3)",decl:{start:{line:47,column:55},end:{line:47,column:56}},loc:{start:{line:47,column:72},end:{line:49,column:7}},line:47},"4":{name:"(anonymous_4)",decl:{start:{line:53,column:67},end:{line:53,column:68}},loc:{start:{line:53,column:90},end:{line:59,column:9}},line:53},"5":{name:"(anonymous_5)",decl:{start:{line:64,column:83},end:{line:64,column:84}},loc:{start:{line:64,column:104},end:{line:72,column:9}},line:64},"6":{name:"(anonymous_6)",decl:{start:{line:78,column:44},end:{line:78,column:45}},loc:{start:{line:78,column:68},end:{line:85,column:1}},line:78},"7":{name:"(anonymous_7)",decl:{start:{line:81,column:21},end:{line:81,column:22}},loc:{start:{line:81,column:59},end:{line:84,column:3}},line:81},"8":{name:"(anonymous_8)",decl:{start:{line:87,column:39},end:{line:87,column:40}},loc:{start:{line:87,column:50},end:{line:89,column:1}},line:87},"9":{name:"ForkedStorageTrie",decl:{start:{line:93,column:9},end:{line:93,column:26}},loc:{start:{line:93,column:46},end:{line:96,column:1}},line:93}},branchMap:{"0":{loc:{start:{line:27,column:2},end:{line:30,column:3}},type:"if",locations:[{start:{line:27,column:2},end:{line:30,column:3}},{start:{line:27,column:2},end:{line:30,column:3}}],line:27},"1":{loc:{start:{line:39,column:4},end:{line:41,column:5}},type:"if",locations:[{start:{line:39,column:4},end:{line:41,column:5}},{start:{line:39,column:4},end:{line:41,column:5}}],line:39},"2":{loc:{start:{line:43,column:4},end:{line:74,column:5}},type:"if",locations:[{start:{line:43,column:4},end:{line:74,column:5}},{start:{line:43,column:4},end:{line:74,column:5}}],line:43},"3":{loc:{start:{line:52,column:6},end:{line:73,column:7}},type:"if",locations:[{start:{line:52,column:6},end:{line:73,column:7}},{start:{line:52,column:6},end:{line:73,column:7}}],line:52},"4":{loc:{start:{line:54,column:10},end:{line:56,column:11}},type:"if",locations:[{start:{line:54,column:10},end:{line:56,column:11}},{start:{line:54,column:10},end:{line:56,column:11}}],line:54},"5":{loc:{start:{line:61,column:8},end:{line:63,column:9}},type:"if",locations:[{start:{line:61,column:8},end:{line:63,column:9}},{start:{line:61,column:8},end:{line:63,column:9}}],line:61},"6":{loc:{start:{line:65,column:10},end:{line:67,column:11}},type:"if",locations:[{start:{line:65,column:10},end:{line:67,column:11}},{start:{line:65,column:10},end:{line:67,column:11}}],line:65},"7":{loc:{start:{line:82,column:19},end:{line:82,column:49}},type:"binary-expr",locations:[{start:{line:82,column:19},end:{line:82,column:23}},{start:{line:82,column:27},end:{line:82,column:49}}],line:82}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"3fc687715662b8516e31a466b0994386782357f1"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const MerklePatriciaTree=(cov_n9lzmp7ij.s[0]++,require("merkle-patricia-tree"));const BaseTrie=(cov_n9lzmp7ij.s[1]++,require("merkle-patricia-tree/baseTrie"));const checkpointInterface=(cov_n9lzmp7ij.s[2]++,require("merkle-patricia-tree/checkpoint-interface"));var utils=(cov_n9lzmp7ij.s[3]++,require("ethereumjs-util"));var inherits=(cov_n9lzmp7ij.s[4]++,require("util").inherits);var Web3=(cov_n9lzmp7ij.s[5]++,require("web3"));var to=(cov_n9lzmp7ij.s[6]++,require("./to.js"));cov_n9lzmp7ij.s[7]++;inherits(ForkedStorageBaseTrie,BaseTrie);function ForkedStorageBaseTrie(db,root,options){cov_n9lzmp7ij.f[0]++;cov_n9lzmp7ij.s[8]++;BaseTrie.call(this,db,root);cov_n9lzmp7ij.s[9]++;this.options=options;cov_n9lzmp7ij.s[10]++;this.address=options.address;cov_n9lzmp7ij.s[11]++;this.forkBlockNumber=options.forkBlockNumber;cov_n9lzmp7ij.s[12]++;this.blockchain=options.blockchain;cov_n9lzmp7ij.s[13]++;this.fork=options.fork;cov_n9lzmp7ij.s[14]++;this.web3=new Web3(this.fork);}// Note: This overrides a standard method whereas the other methods do not.
cov_n9lzmp7ij.s[15]++;ForkedStorageBaseTrie.prototype.get=function(key,blockNumber,callback){cov_n9lzmp7ij.f[1]++;var self=(cov_n9lzmp7ij.s[16]++,this);// Allow an optional blockNumber
cov_n9lzmp7ij.s[17]++;if(typeof blockNumber==="function"){cov_n9lzmp7ij.b[0][0]++;cov_n9lzmp7ij.s[18]++;callback=blockNumber;cov_n9lzmp7ij.s[19]++;blockNumber=self.forkBlockNumber;}else{cov_n9lzmp7ij.b[0][1]++;}// For geth; https://github.com/ethereumjs/ethereumjs-util/issues/79
cov_n9lzmp7ij.s[20]++;blockNumber=to.rpcQuantityHexString(blockNumber);cov_n9lzmp7ij.s[21]++;key=utils.toBuffer(key);// If the account doesn't exist in our state trie, get it off the wire.
cov_n9lzmp7ij.s[22]++;this.keyExists(key,function(err,exists){cov_n9lzmp7ij.f[2]++;cov_n9lzmp7ij.s[23]++;if(err){cov_n9lzmp7ij.b[1][0]++;cov_n9lzmp7ij.s[24]++;return callback(err);}else{cov_n9lzmp7ij.b[1][1]++;}cov_n9lzmp7ij.s[25]++;if(exists){cov_n9lzmp7ij.b[2][0]++;cov_n9lzmp7ij.s[26]++;// TODO: just because we have the key doesn't mean we're at the right
// block number/root to send it. We need to check the block number
// before using the data in our own trie.
MerklePatriciaTree.prototype.get.call(self,key,function(err,r){cov_n9lzmp7ij.f[3]++;cov_n9lzmp7ij.s[27]++;callback(err,r);});}else{cov_n9lzmp7ij.b[2][1]++;cov_n9lzmp7ij.s[28]++;// If this is the main trie, get the whole account.
if(self.address==null){cov_n9lzmp7ij.b[3][0]++;cov_n9lzmp7ij.s[29]++;self.blockchain.fetchAccountFromFallback(key,blockNumber,function(err,account){cov_n9lzmp7ij.f[4]++;cov_n9lzmp7ij.s[30]++;if(err){cov_n9lzmp7ij.b[4][0]++;cov_n9lzmp7ij.s[31]++;return callback(err);}else{cov_n9lzmp7ij.b[4][1]++;}cov_n9lzmp7ij.s[32]++;callback(null,account.serialize());});}else{cov_n9lzmp7ij.b[3][1]++;cov_n9lzmp7ij.s[33]++;if(to.number(blockNumber)>to.number(self.forkBlockNumber)){cov_n9lzmp7ij.b[5][0]++;cov_n9lzmp7ij.s[34]++;blockNumber=self.forkBlockNumber;}else{cov_n9lzmp7ij.b[5][1]++;}cov_n9lzmp7ij.s[35]++;self.web3.eth.getStorageAt(to.hex(self.address),to.hex(key),blockNumber,function(err,value){cov_n9lzmp7ij.f[5]++;cov_n9lzmp7ij.s[36]++;if(err){cov_n9lzmp7ij.b[6][0]++;cov_n9lzmp7ij.s[37]++;return callback(err);}else{cov_n9lzmp7ij.b[6][1]++;}cov_n9lzmp7ij.s[38]++;value=utils.rlp.encode(value);cov_n9lzmp7ij.s[39]++;callback(null,value);});}}});};cov_n9lzmp7ij.s[40]++;ForkedStorageBaseTrie.prototype.keyExists=function(key,callback){cov_n9lzmp7ij.f[6]++;cov_n9lzmp7ij.s[41]++;key=utils.toBuffer(key);cov_n9lzmp7ij.s[42]++;this.findPath(key,function(err,node,remainder,stack){cov_n9lzmp7ij.f[7]++;const exists=(cov_n9lzmp7ij.s[43]++,(cov_n9lzmp7ij.b[7][0]++,node)&&(cov_n9lzmp7ij.b[7][1]++,remainder.length===0));cov_n9lzmp7ij.s[44]++;callback(err,exists);});};cov_n9lzmp7ij.s[45]++;ForkedStorageBaseTrie.prototype.copy=function(){cov_n9lzmp7ij.f[8]++;cov_n9lzmp7ij.s[46]++;return new ForkedStorageBaseTrie(this.db,this.root,this.options);};cov_n9lzmp7ij.s[47]++;inherits(ForkedStorageTrie,ForkedStorageBaseTrie);function ForkedStorageTrie(db,root,options){cov_n9lzmp7ij.f[9]++;cov_n9lzmp7ij.s[48]++;ForkedStorageBaseTrie.call(this,db,root,options);cov_n9lzmp7ij.s[49]++;checkpointInterface(this);}cov_n9lzmp7ij.s[50]++;ForkedStorageTrie.prove=MerklePatriciaTree.prove;cov_n9lzmp7ij.s[51]++;ForkedStorageTrie.verifyProof=MerklePatriciaTree.verifyProof;cov_n9lzmp7ij.s[52]++;module.exports=ForkedStorageTrie;
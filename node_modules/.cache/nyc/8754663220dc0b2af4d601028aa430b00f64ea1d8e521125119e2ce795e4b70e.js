var cov_h9fg0jhsx=function(){var path="/Users/Tyler/ganache-fork/ganache-core/lib/subproviders/delayedblockfilter.js";var hash="fe30762f85074fc83e652ffbaa235080355cec08";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/Tyler/ganache-fork/ganache-core/lib/subproviders/delayedblockfilter.js",statementMap:{"0":{start:{line:10,column:18},end:{line:10,column:77}},"1":{start:{line:11,column:15},end:{line:11,column:39}},"2":{start:{line:12,column:12},end:{line:12,column:28}},"3":{start:{line:13,column:9},end:{line:13,column:31}},"4":{start:{line:15,column:0},end:{line:15,column:42}},"5":{start:{line:17,column:0},end:{line:17,column:36}},"6":{start:{line:20,column:2},end:{line:20,column:21}},"7":{start:{line:23,column:0},end:{line:32,column:2}},"8":{start:{line:24,column:2},end:{line:26,column:3}},"9":{start:{line:25,column:4},end:{line:25,column:57}},"10":{start:{line:27,column:2},end:{line:29,column:3}},"11":{start:{line:28,column:4},end:{line:28,column:59}},"12":{start:{line:31,column:2},end:{line:31,column:9}},"13":{start:{line:34,column:0},end:{line:45,column:2}},"14":{start:{line:35,column:13},end:{line:35,column:17}},"15":{start:{line:38,column:2},end:{line:44,column:5}},"16":{start:{line:39,column:4},end:{line:41,column:5}},"17":{start:{line:40,column:6},end:{line:40,column:18}},"18":{start:{line:42,column:4},end:{line:42,column:33}},"19":{start:{line:43,column:4},end:{line:43,column:9}},"20":{start:{line:47,column:0},end:{line:153,column:2}},"21":{start:{line:48,column:13},end:{line:48,column:17}},"22":{start:{line:49,column:17},end:{line:49,column:34}},"23":{start:{line:51,column:2},end:{line:53,column:3}},"24":{start:{line:52,column:4},end:{line:52,column:18}},"25":{start:{line:56,column:2},end:{line:152,column:5}},"26":{start:{line:57,column:4},end:{line:59,column:5}},"27":{start:{line:58,column:6},end:{line:58,column:18}},"28":{start:{line:65,column:4},end:{line:151,column:6}},"29":{start:{line:69,column:10},end:{line:86,column:11}},"30":{start:{line:70,column:12},end:{line:70,column:41}},"31":{start:{line:71,column:12},end:{line:71,column:16}},"32":{start:{line:74,column:12},end:{line:85,column:14}},"33":{start:{line:79,column:16},end:{line:81,column:17}},"34":{start:{line:80,column:18},end:{line:80,column:32}},"35":{start:{line:82,column:16},end:{line:82,column:52}},"36":{start:{line:83,column:16},end:{line:83,column:20}},"37":{start:{line:91,column:10},end:{line:93,column:11}},"38":{start:{line:92,column:12},end:{line:92,column:23}},"39":{start:{line:96,column:10},end:{line:108,column:12}},"40":{start:{line:102,column:14},end:{line:104,column:15}},"41":{start:{line:103,column:16},end:{line:103,column:30}},"42":{start:{line:105,column:14},end:{line:105,column:57}},"43":{start:{line:106,column:14},end:{line:106,column:18}},"44":{start:{line:112,column:10},end:{line:112,column:47}},"45":{start:{line:113,column:10},end:{line:116,column:11}},"46":{start:{line:114,column:12},end:{line:114,column:42}},"47":{start:{line:115,column:12},end:{line:115,column:23}},"48":{start:{line:120,column:10},end:{line:120,column:40}},"49":{start:{line:121,column:10},end:{line:133,column:12}},"50":{start:{line:127,column:14},end:{line:129,column:15}},"51":{start:{line:128,column:16},end:{line:128,column:30}},"52":{start:{line:130,column:14},end:{line:130,column:50}},"53":{start:{line:131,column:14},end:{line:131,column:18}},"54":{start:{line:137,column:8},end:{line:140,column:9}},"55":{start:{line:144,column:8},end:{line:146,column:9}},"56":{start:{line:145,column:10},end:{line:145,column:40}},"57":{start:{line:148,column:8},end:{line:148,column:39}},"58":{start:{line:149,column:8},end:{line:149,column:13}}},fnMap:{"0":{name:"DelayedBlockFilter",decl:{start:{line:19,column:9},end:{line:19,column:27}},loc:{start:{line:19,column:30},end:{line:21,column:1}},line:19},"1":{name:"(anonymous_1)",decl:{start:{line:23,column:45},end:{line:23,column:46}},loc:{start:{line:23,column:74},end:{line:32,column:1}},line:23},"2":{name:"(anonymous_2)",decl:{start:{line:34,column:52},end:{line:34,column:53}},loc:{start:{line:34,column:81},end:{line:45,column:1}},line:34},"3":{name:"(anonymous_3)",decl:{start:{line:38,column:7},end:{line:38,column:8}},loc:{start:{line:38,column:33},end:{line:44,column:3}},line:38},"4":{name:"(anonymous_4)",decl:{start:{line:47,column:54},end:{line:47,column:55}},loc:{start:{line:47,column:83},end:{line:153,column:1}},line:47},"5":{name:"(anonymous_5)",decl:{start:{line:56,column:7},end:{line:56,column:8}},loc:{start:{line:56,column:33},end:{line:152,column:3}},line:56},"6":{name:"(anonymous_6)",decl:{start:{line:67,column:8},end:{line:67,column:9}},loc:{start:{line:67,column:20},end:{line:87,column:9}},line:67},"7":{name:"(anonymous_7)",decl:{start:{line:78,column:14},end:{line:78,column:15}},loc:{start:{line:78,column:33},end:{line:84,column:15}},line:78},"8":{name:"(anonymous_8)",decl:{start:{line:88,column:8},end:{line:88,column:9}},loc:{start:{line:88,column:20},end:{line:109,column:9}},line:88},"9":{name:"(anonymous_9)",decl:{start:{line:101,column:12},end:{line:101,column:13}},loc:{start:{line:101,column:31},end:{line:107,column:13}},line:101},"10":{name:"(anonymous_10)",decl:{start:{line:110,column:8},end:{line:110,column:9}},loc:{start:{line:110,column:20},end:{line:134,column:9}},line:110},"11":{name:"(anonymous_11)",decl:{start:{line:126,column:12},end:{line:126,column:13}},loc:{start:{line:126,column:31},end:{line:132,column:13}},line:126},"12":{name:"(anonymous_12)",decl:{start:{line:136,column:6},end:{line:136,column:7}},loc:{start:{line:136,column:20},end:{line:150,column:7}},line:136}},branchMap:{"0":{loc:{start:{line:24,column:2},end:{line:26,column:3}},type:"if",locations:[{start:{line:24,column:2},end:{line:26,column:3}},{start:{line:24,column:2},end:{line:26,column:3}}],line:24},"1":{loc:{start:{line:27,column:2},end:{line:29,column:3}},type:"if",locations:[{start:{line:27,column:2},end:{line:29,column:3}},{start:{line:27,column:2},end:{line:29,column:3}}],line:27},"2":{loc:{start:{line:39,column:4},end:{line:41,column:5}},type:"if",locations:[{start:{line:39,column:4},end:{line:41,column:5}},{start:{line:39,column:4},end:{line:41,column:5}}],line:39},"3":{loc:{start:{line:51,column:2},end:{line:53,column:3}},type:"if",locations:[{start:{line:51,column:2},end:{line:53,column:3}},{start:{line:51,column:2},end:{line:53,column:3}}],line:51},"4":{loc:{start:{line:57,column:4},end:{line:59,column:5}},type:"if",locations:[{start:{line:57,column:4},end:{line:59,column:5}},{start:{line:57,column:4},end:{line:59,column:5}}],line:57},"5":{loc:{start:{line:69,column:10},end:{line:86,column:11}},type:"if",locations:[{start:{line:69,column:10},end:{line:86,column:11}},{start:{line:69,column:10},end:{line:86,column:11}}],line:69},"6":{loc:{start:{line:79,column:16},end:{line:81,column:17}},type:"if",locations:[{start:{line:79,column:16},end:{line:81,column:17}},{start:{line:79,column:16},end:{line:81,column:17}}],line:79},"7":{loc:{start:{line:91,column:10},end:{line:93,column:11}},type:"if",locations:[{start:{line:91,column:10},end:{line:93,column:11}},{start:{line:91,column:10},end:{line:93,column:11}}],line:91},"8":{loc:{start:{line:102,column:14},end:{line:104,column:15}},type:"if",locations:[{start:{line:102,column:14},end:{line:104,column:15}},{start:{line:102,column:14},end:{line:104,column:15}}],line:102},"9":{loc:{start:{line:113,column:10},end:{line:116,column:11}},type:"if",locations:[{start:{line:113,column:10},end:{line:116,column:11}},{start:{line:113,column:10},end:{line:116,column:11}}],line:113},"10":{loc:{start:{line:127,column:14},end:{line:129,column:15}},type:"if",locations:[{start:{line:127,column:14},end:{line:129,column:15}},{start:{line:127,column:14},end:{line:129,column:15}}],line:127},"11":{loc:{start:{line:137,column:8},end:{line:140,column:9}},type:"if",locations:[{start:{line:137,column:8},end:{line:140,column:9}},{start:{line:137,column:8},end:{line:140,column:9}}],line:137},"12":{loc:{start:{line:144,column:8},end:{line:146,column:9}},type:"if",locations:[{start:{line:144,column:8},end:{line:146,column:9}},{start:{line:144,column:8},end:{line:146,column:9}}],line:144}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"fe30762f85074fc83e652ffbaa235080355cec08"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();// It's unforutnate we have to have this subprovider, but it's because
// we instamine, and web3 isn't written in a way that supports instamining
// (i.e., it sets up the filter after the transaction has been processed).
// This block filter will ensure that each block filter will always see
// the change from the last block to the current block.
//
// Note: An added benefit of this is that it shaves off a signifcant
// amount of time from tests that use web3 and block filters.
var Subprovider=(cov_h9fg0jhsx.s[0]++,require("web3-provider-engine/subproviders/subprovider.js"));var inherits=(cov_h9fg0jhsx.s[1]++,require("util").inherits);var async=(cov_h9fg0jhsx.s[2]++,require("async"));var to=(cov_h9fg0jhsx.s[3]++,require("../utils/to"));cov_h9fg0jhsx.s[4]++;inherits(DelayedBlockFilter,Subprovider);cov_h9fg0jhsx.s[5]++;module.exports=DelayedBlockFilter;function DelayedBlockFilter(){cov_h9fg0jhsx.f[0]++;cov_h9fg0jhsx.s[6]++;this.watching={};}cov_h9fg0jhsx.s[7]++;DelayedBlockFilter.prototype.handleRequest=function(payload,next,end){cov_h9fg0jhsx.f[1]++;cov_h9fg0jhsx.s[8]++;if(payload.method==="eth_newBlockFilter"){cov_h9fg0jhsx.b[0][0]++;cov_h9fg0jhsx.s[9]++;return this.handleNewBlockFilter(payload,next,end);}else{cov_h9fg0jhsx.b[0][1]++;}cov_h9fg0jhsx.s[10]++;if(payload.method==="eth_getFilterChanges"){cov_h9fg0jhsx.b[1][0]++;cov_h9fg0jhsx.s[11]++;return this.handleGetFilterChanges(payload,next,end);}else{cov_h9fg0jhsx.b[1][1]++;}cov_h9fg0jhsx.s[12]++;next();};cov_h9fg0jhsx.s[13]++;DelayedBlockFilter.prototype.handleNewBlockFilter=function(payload,next,end){cov_h9fg0jhsx.f[2]++;var self=(cov_h9fg0jhsx.s[14]++,this);// Let this filter process and add it to our watch list.
cov_h9fg0jhsx.s[15]++;next(function(err,result,cb){cov_h9fg0jhsx.f[3]++;cov_h9fg0jhsx.s[16]++;if(err){cov_h9fg0jhsx.b[2][0]++;cov_h9fg0jhsx.s[17]++;return cb();}else{cov_h9fg0jhsx.b[2][1]++;}cov_h9fg0jhsx.s[18]++;self.watching[result]=true;cov_h9fg0jhsx.s[19]++;cb();});};cov_h9fg0jhsx.s[20]++;DelayedBlockFilter.prototype.handleGetFilterChanges=function(payload,next,end){cov_h9fg0jhsx.f[4]++;var self=(cov_h9fg0jhsx.s[21]++,this);var filterId=(cov_h9fg0jhsx.s[22]++,payload.params[0]);cov_h9fg0jhsx.s[23]++;if(!this.watching[filterId]){cov_h9fg0jhsx.b[3][0]++;cov_h9fg0jhsx.s[24]++;return next();}else{cov_h9fg0jhsx.b[3][1]++;}// Get the changes, and then alter the result.
cov_h9fg0jhsx.s[25]++;next(function(err,result,cb){cov_h9fg0jhsx.f[5]++;cov_h9fg0jhsx.s[26]++;if(err){cov_h9fg0jhsx.b[4][0]++;cov_h9fg0jhsx.s[27]++;return cb();}else{cov_h9fg0jhsx.b[4][1]++;}var currentBlockHash;var previousBlockHash;var blockNumber;cov_h9fg0jhsx.s[28]++;async.series([function(c){cov_h9fg0jhsx.f[6]++;cov_h9fg0jhsx.s[29]++;// If we have a result, use it.
if(result.length!==0){cov_h9fg0jhsx.b[5][0]++;cov_h9fg0jhsx.s[30]++;currentBlockHash=result[0];cov_h9fg0jhsx.s[31]++;c();}else{cov_h9fg0jhsx.b[5][1]++;cov_h9fg0jhsx.s[32]++;// Otherwise, get the current block number.
self.emitPayload({method:"eth_blockNumber"},function(err,res){cov_h9fg0jhsx.f[7]++;cov_h9fg0jhsx.s[33]++;if(err){cov_h9fg0jhsx.b[6][0]++;cov_h9fg0jhsx.s[34]++;return c(err);}else{cov_h9fg0jhsx.b[6][1]++;}cov_h9fg0jhsx.s[35]++;blockNumber=to.number(res.result);cov_h9fg0jhsx.s[36]++;c();});}},function(c){cov_h9fg0jhsx.f[8]++;cov_h9fg0jhsx.s[37]++;// If we got a block number above, meaning, we didn't get a block hash,
// skip this step.
if(blockNumber){cov_h9fg0jhsx.b[7][0]++;cov_h9fg0jhsx.s[38]++;return c();}else{cov_h9fg0jhsx.b[7][1]++;}// If not skipped, then we got a block hash, and we need to get a block number from it.
cov_h9fg0jhsx.s[39]++;self.emitPayload({method:"eth_getBlockByHash",params:[currentBlockHash,false]},function(err,res){cov_h9fg0jhsx.f[9]++;cov_h9fg0jhsx.s[40]++;if(err){cov_h9fg0jhsx.b[8][0]++;cov_h9fg0jhsx.s[41]++;return c(err);}else{cov_h9fg0jhsx.b[8][1]++;}cov_h9fg0jhsx.s[42]++;blockNumber=to.number(res.result.number);cov_h9fg0jhsx.s[43]++;c();});},function(c){cov_h9fg0jhsx.f[10]++;cov_h9fg0jhsx.s[44]++;// If we're at block 0, return no changes. See final function below.
blockNumber=to.number(blockNumber);cov_h9fg0jhsx.s[45]++;if(blockNumber===0){cov_h9fg0jhsx.b[9][0]++;cov_h9fg0jhsx.s[46]++;previousBlockHash=undefined;cov_h9fg0jhsx.s[47]++;return c();}else{cov_h9fg0jhsx.b[9][1]++;}// If at this point, we do have a block number, so let's subtract one
// from it and get the block hash of the block before it.
cov_h9fg0jhsx.s[48]++;blockNumber=blockNumber-1;cov_h9fg0jhsx.s[49]++;self.emitPayload({method:"eth_getBlockByNumber",params:[blockNumber,false]},function(err,res){cov_h9fg0jhsx.f[11]++;cov_h9fg0jhsx.s[50]++;if(err){cov_h9fg0jhsx.b[10][0]++;cov_h9fg0jhsx.s[51]++;return c(err);}else{cov_h9fg0jhsx.b[10][1]++;}cov_h9fg0jhsx.s[52]++;previousBlockHash=res.result.hash;cov_h9fg0jhsx.s[53]++;c();});}],function(err){cov_h9fg0jhsx.f[12]++;cov_h9fg0jhsx.s[54]++;if(err){cov_h9fg0jhsx.b[11][0]++;}// Unfortunately the subprovider code doesn't let us return an error
// through the callback cb(). So we'll just ignore it.... (famous last words).
// If we got the previous block, use it. Otherwise do nothing.
// Then stop watching because we only want on getFilterChanges to react this way.
else{cov_h9fg0jhsx.b[11][1]++;}cov_h9fg0jhsx.s[55]++;if(previousBlockHash){cov_h9fg0jhsx.b[12][0]++;cov_h9fg0jhsx.s[56]++;result[0]=previousBlockHash;}else{cov_h9fg0jhsx.b[12][1]++;}cov_h9fg0jhsx.s[57]++;delete self.watching[filterId];cov_h9fg0jhsx.s[58]++;cb();});});};
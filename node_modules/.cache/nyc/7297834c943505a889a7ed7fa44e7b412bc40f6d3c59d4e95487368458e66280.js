var cov_15qmb2w5au=function(){var path="/Users/Tyler/ganache-fork/ganache-core/lib/utils/gasEstimation.js";var hash="fd69d4b4c56d01a05bc74b11d163a7193bc71db2";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/Tyler/ganache-fork/ganache-core/lib/utils/gasEstimation.js",statementMap:{"0":{start:{line:1,column:11},end:{line:1,column:27}},"1":{start:{line:7,column:0},end:{line:235,column:2}},"2":{start:{line:8,column:16},end:{line:8,column:29}},"3":{start:{line:10,column:2},end:{line:10,column:31}},"4":{start:{line:12,column:2},end:{line:47,column:5}},"5":{start:{line:13,column:22},end:{line:13,column:38}},"6":{start:{line:14,column:4},end:{line:44,column:5}},"7":{start:{line:16,column:6},end:{line:18,column:7}},"8":{start:{line:17,column:8},end:{line:17,column:48}},"9":{start:{line:19,column:6},end:{line:19,column:34}},"10":{start:{line:20,column:11},end:{line:44,column:5}},"11":{start:{line:21,column:21},end:{line:21,column:35}},"12":{start:{line:22,column:6},end:{line:29,column:7}},"13":{start:{line:23,column:24},end:{line:23,column:39}},"14":{start:{line:24,column:8},end:{line:28,column:9}},"15":{start:{line:25,column:27},end:{line:25,column:98}},"16":{start:{line:26,column:26},end:{line:26,column:38}},"17":{start:{line:27,column:10},end:{line:27,column:92}},"18":{start:{line:30,column:6},end:{line:30,column:36}},"19":{start:{line:32,column:19},end:{line:32,column:77}},"20":{start:{line:40,column:25},end:{line:40,column:87}},"21":{start:{line:40,column:52},end:{line:40,column:79}},"22":{start:{line:42,column:20},end:{line:42,column:86}},"23":{start:{line:43,column:6},end:{line:43,column:41}},"24":{start:{line:46,column:4},end:{line:46,column:28}},"25":{start:{line:55,column:19},end:{line:70,column:3}},"26":{start:{line:56,column:20},end:{line:56,column:35}},"27":{start:{line:57,column:4},end:{line:68,column:5}},"28":{start:{line:58,column:18},end:{line:58,column:71}},"29":{start:{line:60,column:6},end:{line:66,column:7}},"30":{start:{line:61,column:21},end:{line:61,column:76}},"31":{start:{line:62,column:8},end:{line:62,column:50}},"32":{start:{line:64,column:21},end:{line:64,column:72}},"33":{start:{line:65,column:8},end:{line:65,column:43}},"34":{start:{line:67,column:6},end:{line:67,column:26}},"35":{start:{line:69,column:4},end:{line:69,column:61}},"36":{start:{line:76,column:24},end:{line:91,column:3}},"37":{start:{line:77,column:18},end:{line:77,column:42}},"38":{start:{line:78,column:16},end:{line:78,column:21}},"39":{start:{line:79,column:14},end:{line:79,column:19}},"40":{start:{line:80,column:19},end:{line:80,column:41}},"41":{start:{line:81,column:4},end:{line:83,column:5}},"42":{start:{line:82,column:6},end:{line:82,column:14}},"43":{start:{line:84,column:4},end:{line:86,column:5}},"44":{start:{line:85,column:6},end:{line:85,column:12}},"45":{start:{line:87,column:4},end:{line:90,column:6}},"46":{start:{line:97,column:26},end:{line:113,column:3}},"47":{start:{line:98,column:16},end:{line:98,column:40}},"48":{start:{line:99,column:18},end:{line:99,column:42}},"49":{start:{line:100,column:16},end:{line:100,column:21}},"50":{start:{line:101,column:14},end:{line:101,column:19}},"51":{start:{line:102,column:19},end:{line:102,column:41}},"52":{start:{line:103,column:4},end:{line:105,column:5}},"53":{start:{line:104,column:6},end:{line:104,column:12}},"54":{start:{line:106,column:4},end:{line:108,column:5}},"55":{start:{line:107,column:6},end:{line:107,column:14}},"56":{start:{line:109,column:4},end:{line:112,column:6}},"57":{start:{line:120,column:26},end:{line:131,column:3}},"58":{start:{line:121,column:20},end:{line:121,column:28}},"59":{start:{line:122,column:22},end:{line:122,column:26}},"60":{start:{line:123,column:4},end:{line:129,column:5}},"61":{start:{line:123,column:17},end:{line:123,column:22}},"62":{start:{line:124,column:6},end:{line:128,column:7}},"63":{start:{line:126,column:8},end:{line:126,column:24}},"64":{start:{line:127,column:8},end:{line:127,column:41}},"65":{start:{line:130,column:4},end:{line:130,column:23}},"66":{start:{line:133,column:14},end:{line:133,column:65}},"67":{start:{line:133,column:22},end:{line:133,column:65}},"68":{start:{line:134,column:20},end:{line:134,column:47}},"69":{start:{line:134,column:28},end:{line:134,column:47}},"70":{start:{line:142,column:19},end:{line:234,column:3}},"71":{start:{line:143,column:4},end:{line:153,column:5}},"72":{start:{line:144,column:6},end:{line:144,column:52}},"73":{start:{line:147,column:6},end:{line:147,column:49}},"74":{start:{line:148,column:6},end:{line:152,column:7}},"75":{start:{line:151,column:8},end:{line:151,column:37}},"76":{start:{line:155,column:35},end:{line:155,column:61}},"77":{start:{line:156,column:37},end:{line:156,column:65}},"78":{start:{line:157,column:22},end:{line:157,column:23}},"79":{start:{line:158,column:4},end:{line:201,column:5}},"80":{start:{line:161,column:27},end:{line:161,column:49}},"81":{start:{line:164,column:25},end:{line:164,column:48}},"82":{start:{line:165,column:32},end:{line:165,column:77}},"83":{start:{line:168,column:31},end:{line:168,column:85}},"84":{start:{line:169,column:30},end:{line:169,column:66}},"85":{start:{line:171,column:6},end:{line:171,column:50}},"86":{start:{line:172,column:19},end:{line:172,column:51}},"87":{start:{line:174,column:30},end:{line:174,column:41}},"88":{start:{line:175,column:28},end:{line:175,column:37}},"89":{start:{line:177,column:6},end:{line:177,column:79}},"90":{start:{line:178,column:6},end:{line:178,column:34}},"91":{start:{line:181,column:6},end:{line:181,column:87}},"92":{start:{line:186,column:8},end:{line:190,column:39}},"93":{start:{line:192,column:24},end:{line:192,column:81}},"94":{start:{line:194,column:17},end:{line:194,column:32}},"95":{start:{line:195,column:6},end:{line:197,column:7}},"96":{start:{line:196,column:8},end:{line:196,column:20}},"97":{start:{line:198,column:6},end:{line:200,column:7}},"98":{start:{line:199,column:8},end:{line:199,column:24}},"99":{start:{line:204,column:25},end:{line:204,column:45}},"100":{start:{line:207,column:23},end:{line:207,column:46}},"101":{start:{line:209,column:4},end:{line:211,column:5}},"102":{start:{line:210,column:6},end:{line:210,column:62}},"103":{start:{line:214,column:29},end:{line:214,column:71}},"104":{start:{line:215,column:16},end:{line:215,column:45}},"105":{start:{line:218,column:4},end:{line:218,column:40}},"106":{start:{line:220,column:28},end:{line:220,column:58}},"107":{start:{line:221,column:22},end:{line:221,column:45}},"108":{start:{line:222,column:4},end:{line:224,column:5}},"109":{start:{line:223,column:6},end:{line:223,column:31}},"110":{start:{line:227,column:4},end:{line:230,column:5}},"111":{start:{line:229,column:6},end:{line:229,column:19}},"112":{start:{line:231,column:4},end:{line:231,column:29}},"113":{start:{line:233,column:4},end:{line:233,column:29}},"114":{start:{line:237,column:20},end:{line:298,column:1}},"115":{start:{line:238,column:17},end:{line:238,column:19}},"116":{start:{line:239,column:17},end:{line:239,column:19}},"117":{start:{line:240,column:14},end:{line:240,column:16}},"118":{start:{line:241,column:17},end:{line:241,column:96}},"119":{start:{line:241,column:29},end:{line:241,column:96}},"120":{start:{line:242,column:19},end:{line:242,column:58}},"121":{start:{line:242,column:31},end:{line:242,column:58}},"122":{start:{line:243,column:23},end:{line:243,column:107}},"123":{start:{line:243,column:35},end:{line:243,column:107}},"124":{start:{line:244,column:19},end:{line:244,column:21}},"125":{start:{line:245,column:22},end:{line:245,column:30}},"126":{start:{line:246,column:23},end:{line:246,column:24}},"127":{start:{line:248,column:24},end:{line:248,column:29}},"128":{start:{line:249,column:24},end:{line:249,column:25}},"129":{start:{line:250,column:2},end:{line:297,column:4}},"130":{start:{line:252,column:22},end:{line:252,column:45}},"131":{start:{line:253,column:6},end:{line:257,column:7}},"132":{start:{line:254,column:8},end:{line:254,column:32}},"133":{start:{line:255,column:8},end:{line:255,column:39}},"134":{start:{line:256,column:8},end:{line:256,column:41}},"135":{start:{line:263,column:6},end:{line:274,column:7}},"136":{start:{line:267,column:8},end:{line:271,column:9}},"137":{start:{line:270,column:10},end:{line:270,column:34}},"138":{start:{line:273,column:8},end:{line:273,column:32}},"139":{start:{line:275,column:6},end:{line:283,column:7}},"140":{start:{line:276,column:8},end:{line:276,column:31}},"141":{start:{line:277,column:8},end:{line:277,column:37}},"142":{start:{line:278,column:8},end:{line:278,column:48}},"143":{start:{line:279,column:8},end:{line:279,column:67}},"144":{start:{line:280,column:13},end:{line:283,column:7}},"145":{start:{line:281,column:8},end:{line:281,column:48}},"146":{start:{line:282,column:8},end:{line:282,column:67}},"147":{start:{line:285,column:6},end:{line:285,column:24}},"148":{start:{line:287,column:26},end:{line:287,column:41}},"149":{start:{line:288,column:26},end:{line:288,column:40}},"150":{start:{line:289,column:22},end:{line:289,column:38}},"151":{start:{line:290,column:20},end:{line:290,column:57}},"152":{start:{line:291,column:19},end:{line:291,column:88}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:7,column:17},end:{line:7,column:18}},loc:{start:{line:7,column:49},end:{line:235,column:1}},line:7},"1":{name:"(anonymous_1)",decl:{start:{line:12,column:20},end:{line:12,column:21}},loc:{start:{line:12,column:44},end:{line:47,column:3}},line:12},"2":{name:"(anonymous_2)",decl:{start:{line:40,column:37},end:{line:40,column:38}},loc:{start:{line:40,column:52},end:{line:40,column:79}},line:40},"3":{name:"(anonymous_3)",decl:{start:{line:55,column:19},end:{line:55,column:20}},loc:{start:{line:55,column:35},end:{line:70,column:3}},line:55},"4":{name:"(anonymous_4)",decl:{start:{line:76,column:24},end:{line:76,column:25}},loc:{start:{line:76,column:37},end:{line:91,column:3}},line:76},"5":{name:"(anonymous_5)",decl:{start:{line:97,column:26},end:{line:97,column:27}},loc:{start:{line:97,column:39},end:{line:113,column:3}},line:97},"6":{name:"(anonymous_6)",decl:{start:{line:120,column:26},end:{line:120,column:27}},loc:{start:{line:120,column:43},end:{line:131,column:3}},line:120},"7":{name:"(anonymous_7)",decl:{start:{line:133,column:14},end:{line:133,column:15}},loc:{start:{line:133,column:22},end:{line:133,column:65}},line:133},"8":{name:"(anonymous_8)",decl:{start:{line:134,column:20},end:{line:134,column:21}},loc:{start:{line:134,column:28},end:{line:134,column:47}},line:134},"9":{name:"(anonymous_9)",decl:{start:{line:142,column:19},end:{line:142,column:20}},loc:{start:{line:142,column:56},end:{line:234,column:3}},line:142},"10":{name:"(anonymous_10)",decl:{start:{line:237,column:20},end:{line:237,column:21}},loc:{start:{line:237,column:26},end:{line:298,column:1}},line:237},"11":{name:"(anonymous_11)",decl:{start:{line:241,column:17},end:{line:241,column:18}},loc:{start:{line:241,column:29},end:{line:241,column:96}},line:241},"12":{name:"(anonymous_12)",decl:{start:{line:242,column:19},end:{line:242,column:20}},loc:{start:{line:242,column:31},end:{line:242,column:58}},line:242},"13":{name:"(anonymous_13)",decl:{start:{line:243,column:23},end:{line:243,column:24}},loc:{start:{line:243,column:35},end:{line:243,column:107}},line:243},"14":{name:"(anonymous_14)",decl:{start:{line:251,column:13},end:{line:251,column:14}},loc:{start:{line:251,column:23},end:{line:286,column:5}},line:251},"15":{name:"(anonymous_15)",decl:{start:{line:287,column:15},end:{line:287,column:16}},loc:{start:{line:287,column:26},end:{line:287,column:41}},line:287},"16":{name:"(anonymous_16)",decl:{start:{line:288,column:20},end:{line:288,column:21}},loc:{start:{line:288,column:26},end:{line:288,column:40}},line:288},"17":{name:"(anonymous_17)",decl:{start:{line:289,column:16},end:{line:289,column:17}},loc:{start:{line:289,column:22},end:{line:289,column:38}},line:289},"18":{name:"(anonymous_18)",decl:{start:{line:290,column:13},end:{line:290,column:14}},loc:{start:{line:290,column:20},end:{line:290,column:57}},line:290},"19":{name:"(anonymous_19)",decl:{start:{line:291,column:13},end:{line:291,column:14}},loc:{start:{line:291,column:19},end:{line:291,column:88}},line:291}},branchMap:{"0":{loc:{start:{line:14,column:4},end:{line:44,column:5}},type:"if",locations:[{start:{line:14,column:4},end:{line:44,column:5}},{start:{line:14,column:4},end:{line:44,column:5}}],line:14},"1":{loc:{start:{line:16,column:6},end:{line:18,column:7}},type:"if",locations:[{start:{line:16,column:6},end:{line:18,column:7}},{start:{line:16,column:6},end:{line:18,column:7}}],line:16},"2":{loc:{start:{line:20,column:11},end:{line:44,column:5}},type:"if",locations:[{start:{line:20,column:11},end:{line:44,column:5}},{start:{line:20,column:11},end:{line:44,column:5}}],line:20},"3":{loc:{start:{line:20,column:15},end:{line:20,column:89}},type:"binary-expr",locations:[{start:{line:20,column:15},end:{line:20,column:31}},{start:{line:20,column:35},end:{line:20,column:45}},{start:{line:20,column:49},end:{line:20,column:89}}],line:20},"4":{loc:{start:{line:22,column:6},end:{line:29,column:7}},type:"if",locations:[{start:{line:22,column:6},end:{line:29,column:7}},{start:{line:22,column:6},end:{line:29,column:7}}],line:22},"5":{loc:{start:{line:24,column:8},end:{line:28,column:9}},type:"if",locations:[{start:{line:24,column:8},end:{line:28,column:9}},{start:{line:24,column:8},end:{line:28,column:9}}],line:24},"6":{loc:{start:{line:24,column:12},end:{line:24,column:42}},type:"binary-expr",locations:[{start:{line:24,column:12},end:{line:24,column:27}},{start:{line:24,column:31},end:{line:24,column:42}}],line:24},"7":{loc:{start:{line:27,column:41},end:{line:27,column:89}},type:"cond-expr",locations:[{start:{line:27,column:64},end:{line:27,column:85}},{start:{line:27,column:88},end:{line:27,column:89}}],line:27},"8":{loc:{start:{line:32,column:19},end:{line:32,column:77}},type:"cond-expr",locations:[{start:{line:32,column:45},end:{line:32,column:72}},{start:{line:32,column:75},end:{line:32,column:77}}],line:32},"9":{loc:{start:{line:40,column:59},end:{line:40,column:78}},type:"cond-expr",locations:[{start:{line:40,column:72},end:{line:40,column:73}},{start:{line:40,column:76},end:{line:40,column:78}}],line:40},"10":{loc:{start:{line:57,column:4},end:{line:68,column:5}},type:"if",locations:[{start:{line:57,column:4},end:{line:68,column:5}},{start:{line:57,column:4},end:{line:68,column:5}}],line:57},"11":{loc:{start:{line:57,column:8},end:{line:57,column:40}},type:"binary-expr",locations:[{start:{line:57,column:8},end:{line:57,column:23}},{start:{line:57,column:27},end:{line:57,column:40}}],line:57},"12":{loc:{start:{line:60,column:6},end:{line:66,column:7}},type:"if",locations:[{start:{line:60,column:6},end:{line:66,column:7}},{start:{line:60,column:6},end:{line:66,column:7}}],line:60},"13":{loc:{start:{line:62,column:17},end:{line:62,column:49}},type:"cond-expr",locations:[{start:{line:62,column:31},end:{line:62,column:42}},{start:{line:62,column:45},end:{line:62,column:49}}],line:62},"14":{loc:{start:{line:65,column:17},end:{line:65,column:42}},type:"cond-expr",locations:[{start:{line:65,column:31},end:{line:65,column:35}},{start:{line:65,column:38},end:{line:65,column:42}}],line:65},"15":{loc:{start:{line:81,column:11},end:{line:81,column:45}},type:"binary-expr",locations:[{start:{line:81,column:11},end:{line:81,column:16}},{start:{line:81,column:20},end:{line:81,column:45}}],line:81},"16":{loc:{start:{line:84,column:11},end:{line:84,column:50}},type:"binary-expr",locations:[{start:{line:84,column:11},end:{line:84,column:23}},{start:{line:84,column:27},end:{line:84,column:50}}],line:84},"17":{loc:{start:{line:103,column:11},end:{line:103,column:59}},type:"binary-expr",locations:[{start:{line:103,column:11},end:{line:103,column:23}},{start:{line:103,column:27},end:{line:103,column:59}}],line:103},"18":{loc:{start:{line:106,column:11},end:{line:106,column:54}},type:"binary-expr",locations:[{start:{line:106,column:11},end:{line:106,column:16}},{start:{line:106,column:20},end:{line:106,column:54}}],line:106},"19":{loc:{start:{line:124,column:6},end:{line:128,column:7}},type:"if",locations:[{start:{line:124,column:6},end:{line:128,column:7}},{start:{line:124,column:6},end:{line:128,column:7}}],line:124},"20":{loc:{start:{line:142,column:33},end:{line:142,column:51}},type:"default-arg",locations:[{start:{line:142,column:47},end:{line:142,column:51}}],line:142},"21":{loc:{start:{line:143,column:4},end:{line:153,column:5}},type:"if",locations:[{start:{line:143,column:4},end:{line:153,column:5}},{start:{line:143,column:4},end:{line:153,column:5}}],line:143},"22":{loc:{start:{line:148,column:6},end:{line:152,column:7}},type:"if",locations:[{start:{line:148,column:6},end:{line:152,column:7}},{start:{line:148,column:6},end:{line:152,column:7}}],line:148},"23":{loc:{start:{line:158,column:11},end:{line:158,column:61}},type:"binary-expr",locations:[{start:{line:158,column:11},end:{line:158,column:36}},{start:{line:158,column:40},end:{line:158,column:61}}],line:158},"24":{loc:{start:{line:195,column:6},end:{line:197,column:7}},type:"if",locations:[{start:{line:195,column:6},end:{line:197,column:7}},{start:{line:195,column:6},end:{line:197,column:7}}],line:195},"25":{loc:{start:{line:195,column:10},end:{line:195,column:84}},type:"binary-expr",locations:[{start:{line:195,column:10},end:{line:195,column:45}},{start:{line:195,column:49},end:{line:195,column:84}}],line:195},"26":{loc:{start:{line:198,column:6},end:{line:200,column:7}},type:"if",locations:[{start:{line:198,column:6},end:{line:200,column:7}},{start:{line:198,column:6},end:{line:200,column:7}}],line:198},"27":{loc:{start:{line:209,column:4},end:{line:211,column:5}},type:"if",locations:[{start:{line:209,column:4},end:{line:211,column:5}},{start:{line:209,column:4},end:{line:211,column:5}}],line:209},"28":{loc:{start:{line:222,column:4},end:{line:224,column:5}},type:"if",locations:[{start:{line:222,column:4},end:{line:224,column:5}},{start:{line:222,column:4},end:{line:224,column:5}}],line:222},"29":{loc:{start:{line:222,column:8},end:{line:222,column:82}},type:"binary-expr",locations:[{start:{line:222,column:8},end:{line:222,column:43}},{start:{line:222,column:47},end:{line:222,column:82}}],line:222},"30":{loc:{start:{line:227,column:4},end:{line:230,column:5}},type:"if",locations:[{start:{line:227,column:4},end:{line:230,column:5}},{start:{line:227,column:4},end:{line:230,column:5}}],line:227},"31":{loc:{start:{line:253,column:6},end:{line:257,column:7}},type:"if",locations:[{start:{line:253,column:6},end:{line:257,column:7}},{start:{line:253,column:6},end:{line:257,column:7}}],line:253},"32":{loc:{start:{line:263,column:6},end:{line:274,column:7}},type:"if",locations:[{start:{line:263,column:6},end:{line:274,column:7}},{start:{line:263,column:6},end:{line:274,column:7}}],line:263},"33":{loc:{start:{line:267,column:8},end:{line:271,column:9}},type:"if",locations:[{start:{line:267,column:8},end:{line:271,column:9}},{start:{line:267,column:8},end:{line:271,column:9}}],line:267},"34":{loc:{start:{line:275,column:6},end:{line:283,column:7}},type:"if",locations:[{start:{line:275,column:6},end:{line:283,column:7}},{start:{line:275,column:6},end:{line:283,column:7}}],line:275},"35":{loc:{start:{line:280,column:13},end:{line:283,column:7}},type:"if",locations:[{start:{line:280,column:13},end:{line:283,column:7}},{start:{line:280,column:13},end:{line:283,column:7}}],line:280},"36":{loc:{start:{line:280,column:17},end:{line:280,column:77}},type:"binary-expr",locations:[{start:{line:280,column:17},end:{line:280,column:43}},{start:{line:280,column:47},end:{line:280,column:77}}],line:280},"37":{loc:{start:{line:290,column:20},end:{line:290,column:57}},type:"cond-expr",locations:[{start:{line:290,column:33},end:{line:290,column:52}},{start:{line:290,column:55},end:{line:290,column:57}}],line:290},"38":{loc:{start:{line:291,column:19},end:{line:291,column:88}},type:"binary-expr",locations:[{start:{line:291,column:19},end:{line:291,column:33}},{start:{line:291,column:37},end:{line:291,column:88}}],line:291}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"fd69d4b4c56d01a05bc74b11d163a7193bc71db2"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const BN=(cov_15qmb2w5au.s[0]++,require("bn.js"));/**
 * @param {Array} ops Array of all ops/steps of the VM
 * @param {Number} lowestIndex Known lowestIndex
 */cov_15qmb2w5au.s[1]++;module.exports=(vm,runArgs,err,callback)=>{cov_15qmb2w5au.f[0]++;const steps=(cov_15qmb2w5au.s[2]++,stepTracker());cov_15qmb2w5au.s[3]++;vm.on("step",steps.collect);cov_15qmb2w5au.s[4]++;vm.runTx(runArgs,function(vmerr,result){cov_15qmb2w5au.f[1]++;const opsLength=(cov_15qmb2w5au.s[5]++,steps.ops.length);cov_15qmb2w5au.s[6]++;if(vmerr){cov_15qmb2w5au.b[0][0]++;cov_15qmb2w5au.s[7]++;// This is a check that has been in there for awhile. I'm unsure if it's required, but it can't hurt.
if(vmerr instanceof Error===false){cov_15qmb2w5au.b[1][0]++;cov_15qmb2w5au.s[8]++;vmerr=new Error("VM error: "+vmerr);}else{cov_15qmb2w5au.b[1][1]++;}cov_15qmb2w5au.s[9]++;return callback(vmerr,err);}else{cov_15qmb2w5au.b[0][1]++;cov_15qmb2w5au.s[10]++;if((cov_15qmb2w5au.b[3][0]++,!steps.success())||(cov_15qmb2w5au.b[3][1]++,!opsLength)||(cov_15qmb2w5au.b[3][2]++,opsLength-1===steps.lowestGasIndex())){cov_15qmb2w5au.b[2][0]++;let estimate=(cov_15qmb2w5au.s[11]++,result.gasUsed);cov_15qmb2w5au.s[12]++;if(opsLength){cov_15qmb2w5au.b[4][0]++;const lastSVT=(cov_15qmb2w5au.s[13]++,steps.lastSVT());cov_15qmb2w5au.s[14]++;if((cov_15qmb2w5au.b[6][0]++,steps.success())&&(cov_15qmb2w5au.b[6][1]++,lastSVT>0)){cov_15qmb2w5au.b[5][0]++;const tailCost=(cov_15qmb2w5au.s[15]++,steps.ops[lastSVT].gasLeft.sub(steps.ops[steps.ops.length-1].gasLeft));const stipend=(cov_15qmb2w5au.s[16]++,new BN(2300));cov_15qmb2w5au.s[17]++;estimate=estimate.add(new BN(tailCost.lt(stipend)?(cov_15qmb2w5au.b[7][0]++,stipend.sub(tailCost)):(cov_15qmb2w5au.b[7][1]++,0)));}else{cov_15qmb2w5au.b[5][1]++;}}else{cov_15qmb2w5au.b[4][1]++;}cov_15qmb2w5au.s[18]++;result.gasEstimate=estimate;}else{cov_15qmb2w5au.b[2][1]++;const data=(cov_15qmb2w5au.s[19]++,runArgs.tx.data!=null?(cov_15qmb2w5au.b[8][0]++,Array.from(runArgs.tx.data)):(cov_15qmb2w5au.b[8][1]++,[]));// Base Fee 21000: cost of an elliptic curve operation to recover the sender pubkey/address from
// signature plus disk and bandwidth space of storing the transaction.
// Data Costs 4 * (# of 0 bytes) + 68 * (# of non-zero bytes)
// This line is just calculating the data costs ^.
// Read: start with 21000, iterate through the data
// (each element represents a byte)
// if the current byte is 0 add 4 otherwise add 68.
const costOfData=(cov_15qmb2w5au.s[20]++,data.reduce((acc,curr)=>{cov_15qmb2w5au.f[2]++;cov_15qmb2w5au.s[21]++;return acc+(curr===0?(cov_15qmb2w5au.b[9][0]++,4):(cov_15qmb2w5au.b[9][1]++,68));},21000));const total=(cov_15qmb2w5au.s[22]++,getTotal(0,steps.ops.length-1,steps.sysOpIndex())+costOfData);cov_15qmb2w5au.s[23]++;result.gasEstimate=new BN(total);}}cov_15qmb2w5au.s[24]++;callback(vmerr,result);});/**
   * Returns the sum of all costs in a range
   * opcode fees, memory expansion costs, return costs, etc
   * @param {Number} start Beginning index
   * @param {Number} end Ending index
   */cov_15qmb2w5au.s[25]++;const sumRange=(start,end)=>{cov_15qmb2w5au.f[3]++;const lastSVT=(cov_15qmb2w5au.s[26]++,steps.lastSVT());cov_15qmb2w5au.s[27]++;if((cov_15qmb2w5au.b[11][0]++,lastSVT>start)&&(cov_15qmb2w5au.b[11][1]++,lastSVT<end)){cov_15qmb2w5au.b[10][0]++;const top=(cov_15qmb2w5au.s[28]++,steps.ops[start].gasLeft-steps.ops[lastSVT].gasLeft);let needed;cov_15qmb2w5au.s[29]++;if(steps.ops[lastSVT].depth){cov_15qmb2w5au.b[12][0]++;const tail=(cov_15qmb2w5au.s[30]++,steps.ops[lastSVT].gasLeft-steps.ops[end-1].gasLeft);cov_15qmb2w5au.s[31]++;needed=tail<2300?(cov_15qmb2w5au.b[13][0]++,2300-tail):(cov_15qmb2w5au.b[13][1]++,tail);}else{cov_15qmb2w5au.b[12][1]++;const tail=(cov_15qmb2w5au.s[32]++,steps.ops[lastSVT].gasLeft-steps.ops[end].gasLeft);cov_15qmb2w5au.s[33]++;needed=tail<2300?(cov_15qmb2w5au.b[14][0]++,2300):(cov_15qmb2w5au.b[14][1]++,tail);}cov_15qmb2w5au.s[34]++;return top+needed;}else{cov_15qmb2w5au.b[10][1]++;}cov_15qmb2w5au.s[35]++;return steps.ops[start].gasLeft-steps.ops[end].gasLeft;};/**
   * Finds the index in systemOps index
   * @param {Number} index index of op in steps.ops
   */cov_15qmb2w5au.s[36]++;const findRootScope=opIndex=>{cov_15qmb2w5au.f[4]++;const index=(cov_15qmb2w5au.s[37]++,steps.findIndex(opIndex));let begin=(cov_15qmb2w5au.s[38]++,index);let end=(cov_15qmb2w5au.s[39]++,index);const length=(cov_15qmb2w5au.s[40]++,steps.systemOps.length);cov_15qmb2w5au.s[41]++;while((cov_15qmb2w5au.b[15][0]++,begin)&&(cov_15qmb2w5au.b[15][1]++,steps.systemOps[begin][1])){cov_15qmb2w5au.s[42]++;--begin;}cov_15qmb2w5au.s[43]++;while((cov_15qmb2w5au.b[16][0]++,end<length)&&(cov_15qmb2w5au.b[16][1]++,steps.systemOps[end][1])){cov_15qmb2w5au.s[44]++;++end;}cov_15qmb2w5au.s[45]++;return{rootBegin:steps.systemOps[begin][0],rootEnd:steps.systemOps[end-1][0]+1// the op after the matching terminator
};};/**
   * Find the range of the current system operation (CREATE, CALL, etc)
   * @param {Number} index Index of the lowest gas point in the domain
   */cov_15qmb2w5au.s[46]++;const findParentScope=opIndex=>{cov_15qmb2w5au.f[5]++;let depth=(cov_15qmb2w5au.s[47]++,steps.ops[opIndex].depth);const index=(cov_15qmb2w5au.s[48]++,steps.findIndex(opIndex));let begin=(cov_15qmb2w5au.s[49]++,index);let end=(cov_15qmb2w5au.s[50]++,index);const length=(cov_15qmb2w5au.s[51]++,steps.systemOps.length);cov_15qmb2w5au.s[52]++;while((cov_15qmb2w5au.b[17][0]++,end<length)&&(cov_15qmb2w5au.b[17][1]++,steps.systemOps[end][1]>=depth)){cov_15qmb2w5au.s[53]++;++end;}cov_15qmb2w5au.s[54]++;while((cov_15qmb2w5au.b[18][0]++,begin)&&(cov_15qmb2w5au.b[18][1]++,steps.systemOps[begin][1]>=depth)){cov_15qmb2w5au.s[55]++;--begin;}cov_15qmb2w5au.s[56]++;return{parentBegin:steps.systemOps[begin][0],parentEnd:steps.systemOps[end-1][0]+1// the op after the matching terminator
};};/**
   * Finds the lowest index in a given search space
   * @param {Number} start The beginning index of the search space
   * @param {Number} stop The ending index of the search space
   */cov_15qmb2w5au.s[57]++;const findLowestIndex=(start,stop)=>{cov_15qmb2w5au.f[6]++;let lowestGas=(cov_15qmb2w5au.s[58]++,Infinity);let lowestIndex=(cov_15qmb2w5au.s[59]++,stop);cov_15qmb2w5au.s[60]++;for(let i=(cov_15qmb2w5au.s[61]++,start);i<=stop;i++){cov_15qmb2w5au.s[62]++;if(steps.ops[i].gasLeft<=lowestGas){cov_15qmb2w5au.b[19][0]++;cov_15qmb2w5au.s[63]++;// Find the new lowest gas index
lowestIndex=i;cov_15qmb2w5au.s[64]++;lowestGas=steps.ops[i].gasLeft;}else{cov_15qmb2w5au.b[19][1]++;}}cov_15qmb2w5au.s[65]++;return lowestIndex;};cov_15qmb2w5au.s[66]++;const gas=op=>{cov_15qmb2w5au.f[7]++;cov_15qmb2w5au.s[67]++;return parseInt(`0x${op.gasLeft.toString("hex")}`);};cov_15qmb2w5au.s[68]++;const isStipend=op=>{cov_15qmb2w5au.f[8]++;cov_15qmb2w5au.s[69]++;return op.gasLeft===2300;};/**
   * Calculates the total gas needed with respect to EIP150
   * @param {Number} start The beginning index of the search space
   * @param {Number} stop The ending index of the search space
   * @param {Number|null} lowestIndex If the index of the lowest gas point is known otherwise null
   */cov_15qmb2w5au.s[70]++;const getTotal=(start,stop,lowestIndex=(cov_15qmb2w5au.b[20][0]++,null))=>{cov_15qmb2w5au.f[9]++;cov_15qmb2w5au.s[71]++;if(lowestIndex){cov_15qmb2w5au.b[21][0]++;cov_15qmb2w5au.s[72]++;lowestIndex=steps.systemOps[lowestIndex][0];}else{cov_15qmb2w5au.b[21][1]++;cov_15qmb2w5au.s[73]++;// If the lowest index is not known ( on recursive calls if the contract is tail heavy )
lowestIndex=findLowestIndex(start,stop);cov_15qmb2w5au.s[74]++;if(lowestIndex===stop){cov_15qmb2w5au.b[22][0]++;cov_15qmb2w5au.s[75]++;// If the lowest index is the last operation in the range
// Return the sum of the range
return sumRange(start,stop);}else{cov_15qmb2w5au.b[22][1]++;}}const{rootBegin,rootEnd}=(cov_15qmb2w5au.s[76]++,findRootScope(lowestIndex));let{parentBegin,parentEnd}=(cov_15qmb2w5au.s[77]++,findParentScope(lowestIndex));let systemOpSum=(cov_15qmb2w5au.s[78]++,0);cov_15qmb2w5au.s[79]++;while((cov_15qmb2w5au.b[23][0]++,rootBegin!==parentBegin)&&(cov_15qmb2w5au.b[23][1]++,rootEnd!==parentEnd)){// assert xnor
// TODO: Assert op must be a System op: CREATE/CALL/etc
const callingSysOp=(cov_15qmb2w5au.s[80]++,steps.ops[parentBegin]);// Cost of the system operation itself
const callingFee=(cov_15qmb2w5au.s[81]++,callingSysOp.opcode.fee);const sumOfCurrentSysOp=(cov_15qmb2w5au.s[82]++,sumRange(parentBegin,parentEnd)-callingFee);// What we need before the 1/64 is held back
const neededBefore6364=(cov_15qmb2w5au.s[83]++,sumOfCurrentSysOp+Math.floor(sumOfCurrentSysOp/63));const oneSixtyFloorth=(cov_15qmb2w5au.s[84]++,neededBefore6364-sumOfCurrentSysOp);cov_15qmb2w5au.s[85]++;systemOpSum=neededBefore6364+callingFee;const next=(cov_15qmb2w5au.s[86]++,steps.findIndex(lowestIndex)+1);const prevParentBegin=(cov_15qmb2w5au.s[87]++,parentBegin);const prevParentEnd=(cov_15qmb2w5au.s[88]++,parentEnd);cov_15qmb2w5au.s[89]++;({parentBegin,parentEnd}=findParentScope(steps.systemOps[next][0]));cov_15qmb2w5au.s[90]++;lowestIndex=parentEnd-1;// Sum to the top of the range above sysOp
cov_15qmb2w5au.s[91]++;systemOpSum+=gas(steps.ops[parentBegin+1])-gas(steps.ops[prevParentBegin]);// systemOpSum += sumRange(parentBegin - 1, prevParentBegin);
// Sum of the remaining steps after the current (outer) system operation
const costOfParentReturn=(cov_15qmb2w5au.s[92]++,gas(steps.ops[parentEnd-1])-gas(steps.ops[parentEnd])+gas(steps.ops[parentBegin])-steps.ops[parentBegin].opcode.fee-gas(steps.ops[parentBegin+1]));// recursively sum the remaining search space and return this total minus the 1/64th we already accounted for
const remaining=(cov_15qmb2w5au.s[93]++,getTotal(prevParentEnd,lowestIndex)+costOfParentReturn);// if ((stipend && stipend < remaining) || oneSixtyFloorth < remaining) {
let tail=(cov_15qmb2w5au.s[94]++,oneSixtyFloorth);cov_15qmb2w5au.s[95]++;if((cov_15qmb2w5au.b[25][0]++,callingSysOp.opcode.name==="CALL")&&(cov_15qmb2w5au.b[25][1]++,isStipend(steps.ops[rootBegin+1]))){cov_15qmb2w5au.b[24][0]++;cov_15qmb2w5au.s[96]++;tail=2300;}else{cov_15qmb2w5au.b[24][1]++;}cov_15qmb2w5au.s[97]++;if(tail<remaining){cov_15qmb2w5au.b[26][0]++;cov_15qmb2w5au.s[98]++;systemOpSum=0;}else{cov_15qmb2w5au.b[26][1]++;}}// TODO: Assert op must be a System op: CREATE/CALL/etc
const callingSysOp=(cov_15qmb2w5au.s[99]++,steps.ops[rootBegin]);// Cost of the system operation itself
const callingFee=(cov_15qmb2w5au.s[100]++,callingSysOp.opcode.fee);cov_15qmb2w5au.s[101]++;if(!systemOpSum){cov_15qmb2w5au.b[27][0]++;cov_15qmb2w5au.s[102]++;systemOpSum=sumRange(rootBegin,rootEnd)-callingFee;}else{cov_15qmb2w5au.b[27][1]++;}// What we need before the 1/64 is held back
const neededBefore6364=(cov_15qmb2w5au.s[103]++,systemOpSum+Math.floor(systemOpSum/63));let total=(cov_15qmb2w5au.s[104]++,neededBefore6364+callingFee);// Sum to the top of the range above sysOp
cov_15qmb2w5au.s[105]++;total+=sumRange(start,rootBegin);const oneSixtyFloorth=(cov_15qmb2w5au.s[106]++,neededBefore6364-systemOpSum);const remaining=(cov_15qmb2w5au.s[107]++,getTotal(rootEnd,stop));cov_15qmb2w5au.s[108]++;if((cov_15qmb2w5au.b[29][0]++,callingSysOp.opcode.name==="CALL")&&(cov_15qmb2w5au.b[29][1]++,isStipend(steps.ops[rootBegin+1]))){cov_15qmb2w5au.b[28][0]++;cov_15qmb2w5au.s[109]++;return total-remaining;}else{cov_15qmb2w5au.b[28][1]++;}// Recursively Sum of the remaining steps after the current (outer) system operation
cov_15qmb2w5au.s[110]++;if(oneSixtyFloorth>remaining){cov_15qmb2w5au.b[30][0]++;cov_15qmb2w5au.s[111]++;// If we withhold more than the cost of all remaining operations
return total;}else{cov_15qmb2w5au.b[30][1]++;}cov_15qmb2w5au.s[112]++;total-=oneSixtyFloorth;cov_15qmb2w5au.s[113]++;return total+remaining;};};cov_15qmb2w5au.s[114]++;const stepTracker=()=>{cov_15qmb2w5au.f[10]++;const sysOps=(cov_15qmb2w5au.s[115]++,[]);const allOps=(cov_15qmb2w5au.s[116]++,[]);const svt=(cov_15qmb2w5au.s[117]++,[]);cov_15qmb2w5au.s[118]++;const isCall=opname=>{cov_15qmb2w5au.f[11]++;cov_15qmb2w5au.s[119]++;return["CALL","DELEGATECALL","STATICCALL","CALLCODE"].includes(opname);};cov_15qmb2w5au.s[120]++;const isCreate=opname=>{cov_15qmb2w5au.f[12]++;cov_15qmb2w5au.s[121]++;return["CREATE"].includes(opname);};cov_15qmb2w5au.s[122]++;const isTerminator=opname=>{cov_15qmb2w5au.f[13]++;cov_15qmb2w5au.s[123]++;return["STOP","RETURN","REVERT","INVALID","SELFDESTRUCT"].includes(opname);};const indexMap=(cov_15qmb2w5au.s[124]++,{});let lowestGasLeft=(cov_15qmb2w5au.s[125]++,Infinity);let lowestGasIndex=(cov_15qmb2w5au.s[126]++,0);let lowestSysOpIndex;let simpleCallCheck=(cov_15qmb2w5au.s[127]++,false);let simpleCallDepth=(cov_15qmb2w5au.s[128]++,0);cov_15qmb2w5au.s[129]++;return{collect:info=>{cov_15qmb2w5au.f[14]++;const gasLeft=(cov_15qmb2w5au.s[130]++,info.gasLeft.toNumber());cov_15qmb2w5au.s[131]++;if(lowestGasLeft>gasLeft){cov_15qmb2w5au.b[31][0]++;cov_15qmb2w5au.s[132]++;lowestGasLeft=gasLeft;cov_15qmb2w5au.s[133]++;lowestGasIndex=allOps.length;cov_15qmb2w5au.s[134]++;lowestSysOpIndex=sysOps.length;}else{cov_15qmb2w5au.b[31][1]++;}// This is checking for what ive been calling a simple value transfer
// where there is a CALL operation with no subsequent STOP/RETURN
// and where the `call depth` never increases.
// It's usually as a result of a .send or .transfer in solidity to an
// external account or a contract with no payable
cov_15qmb2w5au.s[135]++;if(simpleCallCheck){cov_15qmb2w5au.b[32][0]++;cov_15qmb2w5au.s[136]++;// simpleCallCheck acts as a boolean flag checking whether the previous
// operation was a CALL. The flag is set during the `isCall` conditional
// as well as the simpleCallDepth so its always `up-to-date`.
if(info.depth===simpleCallDepth){cov_15qmb2w5au.b[33][0]++;cov_15qmb2w5au.s[137]++;// If the current depth (info.depth) equals the depth of a simpleCall
// we record its position.  we can probably use a variable rather than an array
svt.push(allOps.length);}else{cov_15qmb2w5au.b[33][1]++;}// Reset the flag immedietely here
cov_15qmb2w5au.s[138]++;simpleCallCheck=false;}else{cov_15qmb2w5au.b[32][1]++;}cov_15qmb2w5au.s[139]++;if(isCall(info.opcode.name)){cov_15qmb2w5au.b[34][0]++;cov_15qmb2w5au.s[140]++;simpleCallCheck=true;cov_15qmb2w5au.s[141]++;simpleCallDepth=info.depth;cov_15qmb2w5au.s[142]++;indexMap[allOps.length]=sysOps.length;cov_15qmb2w5au.s[143]++;sysOps.push([allOps.length,info.depth,info.opcode.name]);}else{cov_15qmb2w5au.b[34][1]++;cov_15qmb2w5au.s[144]++;if((cov_15qmb2w5au.b[36][0]++,isCreate(info.opcode.name))||(cov_15qmb2w5au.b[36][1]++,isTerminator(info.opcode.name))){cov_15qmb2w5au.b[35][0]++;cov_15qmb2w5au.s[145]++;indexMap[allOps.length]=sysOps.length;cov_15qmb2w5au.s[146]++;sysOps.push([allOps.length,info.depth,info.opcode.name]);}else{cov_15qmb2w5au.b[35][1]++;}}cov_15qmb2w5au.s[147]++;allOps.push(info);// This goes last so we can use the length for the index ^
},findIndex:index=>{cov_15qmb2w5au.f[15]++;cov_15qmb2w5au.s[148]++;return indexMap[index];},lowestGasIndex:()=>{cov_15qmb2w5au.f[16]++;cov_15qmb2w5au.s[149]++;return lowestGasIndex;},sysOpIndex:()=>{cov_15qmb2w5au.f[17]++;cov_15qmb2w5au.s[150]++;return lowestSysOpIndex;},lastSVT:()=>{cov_15qmb2w5au.f[18]++;cov_15qmb2w5au.s[151]++;return svt.length?(cov_15qmb2w5au.b[37][0]++,svt[svt.length-1]):(cov_15qmb2w5au.b[37][1]++,-1);},success:()=>{cov_15qmb2w5au.f[19]++;cov_15qmb2w5au.s[152]++;return(cov_15qmb2w5au.b[38][0]++,!allOps.length)||(cov_15qmb2w5au.b[38][1]++,isTerminator(allOps[allOps.length-1].opcode.name));},ops:allOps,systemOps:sysOps,simpleValueTransfers:svt,isTerminator:isTerminator,isCall:isCall};};
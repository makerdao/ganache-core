var cov_25ecqztll8=function(){var path="/Users/Tyler/ganache-fork/ganache-core/lib/utils/log.js";var hash="89bf81c601cdc4015adba11d4cdda66258eb275e";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/Tyler/ganache-fork/ganache-core/lib/utils/log.js",statementMap:{"0":{start:{line:1,column:9},end:{line:1,column:27}},"1":{start:{line:15,column:13},end:{line:15,column:17}},"2":{start:{line:16,column:2},end:{line:18,column:5}},"3":{start:{line:17,column:4},end:{line:17,column:26}},"4":{start:{line:21,column:0},end:{line:36,column:2}},"5":{start:{line:25,column:2},end:{line:35,column:4}},"6":{start:{line:38,column:0},end:{line:38,column:21}}},fnMap:{"0":{name:"Log",decl:{start:{line:14,column:9},end:{line:14,column:12}},loc:{start:{line:14,column:19},end:{line:19,column:1}},line:14},"1":{name:"(anonymous_1)",decl:{start:{line:16,column:28},end:{line:16,column:29}},loc:{start:{line:16,column:42},end:{line:18,column:3}},line:16},"2":{name:"(anonymous_2)",decl:{start:{line:21,column:23},end:{line:21,column:24}},loc:{start:{line:21,column:34},end:{line:36,column:1}},line:21}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},f:{"0":0,"1":0,"2":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"89bf81c601cdc4015adba11d4cdda66258eb275e"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();var to=(cov_25ecqztll8.s[0]++,require("./to.js"));// Expects:
//
// logIndex: ...
// transactionIndex: ...
// transactionHash: ...
// block: ...
// address: ...
// data: ...
// topics: ...
// type: ...
function Log(data){cov_25ecqztll8.f[0]++;var self=(cov_25ecqztll8.s[1]++,this);cov_25ecqztll8.s[2]++;Object.keys(data).forEach(function(key){cov_25ecqztll8.f[1]++;cov_25ecqztll8.s[3]++;self[key]=data[key];});}cov_25ecqztll8.s[4]++;Log.prototype.toJSON=function(){cov_25ecqztll8.f[2]++;cov_25ecqztll8.s[5]++;// RPC quantity values like this.transactionIndex can be set to "0x00",
// use the explicit rpcQuantityHexString to properly format the JSON, removing leading zeroes.
// See RPC log format spec: https://github.com/ethereum/wiki/wiki/JSON-RPC
return{logIndex:to.rpcQuantityHexString(this.logIndex),transactionIndex:to.rpcQuantityHexString(this.transactionIndex),transactionHash:to.rpcDataHexString(this.transactionHash),blockHash:to.rpcDataHexString(this.block.hash()),blockNumber:to.rpcQuantityHexString(this.block.header.number),address:to.rpcDataHexString(this.address),data:to.rpcDataHexString(this.data),topics:this.topics,type:"mined"};};cov_25ecqztll8.s[6]++;module.exports=Log;